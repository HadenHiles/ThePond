<?php

return <<<'VALUE'
"namespace IPS\\Theme;\nclass class_core_front_popular extends \\IPS\\Theme\\Template\n{\n\tpublic $cache_key = '0b2449a0f3ecc2efcbf0c0545e5a6ce8';\n\tfunction memberRow( $member, $rep=NULL, $trophy=0, $contentLabel='members_member_posts', $contentCount='member_posts' ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\n$rep = $rep ?: $member->pp_reputation_points;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\n$contentCount = $contentCount ? $member->$contentCount : $member->member_posts;\n$return .= <<<CONTENT\n\n<li class=\"ipsGrid_span3 ipsStreamItem ipsStreamItem_contentBlock cTopMembers_member ipsAreaBackground_reset ipsPad ipsType_center\">\n\t\nCONTENT;\n\nif ( $trophy ):\n$return .= <<<CONTENT\n\n\t<span class=\"ipsLeaderboard_trophy ipsLeaderboard_trophy_\nCONTENT;\n$return .= htmlspecialchars( $trophy, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\t<i class=\"fa fa-trophy\"><\/i>\n\t<\/span>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->userPhoto( $member, 'medium' );\n$return .= <<<CONTENT\n\n\t<div class='ipsStreamItem_container'>\n\t\t<div class='ipsStreamItem_header ipsSpacer_top ipsSpacer_half'>\n\t\t\t<h2 class='ipsType_reset ipsStreamItem_title ipsTruncate ipsTruncate_line' data-searchable>\n\t\t\t\t\nCONTENT;\n\nif ( \\IPS\\Member::loggedIn()->canAccessModule( \\IPS\\Application\\Module::get( 'core', 'members', 'front' ) ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->userLink( $member );\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $member->name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<\/h2>\n\t\t\t<p class='ipsType_reset ipsType_medium'>{$member->groupName}<\/p>\n\t\t<\/div>\n\n\t\t<hr class='ipsHr ipsHr_small'>\n\n\t\t<ul class='ipsList_reset ipsGrid'>\n\t\t\t<li class='ipsGrid_span6 ipsList_reset ipsType_center'>\n\t\t\t\t<h3 class='ipsType_minorHeading ipsType_unbold'>\n\t\t\t\t\t\nCONTENT;\n\nif ( \\IPS\\Content\\Reaction::isLikeMode() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'rep_system_like', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'rep_level_points', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/h3>\n\t\t\t\t<p class='ipsType_reset ipsTruncate ipsTruncate_line'>\n\t\t\t\t\t\nCONTENT;\n\nif ( \\IPS\\Member::loggedIn()->group['gbw_view_reps'] ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<a href='\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=members&controller=profile&id={$member->member_id}&do=reputation\", null, \"profile_reputation\", array( $member->members_seo_name ), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n' title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'reputation_badge_tooltip_period', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" data-ipsTooltip class='ipsRepBadge ipsType_medium \nCONTENT;\n\nif ( $rep > 0 ):\n$return .= <<<CONTENT\nipsRepBadge_positive\nCONTENT;\n\nelseif ( $rep < 0 ):\n$return .= <<<CONTENT\nipsRepBadge_negative\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\nipsRepBadge_neutral\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'><i class='fa \nCONTENT;\n\nif ( $rep > 0 ):\n$return .= <<<CONTENT\nfa-plus-circle\nCONTENT;\n\nelseif ( $rep < 0 ):\n$return .= <<<CONTENT\nfa-minus-circle\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\nfa-circle-o\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'><\/i> \nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Member::loggedIn()->language()->formatNumber( $rep ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<span title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'reputation_badge_tooltip_period', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" data-ipsTooltip class='ipsRepBadge ipsType_medium \nCONTENT;\n\nif ( $rep > 0 ):\n$return .= <<<CONTENT\nipsRepBadge_positive\nCONTENT;\n\nelseif ( $rep < 0 ):\n$return .= <<<CONTENT\nipsRepBadge_negative\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\nipsRepBadge_neutral\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'><i class='fa \nCONTENT;\n\nif ( $rep > 0 ):\n$return .= <<<CONTENT\nfa-plus-circle\nCONTENT;\n\nelseif ( $rep < 0 ):\n$return .= <<<CONTENT\nfa-minus-circle\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\nfa-circle-o\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'><\/i> \nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Member::loggedIn()->language()->formatNumber( $rep ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/p>\n\t\t\t<\/li>\n\t\t\t<li class='ipsGrid_span6 ipsList_reset ipsType_center'>\n\t\t\t\t<h3 class='ipsType_minorHeading ipsType_unbold'>\nCONTENT;\n\n$val = \"{$contentLabel}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h3>\n\t\t\t\t<p class='ipsType_reset ipsTruncate ipsTruncate_line ipsType_medium'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->formatNumber( $contentCount );\n$return .= <<<CONTENT\n<\/p>\n\t\t\t<\/li>\n\t\t<\/ul>\n\n\t\t<hr class='ipsHr ipsHr_small'>\n\t\t\nCONTENT;\n\n$showFollowButton = ( \\IPS\\Member::loggedIn()->member_id != $member->member_id and ( !$member->members_bitoptions['pp_setting_moderate_followers'] or \\IPS\\Member::loggedIn()->following( 'core', 'member', $member->member_id ) ) );\n$return .= <<<CONTENT\n\n\t\t<ul class='ipsList_reset \nCONTENT;\n\nif ( ! $showFollowButton ):\n$return .= <<<CONTENT\ncTopMembers_NoFollowButton\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\n\t\t\t<li class='\nCONTENT;\n\nif ( $showFollowButton ):\n$return .= <<<CONTENT\nipsSpacer_bottom ipsSpacer_half\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\n\t\t\t\t<a href='\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=members&controller=profile&do=content&id={$member->member_id}\", \"front\", \"profile_content\", array( $member->members_seo_name ), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_fullWidth ipsButton_light ipsButton_small'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'find_content', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t<\/li>\n\t\t\t\nCONTENT;\n\nif ( $showFollowButton ):\n$return .= <<<CONTENT\n\n\t\t\t\t<li>\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"profile\", \"core\" )->memberFollow( 'core', 'member', $member->member_id, $member->followersCount(), TRUE );\n$return .= <<<CONTENT\n\n\t\t\t\t<\/li>\n\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t<li><\/li>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<\/ul>\n\t<\/div>\n<\/li>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction popularItem( $indexData, $articles, $authorData, $itemData, $unread, $objectUrl, $itemUrl, $containerUrl, $containerTitle, $repCount, $showRepUrl, $snippet, $iPostedIn, $view, $canIgnoreComments=FALSE ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<li class='cPopularItem ipsStreamItem ipsStreamItem_expanded ipsStreamItem_contentBlock ipsAreaBackground_reset'>\n\t<div class='cPopularItem_stats ipsType_center'>\n\t\t\nCONTENT;\n\nif ( \\IPS\\Content\\Reaction::isLikeMode() ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( \\IPS\\Member::loggedIn()->group['gbw_view_reps'] ):\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nif ( \\in_array( 'IPS\\Content\\Review', class_parents( $indexData['index_class'] ) ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $objectUrl->setQueryString( array( 'do' => 'showReactionsReview', 'review' => $indexData['index_object_id'] ) ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-ipsDialog data-ipsDialog-destructOnClose data-ipsDialog-size='narrow' data-ipsDialog-title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'like_log_title', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'see_who_liked', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" data-ipsToolTip><i class='fa fa-heart'><\/i> \nCONTENT;\n$return .= htmlspecialchars( $indexData['rep_data']['total_rep'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\nCONTENT;\n\nelseif ( \\in_array( 'IPS\\Content\\Comment', class_parents( $indexData['index_class'] ) ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $objectUrl->setQueryString( array( 'do' => 'showReactionsComment', 'comment' => $indexData['index_object_id'] ) ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-ipsDialog data-ipsDialog-destructOnClose data-ipsDialog-size='narrow' data-ipsDialog-title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'like_log_title', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'see_who_liked', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" data-ipsToolTip><i class='fa fa-heart'><\/i> \nCONTENT;\n$return .= htmlspecialchars( $indexData['rep_data']['total_rep'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $objectUrl->setQueryString( array( 'do' => 'showReactions' ) ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-ipsDialog data-ipsDialog-destructOnClose data-ipsDialog-size='narrow' data-ipsDialog-title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'like_log_title', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'see_who_liked', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" data-ipsToolTip><i class='fa fa-heart'><\/i> \nCONTENT;\n$return .= htmlspecialchars( $indexData['rep_data']['total_rep'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t<i class='fa fa-heart'><\/i> \nCONTENT;\n$return .= htmlspecialchars( $indexData['rep_data']['total_rep'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<span>\nCONTENT;\n\n$pluralize = array( $indexData['rep_data']['total_rep'] ); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'like_blurb_pluralized', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'pluralize' => $pluralize ) );\n$return .= <<<CONTENT\n<\/span>\n\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( $indexData['rep_data']['rep_rating'] === 1 ):\n$return .= <<<CONTENT\n\n\t\t\t\t<i class='fa fa-arrow-up'><\/i>\n\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t<i class='fa fa-down-up'><\/i>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlspecialchars( $indexData['rep_data']['total_rep'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t<span>\nCONTENT;\n\n$pluralize = array( $indexData['rep_data']['total_rep'] ); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'rep_level_points_pluralized', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'pluralize' => $pluralize ) );\n$return .= <<<CONTENT\n<\/span>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/div>\n\t<div>\n\t\t<div class='ipsContained_container'>\n\t\t\t<div class=\"ipsStreamItem_header ipsPhotoPanel ipsPhotoPanel_mini\">\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->userPhoto( \\IPS\\Member::load( $indexData['index_author'] ), 'mini' );\n$return .= <<<CONTENT\n\n\t\t\t\t<div>\n\t\t\t\t\t<h2 class=\"ipsType_reset ipsStreamItem_title ipsContained ipsType_break\">\n\t\t\t\t\t\t\nCONTENT;\n\nif ( !\\IPS\\Content\\Reaction::isLikeMode() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( \\in_array( 'IPS\\Content\\Comment', class_parents( $indexData['index_class'] ) ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\n$itemClass = $indexData['index_class']::$itemClass;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $objectUrl, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n$return .= htmlspecialchars( $itemData[ $itemClass::$databasePrefix . $itemClass::$databaseColumnMap['title'] ], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $objectUrl, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n$return .= htmlspecialchars( $indexData['index_title'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( \\in_array( 'IPS\\Content\\Comment', class_parents( $indexData['index_class'] ) ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\n$itemClass = $indexData['index_class']::$itemClass;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $itemUrl, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n$return .= htmlspecialchars( $itemData[ $itemClass::$databasePrefix . $itemClass::$databaseColumnMap['title'] ], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $objectUrl, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n$return .= htmlspecialchars( $indexData['index_title'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/h2>\n\t\t\t\t\t\nCONTENT;\n\nif ( \\IPS\\Member::loggedIn()->group['gbw_view_reps'] ):\n$return .= <<<CONTENT\n\t\t\t\n\t\t\t\t\t<p class=\"ipsType_reset ipsStreamItem_status ipsType_light ipsType_blendLinks\">\n\t\t\t\t\t\t\nCONTENT;\n\n$membersLiked = \\IPS\\Member::load( $indexData['rep_data']['member_id'] )->link();\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $indexData['rep_data']['total_rep'] == 2 ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( \\in_array( 'IPS\\Content\\Review', class_parents( $indexData['index_class'] ) ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\n$membersLiked = \\IPS\\Member::loggedIn()->language()->addToStack('replog_member_and_one_other', NULL, array( 'htmlsprintf' => array( $membersLiked, $objectUrl->setQueryString( array( 'do' => 'showReactionsReview', 'review' => $indexData['index_object_id'] ) ) ) ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nelseif ( \\in_array( 'IPS\\Content\\Comment', class_parents( $indexData['index_class'] ) ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\n$membersLiked = \\IPS\\Member::loggedIn()->language()->addToStack('replog_member_and_one_other', NULL, array( 'htmlsprintf' => array( $membersLiked, $objectUrl->setQueryString( array( 'do' => 'showReactionsComment', 'comment' => $indexData['index_object_id'] ) ) ) ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\n$membersLiked = \\IPS\\Member::loggedIn()->language()->addToStack('replog_member_and_one_other', NULL, array( 'htmlsprintf' => array( $membersLiked, $objectUrl->setQueryString('do', 'showReactions') ) ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nelseif ( $indexData['rep_data']['total_rep'] > 2 ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( \\in_array( 'IPS\\Content\\Review', class_parents( $indexData['index_class'] ) ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\n$membersLiked = \\IPS\\Member::loggedIn()->language()->addToStack('replog_member_and_x_other', NULL, array( 'htmlsprintf' => array( \\IPS\\Member::load( $indexData['rep_data']['member_id'] )->link(), $objectUrl->setQueryString( array( 'do' => 'showReactionsReview', 'review' => $indexData['index_object_id'] ) ), $indexData['rep_data']['total_rep']-1 ) ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nelseif ( \\in_array( 'IPS\\Content\\Comment', class_parents( $indexData['index_class'] ) ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\n$membersLiked = \\IPS\\Member::loggedIn()->language()->addToStack('replog_member_and_x_other', NULL, array( 'htmlsprintf' => array( \\IPS\\Member::load( $indexData['rep_data']['member_id'] )->link(), $objectUrl->setQueryString( array( 'do' => 'showReactionsComment', 'comment' => $indexData['index_object_id'] ) ), $indexData['rep_data']['total_rep']-1 ) ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\n$membersLiked = \\IPS\\Member::loggedIn()->language()->addToStack('replog_member_and_x_other', NULL, array( 'htmlsprintf' => array( $membersLiked, $objectUrl->setQueryString('do', 'showReactions'), $indexData['rep_data']['total_rep']-1 ) ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nif ( !\\IPS\\Content\\Reaction::isLikeMode() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( \\in_array( 'IPS\\Content\\Comment', class_parents( $indexData['index_class'] ) ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\n$itemClass = $indexData['index_class']::$itemClass;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $indexData['rep_data']['member_received'] ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$htmlsprintf = array($membersLiked, \\IPS\\Member::load( $indexData['rep_data']['member_received'] )->link(), $indexData['index_class']::_indefiniteArticle()); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'replog_rate_item_gave_no_in', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'htmlsprintf' => $htmlsprintf ) );\n$return .= <<<CONTENT\n \n\t\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$htmlsprintf = array($membersLiked, $indexData['index_class']::_indefiniteArticle()); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'replog_rate_item_gave_no_recipient_no_in', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'htmlsprintf' => $htmlsprintf ) );\n$return .= <<<CONTENT\n \n\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $indexData['rep_data']['member_received'] ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$htmlsprintf = array($membersLiked, \\IPS\\Member::load( $indexData['rep_data']['member_received'] )->link(), $indexData['index_class']::_indefiniteArticle()); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'replog_rate_item_gave_no_in', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'htmlsprintf' => $htmlsprintf ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$htmlsprintf = array($membersLiked, $indexData['index_class']::_indefiniteArticle()); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'replog_rate_item_gave_no_recipient_no_in', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'htmlsprintf' => $htmlsprintf ) );\n$return .= <<<CONTENT\n \n\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( \\in_array( 'IPS\\Content\\Comment', class_parents( $indexData['index_class'] ) ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\n$itemClass = $indexData['index_class']::$itemClass;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $indexData['rep_data']['member_received'] ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$htmlsprintf = array($membersLiked, $objectUrl, $indexData['index_class']::_indefiniteArticle(), \\IPS\\Member::load( $indexData['rep_data']['member_received'] )->link()); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'replog_like_comment_no_in', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'htmlsprintf' => $htmlsprintf ) );\n$return .= <<<CONTENT\n \n\t\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$htmlsprintf = array($membersLiked, $objectUrl, $indexData['index_class']::_indefiniteArticle()); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'replog_like_comment_no_recipient_no_in', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'htmlsprintf' => $htmlsprintf ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $indexData['rep_data']['member_received'] ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$htmlsprintf = array($membersLiked, $indexData['index_class']::_indefiniteArticle(), \\IPS\\Member::load( $indexData['rep_data']['member_received'] )->link()); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'replog_like_item_no_in', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'htmlsprintf' => $htmlsprintf ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$htmlsprintf = array($membersLiked, $indexData['index_class']::_indefiniteArticle()); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'replog_like_item_no_recipient_no_in', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'htmlsprintf' => $htmlsprintf ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/p>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t\nCONTENT;\n\nif ( $snippet ):\n$return .= <<<CONTENT\n\n\t\t\t\t<div class=\"ipsStreamItem_snippet ipsType_break\">\n\t\t\t\t\t<div class=\"ipsType_richText ipsContained ipsType_medium\">\n\t\t\t\t\t\t{$snippet}\n\t\t\t\t\t<\/div>\t\t\t\n\t\t\t\t<\/div>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<ul class=\"ipsList_inline ipsStreamItem_meta\">\n\t\t\t\t<li class=\"ipsType_light ipsType_medium\">\n\t\t\t\t\t<a href=\"\nCONTENT;\n$return .= htmlspecialchars( $objectUrl, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" class=\"ipsType_blendLinks\"><i class=\"fa fa-clock-o\"><\/i> \nCONTENT;\n\n$val = ( $indexData['index_date_updated'] instanceof \\IPS\\DateTime ) ? $indexData['index_date_updated'] : \\IPS\\DateTime::ts( $indexData['index_date_updated'] );$return .= $val->html();\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t<\/li>\t\t\t\t\t\n\t\t\t<\/ul>\n\t\t<\/div>\n\t<\/div>\n<\/li>\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction popularItems( $results ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\n$currentSeparator = NULL;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( \\count( $results ) ):\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nforeach ( $results as $result ):\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( $result !== NULL ):\n$return .= <<<CONTENT\n\n\t\t\t{$result->html( 'expanded', FALSE, TRUE, array( \\IPS\\Theme::i()->getTemplate( 'popular', 'core', 'front' ), 'popularItem' ) )}\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t<li class='ipsType_center ipsPad' data-role=\"streamNoResultsMessage\">\n\t\t<p class='ipsType_reset ipsType_light ipsType_normal'>\n\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'popular_no_results', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t<\/p>\n\t<\/li>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction popularRows( $table, $headers, $rows ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( empty( $rows ) ):\n$return .= <<<CONTENT\n\n\t<li class='ipsAreaBackground_light ipsPad_double ipsType_light ipsType_center'>\n\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'no_results', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t<\/li>\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\n$currentDate = null;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\n$rowCounts = array();\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nforeach ( $rows as $r ):\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\n$nextDate = md5( $r['leader_date']->dayAndMonth() . $r['leader_date']->format('Y') );\n$return .= <<<CONTENT\n\n\t\t\n\t\t\nCONTENT;\n\nif ( $currentDate !== $nextDate ):\n$return .= <<<CONTENT\n\n\t\t\t<li class='cPastLeaders_row'>\n\t\t\t\t<h2 class='cPastLeaders_title ipsType_sectionHead'>\n\t\t\t\t\t<span><a href=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=discover&controller=popular&tab=leaderboard&custom_date_start={$r['leader_date']->getTimeStamp()}&custom_date_end={$r['leader_date']->getTimeStamp()}\", null, \"leaderboard_leaderboard\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n\">\nCONTENT;\n$return .= htmlspecialchars( $r['leader_date']->dayAndMonth(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlspecialchars( $r['leader_date']->format('Y'), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a><\/span>\n\t\t\t\t<\/h2>\n\t\t\t\t<div class='ipsGrid ipsGrid_collapsePhone'>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( ! $r['leader_member_id']->member_id or ! $r['leader_rep_total'] ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<div class='ipsGrid_span4'>\n\t\t\t\t\t\t<div class='cPastLeaders_cell cPastLeaders_cellEmpty'>&nbsp;<\/div>\n\t\t\t\t\t<\/div>\n\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t<div class='ipsGrid_span4'>\n\t\t\t\t\t\t<div class='cPastLeaders_cell' data-position='\nCONTENT;\n\n$val = \"leader_position_{$r['leader_position']}_short\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t\t\t<span class=\"ipsPos_left ipsLeaderboard_trophy ipsLeaderboard_trophy_\nCONTENT;\n$return .= htmlspecialchars( $r['leader_position'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-ipsTooltip title=\"\nCONTENT;\n\n$val = \"leader_position_{$r['leader_position']}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\">\n\t\t\t\t\t\t\t\t<i class=\"fa fa-trophy\"><\/i>\n\t\t\t\t\t\t\t<\/span>\n\t\t\t\t\t\t\t<div class='ipsPhotoPanel ipsPhotoPanel_mini'>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->userPhoto( $r['leader_member_id'], 'mini' );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<p class='ipsType_reset cPastLeaders_user ipsType_blendLinks ipsTruncate ipsTruncate_line'>{$r['leader_member_id']->link()}<\/p>\n\t\t\t\t\t\t\t\t\t<p class='ipsType_reset cPastLeaders_rep'>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( \\IPS\\Content\\Reaction::isLikeMode() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$pluralize = array( $r['leader_rep_total'] ); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'received_x_likes', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'pluralize' => $pluralize ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$pluralize = array( $r['leader_rep_total'] ); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'received_x_points', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'pluralize' => $pluralize ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t<\/p>\n\t\t\t\t\t\t\t\t<\/div>\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/div>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( !isset( $rowCounts[ $nextDate ] ) ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\n$rowCounts[ $nextDate ] = 1;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\n$rowCounts[ $nextDate ]++;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\n$currentDate = $nextDate;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/div>\n\t\t\t<\/li>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction popularTable( $table, $headers, $rows, $quickSearch ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div data-baseurl=\"\nCONTENT;\n$return .= htmlspecialchars( $table->baseUrl, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-resort='\nCONTENT;\n$return .= htmlspecialchars( $table->resortKey, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-tableID='pastLeaders' data-controller=\"core.global.core.genericTable\">\n\t<div class=\"ipsClear ipsClearfix\">\n\t\t\nCONTENT;\n\nif ( $table->pages > 1 ):\n$return .= <<<CONTENT\n\n\t\t\t<div data-role=\"tablePagination\">\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\", 'global' )->pagination( $table->baseUrl, $table->pages, $table->page, $table->limit );\n$return .= <<<CONTENT\n\n\t\t\t<\/div>\n\t\t\t<br>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<ol class='ipsList_reset ipsPad cPastLeaders' data-role=\"tableRows\">\n\t\t\t\nCONTENT;\n\n$return .= $table->rowsTemplate[0]->{$table->rowsTemplate[1]}( $table, $headers, $rows );\n$return .= <<<CONTENT\n\n\t\t<\/ol>\n\t\t\nCONTENT;\n\nif ( $table->pages > 1 ):\n$return .= <<<CONTENT\n\n\t\t\t<div data-role=\"tablePagination\">\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\", 'global' )->pagination( $table->baseUrl, $table->pages, $table->page, $table->limit );\n$return .= <<<CONTENT\n\n\t\t\t<\/div>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/div>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction popularWrapper( $results, $areas, $topContributors, $dates, $description, $form, $tzOffsetDifference ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( \\IPS\\Content\\Search\\Query::isRebuildRunning() ):\n$return .= <<<CONTENT\n\n\t<div class=\"ipsMessage ipsMessage_info\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'popular_rebuild_is_running', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\n$now = \\IPS\\DateTime::ts( time() );\n$return .= <<<CONTENT\n\n\nCONTENT;\n\n$thisUrl = \\IPS\\Request::i()->url();\n$return .= <<<CONTENT\n\n<div>\n    <div class=\"ipsAreaBackground_light\">\n        <div class=\"ipsReputationFilters ipsPad_half ipsClearfix ipsClear\">\n            \nCONTENT;\n\nif ( \\count( $dates ) ):\n$return .= <<<CONTENT\n\n            <ul class=\"ipsButtonRow ipsPos_right ipsClearfix\">\n                <li>\n                    <a href='#elLeaderboard_app_menu' id=\"elLeaderboard_app\" data-ipsMenu>\nCONTENT;\n\nif ( isset( \\IPS\\Request::i()->in ) and isset( $areas[ \\IPS\\Request::i()->in ] ) ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$sprintf = array($areas[ \\IPS\\Request::i()->in ][1]); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'leaderboard_in_app', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'leaderboard_in_all_apps', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n <i class=\"fa fa-caret-down\"><\/i><\/a>\n                    <ul id=\"elLeaderboard_app_menu\" class=\"ipsMenu ipsMenu_selectable ipsMenu_normal ipsHide\">\n                        <li class=\"ipsMenu_item \nCONTENT;\n\nif ( ! isset( \\IPS\\Request::i()->in ) ):\n$return .= <<<CONTENT\nipsMenu_itemChecked\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\"><a href=\"\nCONTENT;\n$return .= htmlspecialchars( $thisUrl->stripQueryString( 'in' ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'leaderboard_all_apps', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n                        \nCONTENT;\n\nforeach ( $areas as $key => $data ):\n$return .= <<<CONTENT\n\n                        <li class=\"ipsMenu_item \nCONTENT;\n\nif ( isset( \\IPS\\Request::i()->in ) and \\IPS\\Request::i()->in == $key ):\n$return .= <<<CONTENT\nipsMenu_itemChecked\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\"><a href=\"\nCONTENT;\n$return .= htmlspecialchars( $thisUrl->setQueryString( array( 'in' => $key ) ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\nCONTENT;\n$return .= htmlspecialchars( $data[1], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a><\/li>\n                        \nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n                    <\/ul>\n                <\/li>\n                <li>\n                    <a href='#elLeaderboard_time_menu' id=\"elLeaderboard_time\" data-ipsMenu>\n                        \nCONTENT;\n\nif ( isset( \\IPS\\Request::i()->custom_date_start ) or isset( \\IPS\\Request::i()->custom_date_end ) ):\n$return .= <<<CONTENT\n\n                        \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'custom_date', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n                        \nCONTENT;\n\nelseif ( isset( \\IPS\\Request::i()->time ) and isset( $dates[ \\IPS\\Request::i()->time ] ) and $setTime = \\IPS\\Request::i()->time ):\n$return .= <<<CONTENT\n\n                        \nCONTENT;\n\n$val = \"leaderboard_time_$setTime\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n                        \nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n                        \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'leaderboard_time_oldest', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n                        \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n                        <i class=\"fa fa-caret-down\"><\/i>\n                    <\/a>\n                    <ul id=\"elLeaderboard_time_menu\" class=\"ipsMenu ipsMenu_selectable ipsMenu_normal ipsHide\">\n                        \nCONTENT;\n\nforeach ( $dates as $human => $timeObject ):\n$return .= <<<CONTENT\n\n                        <li class=\"ipsMenu_item \nCONTENT;\n\nif ( ( ! isset( \\IPS\\Request::i()->time ) and ( ! isset( \\IPS\\Request::i()->custom_date_start ) and ! isset( \\IPS\\Request::i()->custom_date_end ) ) and $human == 'oldest' ) or ( ! isset( \\IPS\\Request::i()->custom_date_start ) and ( isset( \\IPS\\Request::i()->time ) and \\IPS\\Request::i()->time == $human ) ) ):\n$return .= <<<CONTENT\nipsMenu_itemChecked\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\">\n                            <a href=\"\nCONTENT;\n$return .= htmlspecialchars( $thisUrl->stripQueryString( array('custom_date_start', 'custom_date_end') )->setQueryString( array( 'time' => $human ) ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n                                \nCONTENT;\n\n$val = \"leaderboard_time_$human\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n                                <p class=\"ipsTruncate ipsTruncate_line ipsType_reset ipsType_light\">\n                                    \nCONTENT;\n$return .= htmlspecialchars( $timeObject->dayAndMonth(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlspecialchars( $timeObject->format('Y'), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nif ( $now->localeDate() != $timeObject->localeDate() ):\n$return .= <<<CONTENT\n - \nCONTENT;\n$return .= htmlspecialchars( $now->dayAndMonth(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlspecialchars( $now->format('Y'), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n                                <\/p>\n                            <\/a>\n                        <\/li>\n                        \nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n                        <li class=\"ipsMenu_item \nCONTENT;\n\nif ( isset( \\IPS\\Request::i()->custom_date_start ) or isset( \\IPS\\Request::i()->custom_date_end ) ):\n$return .= <<<CONTENT\nipsMenu_itemChecked\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\">\n                            <a href=\"#\" data-ipsDialog data-ipsDialog-size='narrow' data-ipsDialog-content='#elDateForm' data-ipsDialog-title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'custom_date', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'custom_date', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n                            \nCONTENT;\n\nif ( isset( \\IPS\\Request::i()->custom_date_start ) or isset( \\IPS\\Request::i()->custom_date_end ) ):\n$return .= <<<CONTENT\n\n                            <p class=\"ipsType_reset ipsType_light\">\n                                \nCONTENT;\n\nif ( isset( \\IPS\\Request::i()->custom_date_start ) ):\n$return .= <<<CONTENT\n\n                                \nCONTENT;\n\n$val = ( \\IPS\\Request::i()->custom_date_start instanceof \\IPS\\DateTime ) ? \\IPS\\Request::i()->custom_date_start : \\IPS\\DateTime::ts( \\IPS\\Request::i()->custom_date_start );$return .= (string) $val->localeDate();\n$return .= <<<CONTENT\n\n                                \nCONTENT;\n\nif ( isset( \\IPS\\Request::i()->custom_date_end ) ):\n$return .= <<<CONTENT\n - \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n                                \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n                                \nCONTENT;\n\nif ( isset( \\IPS\\Request::i()->custom_date_end ) ):\n$return .= <<<CONTENT\n\n                                \nCONTENT;\n\n$val = ( \\IPS\\Request::i()->custom_date_end instanceof \\IPS\\DateTime ) ? \\IPS\\Request::i()->custom_date_end : \\IPS\\DateTime::ts( \\IPS\\Request::i()->custom_date_end );$return .= (string) $val->localeDate();\n$return .= <<<CONTENT\n\n                                \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n                            <\/p>\n                            \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n                            <\/a>\n                        <\/li>\n                    <\/ul>\n                    <div class=\"ipsHide\" id=\"elDateForm\">\n                        {$form}\n                    <\/div>\n                <\/li>\n            <\/ul>\n            \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n        <\/div>\n\t\nCONTENT;\n\nif ( \\count( $topContributors) ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\n$count = 0;\n$return .= <<<CONTENT\n\n\t\t\t<ol class=\"ipsPad ipsStream ipsList_reset cStream_members ipsGrid ipsGrid_collapsePhone\" data-ipsGrid data-ipsGrid-minItemSize='230' data-ipsGrid-maxItemSize='500' data-ipsGrid-equalHeights='row'>\n\t\t\t\t\nCONTENT;\n\nforeach ( $topContributors as $memberId => $rep ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\n$count++;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\n$member = \\IPS\\Member::load( $memberId );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"popular\", \"core\" )->memberRow( $member, $rep, $count );\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t<\/ol>\n\n\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t<p class='ipsAreaBackground_light ipsType_center ipsPad ipsType_reset ipsType_light ipsType_normal'>\n\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'popular_no_member_results', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t<\/p>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n    <\/div>\n<\/div>\n<hr class='ipsHr'>\n\n<section class='ipsSpacer_top' data-controller='core.front.core.ignoredComments'>\n\t<h2 class='ipsType_sectionTitle ipsType_reset'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'popular_results_title', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n\t<div class='ipsAreaBackground_light ipsPad'>\n\t\t<div data-role='popularBody'>\n\t\t\t<p class=\"ipsType_reset ipsType_medium ipsSpacer_bottom\"><i class='fa fa-calendar'><\/i> \nCONTENT;\n$return .= htmlspecialchars( $description, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/p>\n\t\t\t<div data-role='popularResults'>\n\t\t\t\t<ol class='ipsStream ipsList_reset' data-role='popularContent'>\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"popular\", \"core\" )->popularItems( $results );\n$return .= <<<CONTENT\n\n\t\t\t\t<\/ol>\n\t\t\t<\/div>\n\t\t<\/div>\n\t<\/div>\n<\/section>\n\nCONTENT;\n\nif ( $tzOffsetDifference !== NULL ):\n$return .= <<<CONTENT\n\n\t<div class='ipsPad ipsType_center ipsType_light ipsType_small'>\n\t\t\nCONTENT;\n\n$sprintf = array(\\IPS\\Member::loggedIn()->language()->addToStack('timezone__' . \\IPS\\Settings::i()->reputation_timezone), $tzOffsetDifference); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'popular_timezone', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\n\t<\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction tabs( $tabs, $activeTab, $content ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n<div class='ipsPageHeader ipsClearfix ipsSpacer_bottom'>\n\t<h1 class='ipsType_pageTitle'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'leaderboard_title', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h1>\n<\/div>\n\n\nCONTENT;\n\n$icons = array('leaderboard' => 'trophy', 'history' => 'clock-o', 'members' => 'star');\n$return .= <<<CONTENT\n\n<div class='ipsTabs ipsTabs_contained ipsTabs_withIcons ipsTabs_large ipsTabs_stretch ipsClearfix' id='elTabBar' data-ipsTabBar data-ipsTabbar-defaultTab=\"elTab\nCONTENT;\n$return .= htmlspecialchars( $activeTab, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-ipsTabBar-contentArea='#elLeaderboardContent'>\n\t<a href='#elTabBar' data-action='expandTabs'><i class='fa fa-caret-down'><\/i><\/a>\n\t<ul role='tablist'>\n\t\t\nCONTENT;\n\nforeach ( $tabs as $key ):\n$return .= <<<CONTENT\n\n\t\t<li role='presentation'>\n\t\t\t\nCONTENT;\n\n$seoTemplate = 'leaderboard_' . $key;\n$return .= <<<CONTENT\n\n\t\t\t<a href='\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=discover&controller=popular&tab={$key}\", null, \"$seoTemplate\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n' role='tab' id='elTab\nCONTENT;\n$return .= htmlspecialchars( $key, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsType_center ipsTabs_item \nCONTENT;\n\nif ( $key == $activeTab ):\n$return .= <<<CONTENT\nipsTabs_activeItem\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n' \nCONTENT;\n\nif ( $key == $activeTab ):\n$return .= <<<CONTENT\naria-selected=\"true\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\t\t\t<i class='fa fa-\nCONTENT;\n$return .= htmlspecialchars( $icons[$key], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'><\/i>\n\t\t\t\t\nCONTENT;\n\n$val = \"leaderboard_tabs_{$key}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t<\/a>\n\t\t<\/li>\n\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t<\/ul>\n<\/div>\n<section id='elLeaderboardContent' class=\"ipsTabs_panels ipsTabs_contained\">\n\t<div id='ipsTabs_elTabBar_elTab\nCONTENT;\n$return .= htmlspecialchars( $activeTab, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_panel' aria-labelledby='elTab\nCONTENT;\n$return .= htmlspecialchars( $activeTab, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' aria-hidden='false' class='ipsTabs_panel ipsPad'>\n\t\t{$content}\n\t<\/div>\n<\/section>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction topMembers( $url, $filters, $activeFilter, $output ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div data-baseurl='\nCONTENT;\n$return .= htmlspecialchars( $url, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-resort='topMembers' data-tableID='topMembers' data-controller='core.global.core.table'>\n\t<div class=\"ipsPad_half ipsClearfix ipsClear\">\n\t\t<ul class=\"ipsButtonRow ipsPos_right ipsClearfix\">\n\t\t\t<li>\n\t\t\t\t<a href=\"#elFilterByMenu_menu\" id=\"elFilterByMenu\" data-role='tableFilterMenu' data-ipsMenu data-ipsMenu-activeClass=\"ipsButtonRow_active\" data-ipsMenu-selectable=\"radio\"><span data-role=\"extraHtml\">\nCONTENT;\n$return .= htmlspecialchars( $filters[ $activeFilter ], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span> <i class=\"fa fa-caret-down\"><\/i><\/a>\n\t\t\t\t<ul class='ipsMenu ipsMenu_auto ipsMenu_withStem ipsMenu_selectable ipsHide' data-role=\"tableFilterMenu\" id='elFilterByMenu_menu'>\n\t\t\t\t\t\nCONTENT;\n\nforeach ( $filters as $k => $v ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<li data-action=\"tableFilter\" data-ipsMenuValue='\nCONTENT;\n\n$return .= htmlspecialchars( str_replace( array( 'IPS\\\\', '\\\\' ), array( '', '_' ), $k ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsMenu_item \nCONTENT;\n\nif ( $k === $activeFilter ):\n$return .= <<<CONTENT\nipsMenu_itemChecked\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $url->setQueryString( array( 'filter' => str_replace( array( 'IPS\\\\', '\\\\' ), array( '', '_' ), $k ) ) ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n$return .= htmlspecialchars( $v, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/ul>\n\t\t\t<\/li>\n\t\t<\/ul>\n\t<\/div>\n\t<section data-role=\"tableRows\">\n\t\t{$output}\n\t<\/section>\n\t<div class=\"ipsHide\" data-role=\"tablePagination\"><\/div>\n<\/div>\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction topMembersOverview( $filters ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nforeach ( $filters as $k => $lang ):\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"popular\", \\IPS\\Request::i()->app )->topMembersResults( $k, $lang, \\IPS\\Member::topMembers( $k, \\IPS\\Settings::i()->reputation_overview_max_members ) );\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction topMembersResults( $filter, $title, $results ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div class=\"ipsPad ipsAreaBackground_light ipsSpacer_bottom\">\n\t\nCONTENT;\n\nif ( $title ):\n$return .= <<<CONTENT\n\n\t\t<h2 class=\"ipsType_sectionHead\">\nCONTENT;\n$return .= htmlspecialchars( $title, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/h2>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( \\count( $results ) ):\n$return .= <<<CONTENT\n\n\t\t<ol class=\"ipsStream ipsList_reset cStream_members ipsGrid ipsGrid_collapsePhone\" data-ipsGrid data-ipsGrid-minItemSize='230' data-ipsGrid-maxItemSize='500' data-ipsGrid-equalHeights='row'>\n\t\t\t\nCONTENT;\n\nforeach ( $results as $member ):\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nif ( \\in_array( $filter, array( 'pp_reputation_points', 'member_posts' ) ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"popular\", \"core\" )->memberRow( $member );\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"popular\", \"core\" )->memberRow( $member, NULL, 0, $filter::$title . '_pl_lc', '_customCount' );\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t<\/ol>\n\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t<p class='ipsType_light'>\n\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'no_results', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t<\/p>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}}"
VALUE;
