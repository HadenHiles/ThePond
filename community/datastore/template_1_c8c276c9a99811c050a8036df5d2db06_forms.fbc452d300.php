<?php

return <<<'VALUE'
"namespace IPS\\Theme;\nclass class_core_global_forms extends \\IPS\\Theme\\Template\n{\n\tpublic $cache_key = '0b2449a0f3ecc2efcbf0c0545e5a6ce8';\n\tfunction address( $name, $value, $googleApiKey, $minimize=FALSE, $requireFullAddress=TRUE ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<ul class=\"ipsField_fieldList\" data-ipsAddressForm \nCONTENT;\n\nif ( $googleApiKey ):\n$return .= <<<CONTENT\ndata-ipsAddressForm-googlePlaces data-ipsAddressForm-googleApiKey=\"\nCONTENT;\n$return .= htmlspecialchars( $googleApiKey, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n data-ipsAddressForm-requireFullAddress=\"\nCONTENT;\n\nif ( $requireFullAddress ):\n$return .= <<<CONTENT\ntrue\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\nfalse\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\" \nCONTENT;\n\nif ( $minimize ):\n$return .= <<<CONTENT\ndata-ipsAddressForm-minimize\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\nif ( $value->country AND !$value->city AND !$value->region AND !$value->postalCode ):\n$return .= <<<CONTENT\n data-ipsAddressForm-country=\"\nCONTENT;\n$return .= htmlspecialchars( $value->country, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t<li>\n\t\t<select name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[country]\" data-role=\"countrySelect\" data-sort>\n\t\t\t<option value='' \nCONTENT;\n\nif ( !$value->country OR (!$value->city AND !$value->region AND !$value->postalCode) ):\n$return .= <<<CONTENT\nselected\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'country', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option>\n\t\t\t\nCONTENT;\n\nforeach ( \\IPS\\GeoLocation::$countries as $k ):\n$return .= <<<CONTENT\n\n\t\t\t\t<option value=\"$k\" \nCONTENT;\n\nif ( $k == $value->country AND ( ( $value->city AND ( $value->postalCode OR $value->region ) ) OR !$minimize ) ):\n$return .= <<<CONTENT\nselected\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\t\t\t\t\nCONTENT;\n\n$val = \"country-{$k}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t<\/option>\n\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t<\/select>\n\t<\/li>\n\t\nCONTENT;\n\nforeach ( $value->addressLines as $i => $line ):\n$return .= <<<CONTENT\n\n\t\t<li>\n\t\t\t<input type=\"text\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[address][]\" placeholder=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'address_line', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" value=\"\nCONTENT;\n$return .= htmlspecialchars( $line, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-role=\"addressLine\">\n\t\t<\/li>\n\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t<li>\n\t\t<input type=\"text\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[city]\" placeholder=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'city', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" value=\"\nCONTENT;\n$return .= htmlspecialchars( $value->city, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-role=\"city\" autocomplete=\"address-level2\">\n\t<\/li>\n\t<li>\n\t\t<input type=\"text\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[region]\" placeholder=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'region', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" value=\"\nCONTENT;\n$return .= htmlspecialchars( $value->region, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-role=\"regionText\" autocomplete=\"address-level1\">\n\t<\/li>\n\t<li>\n\t\t<input type=\"text\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[postalCode]\" placeholder=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'zip', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" value=\"\nCONTENT;\n$return .= htmlspecialchars( $value->postalCode, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-role=\"postalCode\" autocomplete=\"postal-code\">\n\t<\/li>\n<\/ul>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction autocomplete( $name, $value='', $required, $maxlength=NULL, $disabled=FALSE, $class='', $placeholder='', $nullLang=NULL, $autoComplete=NULL ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n\nCONTENT;\n\n$valueAsArray = \\is_array( $value ) ? $value : explode( ',', $value );\n$return .= <<<CONTENT\n\n\nCONTENT;\n\n$valueToDisplay = \\is_array( $value ) ? implode( \"\\n\", $value ) : $value;\n$return .= <<<CONTENT\n\n\n\nCONTENT;\n\nif ( ( !isset( $autoComplete['commaTrigger'] ) || $autoComplete['commaTrigger'] !== FALSE ) ):\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\n\/\/ If the stored value has commas in it, we need to explode then implode to get the newlines\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( mb_stripos( $valueToDisplay, ',') !== FALSE ):\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\n$valueToDisplay = implode(\"\\n\", explode(\",\", $valueToDisplay));\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\t\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n<div>\n\nCONTENT;\n\nif ( ( isset( $autoComplete['freeChoice'] ) && !$autoComplete['freeChoice'] ) || ( isset( $autoComplete['prefix'] ) and $autoComplete['prefix'] )  ):\n$return .= <<<CONTENT\n\n<div \nCONTENT;\n\nif ( isset( $autoComplete['freeChoice'] ) && !$autoComplete['freeChoice'] ):\n$return .= <<<CONTENT\nclass=\"ipsJS_show\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( isset( $autoComplete['prefix'] ) and $autoComplete['prefix'] ):\n$return .= <<<CONTENT\ndata-controller='core.global.core.prefixedAutocomplete'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<textarea\n\tname=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\n\tid='elInput_\nCONTENT;\n\n$return .= htmlspecialchars( preg_replace('\/[^a-zA-Z0-9\\-_]\/', '_', $name), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'\n\tclass=\"\nCONTENT;\n$return .= htmlspecialchars( $class, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\n\t\nCONTENT;\n\nif ( $maxlength !== NULL ):\n$return .= <<<CONTENT\nmaxlength=\"\nCONTENT;\n$return .= htmlspecialchars( $maxlength, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( $required === TRUE ):\n$return .= <<<CONTENT\naria-required='true'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( $disabled ):\n$return .= <<<CONTENT\ndisabled aria-disabled='true'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( $placeholder ):\n$return .= <<<CONTENT\nplaceholder=\"\nCONTENT;\n$return .= htmlspecialchars( $placeholder, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\tdata-ipsAutocomplete\n\t\nCONTENT;\n\nif ( isset( $autoComplete['freeChoice'] ) && !$autoComplete['freeChoice'] ):\n$return .= <<<CONTENT\ndata-ipsAutocomplete-freeChoice='false'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( isset( $autoComplete['forceLower'] ) && $autoComplete['forceLower'] ):\n$return .= <<<CONTENT\ndata-ipsAutocomplete-forceLower\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( isset( $autoComplete['maxItems'] ) ):\n$return .= <<<CONTENT\ndata-ipsAutocomplete-maxItems='\nCONTENT;\n$return .= htmlspecialchars( $autoComplete['maxItems'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( !empty($autoComplete['unique']) ):\n$return .= <<<CONTENT\n\n\t\tdata-ipsAutocomplete-unique\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( isset($autoComplete['source']) AND \\is_array( $autoComplete['source'] ) ):\n$return .= <<<CONTENT\n\n\t\tlist='\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_datalist'\n\t\nCONTENT;\n\nelseif ( !empty($autoComplete['source']) ):\n$return .= <<<CONTENT\n\n\t\tdata-ipsAutocomplete-dataSource=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"{$autoComplete['source']}\", null, \"\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n\"\n\t\tdata-ipsAutocomplete-queryParam='input'\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( !empty($autoComplete['resultItemTemplate']) ):\n$return .= <<<CONTENT\n\n\t\tdata-ipsAutocomplete-resultItemTemplate=\"\nCONTENT;\n$return .= htmlspecialchars( $autoComplete['resultItemTemplate'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( isset( $autoComplete['minLength'] ) ):\n$return .= <<<CONTENT\ndata-ipsAutocomplete-minLength='\nCONTENT;\n$return .= htmlspecialchars( $autoComplete['minLength'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( isset( $autoComplete['maxLength'] ) ):\n$return .= <<<CONTENT\ndata-ipsAutocomplete-maxLength='\nCONTENT;\n$return .= htmlspecialchars( $autoComplete['maxLength'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( isset( $autoComplete['minAjaxLength'] ) ):\n$return .= <<<CONTENT\ndata-ipsAutocomplete-minAjaxLength='\nCONTENT;\n$return .= htmlspecialchars( $autoComplete['minAjaxLength'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( isset( $autoComplete['disallowedCharacters'] ) ):\n$return .= <<<CONTENT\ndata-ipsAutocomplete-disallowedCharacters='\nCONTENT;\n\n$return .= htmlspecialchars( json_encode( $autoComplete['disallowedCharacters'] ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( isset( $autoComplete['commaTrigger'] ) && $autoComplete['commaTrigger'] === FALSE ):\n$return .= <<<CONTENT\ndata-ipsAutocomplete-commaTrigger='false'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( isset( $autoComplete['minimized'] ) ):\n$return .= <<<CONTENT\ndata-ipsAutocomplete-minimized\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n>\nCONTENT;\n$return .= htmlspecialchars( $valueToDisplay, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/textarea>\n\n\nCONTENT;\n\nif ( isset( $autoComplete['prefix'] ) and $autoComplete['prefix'] ):\n$return .= <<<CONTENT\n\n\t<div data-role='prefixRow' class='ipsHide' id='\nCONTENT;\n\nif ( ! empty($htmlId) ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $htmlId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n_prefixWrap'>\n\t\t<input type='checkbox' name='\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_freechoice_prefix' \nCONTENT;\n\nif ( isset($valueAsArray['prefix']) ):\n$return .= <<<CONTENT\nchecked\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n class='ipsJS_hide'> <button type='button' id='\nCONTENT;\n\nif ( ! empty($htmlId) ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $htmlId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n_prefix' data-role=\"prefixButton\" data-ipsMenu data-ipsMenu-selectable=\"radio\" data-ipsMenu-appendTo=\"\nCONTENT;\n\nif ( ! empty($htmlId) ):\n$return .= <<<CONTENT\n#\nCONTENT;\n$return .= htmlspecialchars( $htmlId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n#\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n_prefixWrap\" class='ipsButton ipsButton_light ipsButton_verySmall'><span>\nCONTENT;\n\nif ( isset($valueAsArray['prefix']) ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $valueAsArray['prefix'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'select_prefix', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n<\/span> <i class='fa fa-caret-down'><\/i><\/button>\n\t\t<input type='hidden' data-role='prefixValue' name='\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_prefix' value='\nCONTENT;\n\nif ( isset($valueAsArray['prefix']) ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $valueAsArray['prefix'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\n\t\t<ul id='\nCONTENT;\n\nif ( ! empty($htmlId) ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $htmlId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n_prefix_menu' data-role=\"prefixMenu\" class='ipsMenu ipsMenu_selectable ipsMenu_auto ipsHide'>\n\t\t\t<li data-ipsMenuValue='-' class='ipsMenu_item ipsMenu_itemChecked'>\n\t\t\t\t<a href='#'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'no_prefix', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t<\/li>\n\t\t\t<li class='ipsMenu_sep'>\n\t\t\t\t<hr>\n\t\t\t<\/li>\n\t\t<\/ul>\n\t<\/div>\n\t<noscript>\n\t\t<input type=\"hidden\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_first_as_prefix\" value=\"0\">\n\t\t\nCONTENT;\n\n$valueKeys = \\is_array( $value ) ? array_keys( $value ) : array_keys( explode( ',', $value ) );\n$return .= <<<CONTENT\n\n\t\t<input type=\"checkbox\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_first_as_prefix\" value=\"1\" id=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_first_as_prefix\" \nCONTENT;\n\nif ( array_shift( $valueKeys ) === 'prefix' ):\n$return .= <<<CONTENT\nchecked\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n> <label for=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_first_as_prefix\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'use_first_tag_as_prefix', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/label>\n\t<\/noscript>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n\nCONTENT;\n\nif ( ( isset( $autoComplete['freeChoice'] ) && !$autoComplete['freeChoice'] ) || ( isset( $autoComplete['prefix'] ) and $autoComplete['prefix'] )  ):\n$return .= <<<CONTENT\n\n<\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<\/div>\n\n\nCONTENT;\n\nif ( isset( $autoComplete['desc'] ) ):\n$return .= <<<CONTENT\n\n\t<span class='ipsFieldRow_desc'>\n\t\t{$autoComplete['desc']}\n\t<\/span>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n\nCONTENT;\n\nif ( $nullLang ):\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'or', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n \n\t<span class='ipsCustomInput'>\n\t\t<input type=\"checkbox\" data-control=\"unlimited\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_null\" id=\"\nCONTENT;\n\n$return .= htmlspecialchars( preg_replace('\/[^a-zA-Z0-9\\-_]\/', '_', $name), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_null\" value=\"1\" \nCONTENT;\n\nif ( $value === NULL ):\n$return .= <<<CONTENT\nchecked aria-checked='true'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( $disabled ):\n$return .= <<<CONTENT\ndisabled\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n aria-controls='\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' aria-labelledby='\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_null_label'>\n\t\t<span><\/span>\n\t<\/span> <label for='\nCONTENT;\n\n$return .= htmlspecialchars( preg_replace('\/[^a-zA-Z0-9\\-_]\/', '_', $name), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_null' id='\nCONTENT;\n\n$return .= htmlspecialchars( preg_replace('\/[^a-zA-Z0-9\\-_]\/', '_', $name), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_null_label' class='ipsField_unlimited'>\nCONTENT;\n\n$val = \"{$nullLang}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/label>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n\nCONTENT;\n\nif ( isset($autoComplete['source']) AND \\is_array( $autoComplete['source'] ) ):\n$return .= <<<CONTENT\n\n\t<datalist id=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_datalist\">\n\t\t\nCONTENT;\n\nforeach ( $autoComplete['source'] as $v ):\n$return .= <<<CONTENT\n\n\t\t\t<option value=\"\nCONTENT;\n$return .= htmlspecialchars( $v, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\nCONTENT;\n$return .= htmlspecialchars( $v, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/option>\n\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t<\/datalist>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n\nCONTENT;\n\nif ( isset( $autoComplete['freeChoice'] ) && !$autoComplete['freeChoice'] ):\n$return .= <<<CONTENT\n\n<noscript>\n\t<select name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_noscript[]\" multiple>\n\t\t\nCONTENT;\n\nforeach ( $autoComplete['source'] as $v ):\n$return .= <<<CONTENT\n\n\t\t\t<option value=\"\nCONTENT;\n$return .= htmlspecialchars( $v, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" \nCONTENT;\n\nif ( \\in_array( $v, $valueAsArray ) ):\n$return .= <<<CONTENT\nselected\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\nCONTENT;\n$return .= htmlspecialchars( $v, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/option>\n\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t<\/select>\n\t\nCONTENT;\n\nif ( isset( $autoComplete['prefix'] ) and $autoComplete['prefix'] ):\n$return .= <<<CONTENT\n\n\t\t<br><br>\n\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'prefix_noscript', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t<select name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_noscript_prefix\">\n\t\t\t<option value=\"\"><\/option>\n\t\t\t\nCONTENT;\n\nforeach ( $autoComplete['source'] as $v ):\n$return .= <<<CONTENT\n\n\t\t\t\t<option value=\"\nCONTENT;\n$return .= htmlspecialchars( $v, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" \nCONTENT;\n\nif ( isset( $valueAsArray['prefix'] ) and $valueAsArray['prefix'] === $v ):\n$return .= <<<CONTENT\nselected\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\nCONTENT;\n$return .= htmlspecialchars( $v, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/option>\n\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t<\/select>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<\/noscript>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction button( $lang, $type, $href=NULL, $class='', $attributes=array() ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( $type === 'link' ):\n$return .= <<<CONTENT\n\n\t<a href=\"\nCONTENT;\n$return .= htmlspecialchars( $href, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" class='\nCONTENT;\n\nif ( ! $class or ! mb_stristr( $class, 'ipsButton' ) ):\n$return .= <<<CONTENT\nipsButton ipsButton_link\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( $class ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $class, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n' \nCONTENT;\n\nif ( $attributes ):\n$return .= <<<CONTENT\n\nCONTENT;\n\nforeach ( $attributes as $key => $value ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $key, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n=\"\nCONTENT;\n$return .= htmlspecialchars( $value, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n role=\"button\">\nCONTENT;\n\n$val = \"{$lang}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t<button type=\"\nCONTENT;\n$return .= htmlspecialchars( $type, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" \nCONTENT;\n\nif ( $class ):\n$return .= <<<CONTENT\nclass=\"\nCONTENT;\n$return .= htmlspecialchars( $class, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( $attributes ):\n$return .= <<<CONTENT\n\nCONTENT;\n\nforeach ( $attributes as $key => $value ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $key, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n=\"\nCONTENT;\n$return .= htmlspecialchars( $value, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" \nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n role=\"button\">\nCONTENT;\n\n$val = \"{$lang}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/button>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction captchaInvisible( $publicKey, $lang, $rowHtml=FALSE ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( $rowHtml ):\n$return .= <<<CONTENT\n<li>\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<div data-ipsCaptcha data-ipsCaptcha-service='recaptcha_invisible' data-ipsCaptcha-key=\"\nCONTENT;\n$return .= htmlspecialchars( $publicKey, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-ipsCaptcha-lang=\"\nCONTENT;\n$return .= htmlspecialchars( $lang, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t<noscript>\n\t  <div style=\"width: 302px; height: 352px;\">\n\t    <div style=\"width: 302px; height: 352px; position: relative;\">\n\t      <div style=\"width: 302px; height: 352px; position: absolute;\">\n\t        <iframe src=\"https:\/\/www.google.com\/recaptcha\/api\/fallback?k=\nCONTENT;\n$return .= htmlspecialchars( $publicKey, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" style=\"width: 302px; height:352px; border-style: none;\">\n\t        <\/iframe>\n\t      <\/div>\n\t      <div style=\"width: 250px; height: 80px; position: absolute; border-style: none; bottom: 21px; left: 25px; margin: 0px; padding: 0px; right: 25px;\">\n\t        <textarea id=\"g-recaptcha-response\" name=\"g-recaptcha-response\" class=\"g-recaptcha-response\" style=\"width: 250px; height: 80px; border: 1px solid #c1c1c1; margin: 0px; padding: 0px; resize: none;\"><\/textarea>\n\t      <\/div>\n\t    <\/div>\n\t  <\/div>\n\t<\/noscript>\n<\/div>\n\nCONTENT;\n\nif ( $rowHtml ):\n$return .= <<<CONTENT\n<\/li>\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction captchaKeycaptcha( $userId, $uniq, $sign, $sign2 ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<input type='hidden' id='capcode' name='keycaptcha'>\n<script type=\"text\/javascript\">\n\t\/\/ required\n\tvar s_s_c_user_id = '\nCONTENT;\n$return .= htmlspecialchars( $userId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n';\n\tvar s_s_c_session_id = '\nCONTENT;\n$return .= htmlspecialchars( $uniq, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n';\n\tvar s_s_c_captcha_field_id = 'capcode';\n\tvar s_s_c_submit_button_id ='sbutton-#-r';\n\tvar s_s_c_web_server_sign = '\nCONTENT;\n$return .= htmlspecialchars( $sign, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n';\n\tvar s_s_c_web_server_sign2 = '\nCONTENT;\n$return .= htmlspecialchars( $sign2, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n';\n<\/script>\n<div data-ipsCaptcha data-ipsCaptcha-service='keycaptcha' id='div_for_keycaptcha'><\/div>\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction captchaRecaptcha( $publicKey, $lang, $theme, $error ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div data-ipsCaptcha data-ipsCaptcha-service='recaptcha' data-ipsCaptcha-key=\"\nCONTENT;\n$return .= htmlspecialchars( $publicKey, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-ipsCaptcha-lang=\"\nCONTENT;\n$return .= htmlspecialchars( $lang, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-ipsCaptcha-theme=\"\nCONTENT;\n$return .= htmlspecialchars( $theme, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t<noscript>\n\t\t<iframe src=\"\/\/www.google.com\/recaptcha\/api\/noscript?k=\nCONTENT;\n$return .= htmlspecialchars( $publicKey, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n&hl=\nCONTENT;\n$return .= htmlspecialchars( $lang, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n&error=\nCONTENT;\n$return .= htmlspecialchars( $error, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" height=\"300\" width=\"500\"><\/iframe>\n\t\t<br>\n\t\t<textarea name=\"recaptcha_challenge_field\" rows=\"3\" cols=\"40\"><\/textarea>\n\t\t<input type=\"hidden\" name=\"recaptcha_response_field\" value=\"manual_challenge\">\n\t<\/noscript>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction captchaRecaptcha2( $publicKey, $lang, $theme ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div data-ipsCaptcha data-ipsCaptcha-service='recaptcha2' data-ipsCaptcha-key=\"\nCONTENT;\n$return .= htmlspecialchars( $publicKey, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-ipsCaptcha-lang=\"\nCONTENT;\n$return .= htmlspecialchars( $lang, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-ipsCaptcha-theme=\"\nCONTENT;\n$return .= htmlspecialchars( $theme, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t<noscript>\n\t  <div style=\"width: 302px; height: 352px;\">\n\t    <div style=\"width: 302px; height: 352px; position: relative;\">\n\t      <div style=\"width: 302px; height: 352px; position: absolute;\">\n\t        <iframe src=\"https:\/\/www.google.com\/recaptcha\/api\/fallback?k=\nCONTENT;\n$return .= htmlspecialchars( $publicKey, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" style=\"width: 302px; height:352px; border-style: none;\">\n\t        <\/iframe>\n\t      <\/div>\n\t      <div style=\"width: 250px; height: 80px; position: absolute; border-style: none; bottom: 21px; left: 25px; margin: 0px; padding: 0px; right: 25px;\">\n\t        <textarea id=\"g-recaptcha-response\" name=\"g-recaptcha-response\" class=\"g-recaptcha-response\" style=\"width: 250px; height: 80px; border: 1px solid #c1c1c1; margin: 0px; padding: 0px; resize: none;\"><\/textarea>\n\t      <\/div>\n\t    <\/div>\n\t  <\/div>\n\t<\/noscript>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction checkbox( $name, $value=FALSE, $disabled=FALSE, $togglesOn=array(), $togglesOff=array(), $label='', $hiddenName='', $id=NULL, $fancyToggle=FALSE, $tooltip=NULL ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<input type=\"hidden\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $hiddenName, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" value=\"0\">\n\nCONTENT;\n\nif ( !$fancyToggle ):\n$return .= <<<CONTENT\n<span class='ipsCustomInput'>\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<input\n\t\ttype='checkbox'\n\t\tname='\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'\n\t\tvalue='1'\n\t\tid=\"check_\nCONTENT;\n$return .= htmlspecialchars( $id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\n\t\tdata-toggle-id=\"\nCONTENT;\n$return .= htmlspecialchars( $id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\n\t\t\nCONTENT;\n\nif ( $value ):\n$return .= <<<CONTENT\nchecked aria-checked='true'\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\naria-checked='false'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( $disabled ):\n$return .= <<<CONTENT\ndisabled aria-disabled='true'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( !empty($togglesOn) OR !empty($togglesOff) ):\n$return .= <<<CONTENT\n\n\t\t\tdata-control=\"toggle\"\n\t\t\t\nCONTENT;\n\nif ( $fancyToggle ):\n$return .= <<<CONTENT\n\n\t\t\t\tdata-toggle-visibleCheck=\"#check_\nCONTENT;\n$return .= htmlspecialchars( $id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_wrapper\"\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( !empty($togglesOn) ):\n$return .= <<<CONTENT\n data-togglesOn=\"\nCONTENT;\n\n$return .= htmlspecialchars( implode( ',', $togglesOn ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" aria-controls=\"\nCONTENT;\n\n$return .= htmlspecialchars( implode( ',', $togglesOn ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( !empty($togglesOff) ):\n$return .= <<<CONTENT\n data-togglesOff=\"\nCONTENT;\n\n$return .= htmlspecialchars( implode( ',', $togglesOff ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" aria-controls=\"\nCONTENT;\n\n$return .= htmlspecialchars( implode( ',', $togglesOff ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( $fancyToggle ):\n$return .= <<<CONTENT\n\n\t\t\tdata-ipsToggle\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( $tooltip ):\n$return .= <<<CONTENT\ntitle='\nCONTENT;\n$return .= htmlspecialchars( $tooltip, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-ipsTooltip\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t>\n\t\nCONTENT;\n\nif ( !$fancyToggle ):\n$return .= <<<CONTENT\n\n\t<span><\/span>\n<\/span>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( $label ):\n$return .= <<<CONTENT\n\n<label for=\"check_\nCONTENT;\n$return .= htmlspecialchars( $id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\nCONTENT;\n\n$val = \"{$label}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n<\/label>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction checkboxset( $name, $value, $required, $options, $multiple=FALSE, $class='', $disabled=FALSE, $toggles=array(), $id=NULL, $unlimited=NULL, $unlimitedLang='all', $unlimitedToggles=array(), $toggleOn=TRUE, $descriptions=array() ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( $multiple ):\n$return .= <<<CONTENT\n\n\t<input type=\"hidden\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[__EMPTY]\" value=\"__EMPTY\">\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( $unlimited !== NULL ):\n$return .= <<<CONTENT\n\n\t<div data-control=\"granularCheckboxset\">\n\t\t<div data-role=\"checkboxsetUnlimited\" class=\"\nCONTENT;\n\nif ( !\\is_array( $value ) ):\n$return .= <<<CONTENT\nipsJS_show\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\nipsHide\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\">\n\t\t\t<input\n\t\t\t\ttype='checkbox'\n\t\t\t\tname=\"\nCONTENT;\n\n$return .= htmlspecialchars( trim( $name, '[]' ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_unlimited\"\n\t\t\t\tvalue='\nCONTENT;\n$return .= htmlspecialchars( $unlimited, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'\n\t\t\t\tid=\"\nCONTENT;\n\n$return .= htmlspecialchars( trim( $id ?: $name, '[]' ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_unlimited\"\n\t\t\t\t\nCONTENT;\n\nif ( $unlimited === $value ):\n$return .= <<<CONTENT\nchecked aria-checked='true'\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\naria-checked='false'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nif ( $disabled ):\n$return .= <<<CONTENT\ndisabled aria-disabled='true'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\tdata-ipsToggle\n\t\t\t\tdata-role=\"checkboxsetUnlimitedToggle\"\n\t\t\t>\n\t\t\t&nbsp;\n\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'or', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t&nbsp;\n\t\t\t<a class=\"ipsCursor_pointer\" data-action=\"checkboxsetCustomize\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'customize', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t<\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<div data-role=\"checkboxsetGranular\" class=\"\nCONTENT;\n\nif ( $unlimited !== NULL and !\\is_array( $value ) ):\n$return .= <<<CONTENT\nipsJS_hide\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\">\n\t\t\t<ul class=\"ipsField_fieldList\">\n\t\t\t\nCONTENT;\n\nforeach ( $options as $k => $v ):\n$return .= <<<CONTENT\n\n\t\t\t\t<li>\n\t\t\t\t\t<span class='ipsCustomInput'>\n\t\t\t\t\t\t<input type=\"checkbox\" \nCONTENT;\n\nif ( $class ):\n$return .= <<<CONTENT\nclass=\"\nCONTENT;\n$return .= htmlspecialchars( $class, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[\nCONTENT;\n$return .= htmlspecialchars( $k, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n]\" value=\"1\" \nCONTENT;\n\nif ( ( $unlimited !== NULL AND $unlimited === $value ) or ( \\is_array( $value ) AND \\in_array( $k, $value ) ) ):\n$return .= <<<CONTENT\nchecked\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( $disabled === TRUE or ( \\is_array( $disabled ) and \\in_array( $k, $disabled ) ) ):\n$return .= <<<CONTENT\ndisabled\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( isset( $toggles[ $k ] ) and !empty( $toggles[ $k ] ) ):\n$return .= <<<CONTENT\ndata-control=\"toggle\" \nCONTENT;\n\nif ( $toggleOn === FALSE ):\n$return .= <<<CONTENT\ndata-togglesOff\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\ndata-togglesOn\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n=\"\nCONTENT;\n\n$return .= htmlspecialchars( implode( ',', $toggles[ $k ] ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n id=\"elCheckbox_\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_\nCONTENT;\n$return .= htmlspecialchars( $k, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\t\t\t\t\t<span><\/span>\n\t\t\t\t\t<\/span>\n\t\t\t\t\t<div class='ipsField_fieldList_content'>\n\t\t\t\t\t\t<label for='elCheckbox_\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_\nCONTENT;\n$return .= htmlspecialchars( $k, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' id='elField_\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_label'>{$v}<\/label>\n\t\t\t\t\t\t\nCONTENT;\n\nif ( isset( $descriptions[ $k ] ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<br>\n\t\t\t\t\t\t\t<span class='ipsFieldRow_desc'>\n\t\t\t\t\t\t\t\t{$descriptions[ $k ]}\n\t\t\t\t\t\t\t<\/span>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/div>\n\t\t\t\t<\/li>\n\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t<\/ul>\n\t\t\t\nCONTENT;\n\nif ( $unlimited !== NULL ):\n$return .= <<<CONTENT\n\n\t\t\t\t<div class=\"ipsSpacer_top ipsSpacer_half\">\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'or', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t&nbsp;\n\t\t\t\t\t<a class=\"ipsCursor_pointer\" data-action=\"checkboxsetAll\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'all', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a> \/ <a class=\"ipsCursor_pointer\" data-action=\"checkboxsetNone\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'none', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t<\/div>\n\t\t<\/div>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction codemirror( $name, $value='', $required, $maxlength=NULL, $disabled=FALSE, $class='', $placeholder='', $tags=array(), $mode='htmlmixed', $id=NULL, $height='300px', $preview=NULL ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( !empty( $tags ) ):\n$return .= <<<CONTENT\n\n<div class='ipsColumns ipsColumns_collapseTablet' data-controller='core.global.editor.customtags' data-tagFieldType='codemirror' data-tagFieldID='elCodemirror_\nCONTENT;\n\nif ( $id ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\n\t<div class='ipsColumn_fluid ipsColumn'>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<div class='ipsAreaBackground ipsPad_half ipsClearfix' data-role=\"editor\" \nCONTENT;\n\nif ( $preview ):\n$return .= <<<CONTENT\ndata-controller=\"core.global.editor.codePreview\" data-name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-preview-url=\"\nCONTENT;\n$return .= htmlspecialchars( $preview, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t<textarea\n\tname=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\n\tid='elCodemirror_\nCONTENT;\n\nif ( $id ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'\n\tvalue=\"\nCONTENT;\n\n$return .= htmlspecialchars( htmlentities( $value, ENT_DISALLOWED, 'UTF-8', TRUE ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\n\tclass=\"ipsField_fullWidth \nCONTENT;\n$return .= htmlspecialchars( $class, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\n\t\nCONTENT;\n\nif ( $maxlength !== NULL ):\n$return .= <<<CONTENT\nmaxlength=\"\nCONTENT;\n$return .= htmlspecialchars( $maxlength, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( $required === TRUE ):\n$return .= <<<CONTENT\naria-required='true'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( $disabled ):\n$return .= <<<CONTENT\ndisabled aria-disabled='true'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( $placeholder ):\n$return .= <<<CONTENT\nplaceholder=\"\nCONTENT;\n$return .= htmlspecialchars( $placeholder, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\tdata-control=\"codemirror\"\n\tdata-mode=\"\nCONTENT;\n$return .= htmlspecialchars( $mode, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\n\t\nCONTENT;\n\nif ( $height ):\n$return .= <<<CONTENT\ndata-height=\"\nCONTENT;\n$return .= htmlspecialchars( $height, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n>\nCONTENT;\n$return .= htmlspecialchars( $value, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/textarea>\n\t\nCONTENT;\n\nif ( $preview ):\n$return .= <<<CONTENT\n\n\t\t<button type=\"button\" data-action=\"preview\" data-ipsDialog data-ipsDialog-content=\"#\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_preview\" class=\"ipsButton ipsButton_veryLight ipsSpacer_top ipsButton_verySmall ipsPos_right ipsJs_hide\"><i class=\"fa fa-search\"><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'preview', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/button>\n\t\t<div id=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_preview\" class=\"ipsHide ipsDialog_loading\"><\/div>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<\/div>\n\n\nCONTENT;\n\nif ( !empty( $tags ) ):\n$return .= <<<CONTENT\n\n\t<\/div>\n\t<div class='ipsColumn_medium ipsColumn ipsAreaBackground_light ipsComposeArea_sidebar \nCONTENT;\n\nif ( !isset( \\IPS\\Request::i()->cookie['tagSidebar'] ) ):\n$return .= <<<CONTENT\nipsComposeArea_sidebarOpen\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\nipsComposeArea_sidebarClosed\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n' data-codemirrorid='elCodemirror_\nCONTENT;\n\nif ( $id ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\n\t\t<a href='#' data-action='tagsToggle' data-ipsTooltip data-ipsTooltip-label=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'toggle_sidebar', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'toggle_sidebar', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t<h3 class='ipsAreaBackground ipsPad_half ipsType_reset' data-role='tagsHeader'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'editor_tags', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h3>\n\t\t<ul class='ipsList_reset ipsScrollbar' data-role='tagsList'>\n\t\t\nCONTENT;\n\nforeach ( $tags as $tagKey => $tagValue ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( \\is_array( $tagValue ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t<li>\n\t\t\t\t\t<ul class='ipsList_reset'>\n\t\t\t\t\t\t<li><h4 class='ipsAreaBackground ipsPad_half ipsType_reset'>\nCONTENT;\n\n$val = \"{$tagKey}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h4><\/li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<ul class='ipsList_reset'>\n\t\t\t\t\t\t\t\nCONTENT;\n\nforeach ( $tagValue as $key => $value ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<li class='ipsPad_half'>\n\t\t\t\t\t\t\t\t\t<label data-tagKey=\"\nCONTENT;\n$return .= htmlspecialchars( $key, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\nCONTENT;\n$return .= htmlspecialchars( $key, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/label>\n\t\t\t\t\t\t\t\t\t<div class='ipsType_light ipsType_small'>\nCONTENT;\n$return .= htmlspecialchars( $value, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/div>\n\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<\/ul>\n\t\t\t\t\t\t<\/li>\n\t\t\t\t\t<\/ul>\n\t\t\t\t<\/li>\n\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t<li class='ipsPad_half'>\n\t\t\t\t\t<label data-tagKey=\"\nCONTENT;\n$return .= htmlspecialchars( $tagKey, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\nCONTENT;\n$return .= htmlspecialchars( $tagKey, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/label>\n\t\t\t\t\t<div class='ipsType_light ipsType_small'>\nCONTENT;\n$return .= htmlspecialchars( $tagValue, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/div>\n\t\t\t\t<\/li>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t<\/ul>\n\t<\/div>\n<\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction color( $name, $value, $required, $disabled=FALSE ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<input type=\"text\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" value=\"\nCONTENT;\n$return .= htmlspecialchars( $value, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\t\nCONTENT;\n\nif ( $required === TRUE ):\n$return .= <<<CONTENT\naria-required='true'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( $disabled ):\n$return .= <<<CONTENT\ndisabled aria-disabled='true'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n data-control=\"color\" class=\"\">\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction colorDisplay( $color ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div class=\"ipsClearFix\">\n\t<div style=\"background-color: \nCONTENT;\n$return .= htmlspecialchars( $color, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n; height: 15px; width: 15px; border: 1px solid black;\" class=\"ipsPos_left\"><\/div><div class=\"ipsPos_left\"> &nbsp; \nCONTENT;\n\n$return .= htmlspecialchars( mb_strtoupper( $color ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/div>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction date( $name, $value, $required, $min=NULL, $max=NULL, $disabled=FALSE, $time=FALSE, $unlimited=NULL, $unlimitedLang=NULL, $unlimitedName=NULL, $toggles=array(), $toggleOn=TRUE, $class='ipsField_short', $placeholder=NULL ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<input\n\ttype=\"date\"\n\tname=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\n\t\nCONTENT;\n\nif ( $unlimited === NULL or $value !== $unlimited ):\n$return .= <<<CONTENT\nvalue=\"\nCONTENT;\n\nif ( $value instanceof \\IPS\\DateTime ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $value->format('Y-m-d'), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $value, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\" data-preferredFormat=\"\nCONTENT;\n\nif ( $value instanceof \\IPS\\DateTime ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $value->localeDate(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $value, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( $required === TRUE ):\n$return .= <<<CONTENT\naria-required='true'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( $min !== NULL ):\n$return .= <<<CONTENT\nmin=\"\nCONTENT;\n$return .= htmlspecialchars( $min, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( $max !== NULL ):\n$return .= <<<CONTENT\nmax=\"\nCONTENT;\n$return .= htmlspecialchars( $max, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( $disabled ):\n$return .= <<<CONTENT\ndisabled aria-disabled='true'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\tclass=\"\nCONTENT;\n$return .= htmlspecialchars( $class, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\n\tdata-control=\"date\"\n>\n\nCONTENT;\n\nif ( $time ):\n$return .= <<<CONTENT\n\n<input name=\"\nCONTENT;\n$return .= htmlspecialchars( $time, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" type=\"time\" size=\"12\" class=\"ipsField_short\" placeholder=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( '_time_format_hhmm', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" step='60' min='00:00' value=\"\nCONTENT;\n\nif ( $value instanceof \\IPS\\DateTime ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $value->format('H:i'), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\" \nCONTENT;\n\nif ( $disabled ):\n$return .= <<<CONTENT\ndisabled aria-disabled='true'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( $unlimited !== NULL and ( !$disabled or $unlimited === $value ) ):\n$return .= <<<CONTENT\n\n\t&nbsp;\n\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'or', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t&nbsp;\n\t<span class='ipsCustomInput'>\n\t\t<input type=\"checkbox\" data-control=\"unlimited\nCONTENT;\n\nif ( \\count( $toggles ) ):\n$return .= <<<CONTENT\n toggle\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $unlimitedName, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" id='\nCONTENT;\n$return .= htmlspecialchars( $unlimitedName, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' value=\"\nCONTENT;\n$return .= htmlspecialchars( $unlimited, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" \nCONTENT;\n\nif ( $unlimited === $value ):\n$return .= <<<CONTENT\nchecked aria-checked='true'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( $disabled ):\n$return .= <<<CONTENT\ndisabled\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( \\count( $toggles ) ):\n$return .= <<<CONTENT\n\nCONTENT;\n\nif ( $toggleOn === FALSE ):\n$return .= <<<CONTENT\ndata-togglesOff\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\ndata-togglesOn\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n=\"\nCONTENT;\n\n$return .= htmlspecialchars( implode( ',', $toggles ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n aria-labelledby='label_\nCONTENT;\n$return .= htmlspecialchars( $unlimitedName, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t<span><\/span>\n\t<\/span>\n\t<label for='\nCONTENT;\n$return .= htmlspecialchars( $unlimitedName, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' id='label_\nCONTENT;\n$return .= htmlspecialchars( $unlimitedName, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsField_unlimited'>\nCONTENT;\n\n$val = \"{$unlimitedLang}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/label>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction dateRange( $start, $end ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'between', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n {$start} \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'and', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n {$end}\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction editor( $name, $value, $options, $toolbars, $postKey, $uploadControl, $emoticons, $tags=array() ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( !empty( $tags ) ):\n$return .= <<<CONTENT\n\n<div class='ipsColumns ipsColumns_collapseTablet' data-controller='core.global.editor.customtags' data-tagFieldType='editor' data-tagFieldID='\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t<div class='ipsColumn_fluid ipsColumn'>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<div class='ipsComposeArea_editor' data-role=\"editor\">\n\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"forms\", \"core\", 'global' )->editorRaw( $name, $value, $options, $toolbars, $postKey, $uploadControl, $emoticons );\n$return .= <<<CONTENT\n\n\t\t<\/div>\n\nCONTENT;\n\nif ( !empty( $tags ) ):\n$return .= <<<CONTENT\n\n\t<\/div>\n\t<div class='ipsColumn_medium ipsColumn ipsAreaBackground_light ipsComposeArea_sidebar \nCONTENT;\n\nif ( !isset( \\IPS\\Request::i()->cookie['tagSidebar'] ) ):\n$return .= <<<CONTENT\nipsComposeArea_sidebarOpen\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\nipsComposeArea_sidebarClosed\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\n\t\t<a href='#' class=\"ipsJS_show\" data-action='tagsToggle' data-ipsTooltip data-ipsTooltip-label=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'toggle_sidebar', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'toggle_sidebar', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t<h3 class='ipsAreaBackground ipsPad_half ipsType_reset' data-role='tagsHeader'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'editor_tags', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h3>\n\t\t<ul class='ipsList_reset ipsScrollbar' data-role='tagsList'>\n\t\t\nCONTENT;\n\nforeach ( $tags as $tagKey => $tagValue  ):\n$return .= <<<CONTENT\n\n\t\t\t<li class='ipsPad_half'>\n\t\t\t\t<label class=\"ipsJS_show\" data-tagKey=\"\nCONTENT;\n$return .= htmlspecialchars( $tagKey, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\nCONTENT;\n$return .= htmlspecialchars( $tagKey, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/label>\n\t\t\t\t<div class='ipsJS_hide ipsType_light'><strong>\nCONTENT;\n$return .= htmlspecialchars( $tagKey, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/strong><\/div>\n\t\t\t\t<div class='ipsType_light '>\nCONTENT;\n$return .= htmlspecialchars( $tagValue, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/div>\n\t\t\t<\/li>\n\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t<\/ul>\n\t<\/div>\n<\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction editorAttachments( $name, $value, $minimize, $maxFileSize, $maxFiles, $maxChunkSize, $totalMaxSize, $allowedFileTypes, $pluploadKey, $multiple=FALSE, $editor=FALSE, $forceNoscript=FALSE, $template='core.attachments.fileItem', $existing=array(), $default=NULL ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<input name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" type=\"hidden\" value=\"\nCONTENT;\n$return .= htmlspecialchars( $pluploadKey, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\nCONTENT;\n\nif ( $forceNoscript ):\n$return .= <<<CONTENT\n\n\t<input name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_noscript[]\" type=\"file\" \nCONTENT;\n\nif ( $multiple ):\n$return .= <<<CONTENT\nmultiple\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t<noscript>\n\t\t<input name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_noscript[]\" type=\"file\" \nCONTENT;\n\nif ( $multiple ):\n$return .= <<<CONTENT\nmultiple\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\t<span class=\"ipsType_light ipsType_small\">\n\t\t\t\nCONTENT;\n\nif ( $allowedFileTypes !== NULL ):\n$return .= <<<CONTENT\n\n\t\t\t\t<strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'form_upload_accepted', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t\nCONTENT;\n\n$return .= htmlspecialchars( implode( ', ', $allowedFileTypes ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( $multiple and $totalMaxSize ):\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nif ( $allowedFileTypes !== NULL ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t&middot;\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'form_upload_total_max', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $totalMaxSize, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\nMB\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( !$multiple or !$totalMaxSize or $maxChunkSize < $totalMaxSize ):\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nif ( $allowedFileTypes !== NULL or ( $multiple and $totalMaxSize ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t&middot;\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'form_upload_max', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $maxChunkSize, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\nMB\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( $maxFiles ):\n$return .= <<<CONTENT\n\n\t\t\t\t<br>\nCONTENT;\n\n$pluralize = array( $maxFiles ); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'form_upload_max_files', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'pluralize' => $pluralize ) );\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<\/span>\n\t<\/noscript>\n\t\nCONTENT;\n\nif ( $value ):\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nforeach ( $value as $id => $file ):\n$return .= <<<CONTENT\n\n\t\t\t<input type=\"hidden\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_existing[\nCONTENT;\n$return .= htmlspecialchars( $id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n]\" value=\"\">\n\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<div data-ipsEditor-toolList>\n\t\t\nCONTENT;\n\n$editorName = preg_replace( \"\/(.+?)_(\\d+?)_$\/\", \"$1[$2]\", mb_substr( $name, 0, -7 ) );\n$return .= <<<CONTENT\n\n\t\t<div data-role='attachmentArea' data-controller='core.global.editor.uploader, core.global.editor.insertable' data-editorID='\nCONTENT;\n$return .= htmlspecialchars( $editorName, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsComposeArea_attachments ipsClearfix ipsAreaBackground_light' id=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_drop_\nCONTENT;\n\n$return .= htmlspecialchars( md5( mt_rand() ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-ipsUploader data-ipsUploader-dropTarget='#elEditorDrop_\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-ipsUploader-button='[data-action=\"browse\"]' \nCONTENT;\n\nif ( $maxFileSize ):\n$return .= <<<CONTENT\ndata-ipsUploader-maxFileSize=\"\nCONTENT;\n\n$return .= htmlspecialchars( number_format( $maxFileSize, 3, '.', '' ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n data-ipsUploader-maxChunkSize=\"\nCONTENT;\n\n$return .= htmlspecialchars( number_format( $maxChunkSize, 3, '.', '' ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" \nCONTENT;\n\nif ( $allowedFileTypes ):\n$return .= <<<CONTENT\ndata-ipsUploader-allowedFileTypes='\nCONTENT;\n\n$return .= htmlspecialchars( json_encode( $allowedFileTypes ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n data-ipsUploader-name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-ipsUploader-key=\"\nCONTENT;\n$return .= htmlspecialchars( $pluploadKey, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" \nCONTENT;\n\nif ( $multiple ):\n$return .= <<<CONTENT\ndata-ipsUploader-multiple \nCONTENT;\n\nif ( $totalMaxSize ):\n$return .= <<<CONTENT\ndata-ipsUploader-maxTotalSize=\"\nCONTENT;\n\n$return .= htmlspecialchars( number_format( $totalMaxSize, 3, '.', '' ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( $minimize ):\n$return .= <<<CONTENT\ndata-ipsUploader-minimized\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n data-ipsUploader-insertable data-ipsUploader-postkey=\"\nCONTENT;\n$return .= htmlspecialchars( $editor, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-ipsUploader-template='core.editor.attachments' \nCONTENT;\n\nif ( $value ):\n$return .= <<<CONTENT\ndata-ipsUploader-existingFiles='\nCONTENT;\n\n$return .= htmlspecialchars( json_encode( $existing ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( isset( $default ) ):\n$return .= <<<CONTENT\ndata-ipsUploader-default='\nCONTENT;\n$return .= htmlspecialchars( $default, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\t\t<div class=\"ipsComposeArea_dropZone \nCONTENT;\n\nif ( $minimize ):\n$return .= <<<CONTENT\nipsComposeArea_dropZoneSmall\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n ipsClearfix\" id='elEditorDrop_\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t\t\t<i class='fa fa-paperclip'><\/i>\n\t\t\t\t<div>\n\t\t\t\t\t<ul class='ipsList_inline ipsClearfix'>\n\t\t\t\t\t\t<li class='ipsType_normal'>\n\t\t\t\t\t\t\t<span class='ipsAttachment_supportDrag'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'editor_attach_drag', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t\t\t<a href='#' data-action='browse'>\n\t\t\t\t\t\t\t\t<span class='ipsAttachment_supportDrag'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'editor_attach_choose_drag', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t\t\t\t<span class='ipsAttachment_nonDrag'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'editor_attach_choose_nodrag', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $allowedFileTypes !== NULL || $maxFileSize || $totalMaxSize ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<br>\n\t\t\t\t\t\t\t\t<span class='ipsType_medium ipsType_light'>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $allowedFileTypes !== NULL ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'form_upload_accepted', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= htmlspecialchars( implode( ', ', $allowedFileTypes ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $multiple and $totalMaxSize ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $allowedFileTypes !== NULL ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t&middot;\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'form_upload_total_max', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $totalMaxSize, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\nMB\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $maxFileSize and ( !$multiple or !$totalMaxSize or $maxFileSize < $totalMaxSize ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $allowedFileTypes !== NULL or ( $multiple and $totalMaxSize ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t&middot;\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'form_upload_max', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= htmlspecialchars( round($maxFileSize,2), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\nMB\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $maxFiles ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<br>\nCONTENT;\n\n$pluralize = array( $maxFiles ); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'form_upload_max_files', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'pluralize' => $pluralize ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<\/span>\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t<li class='ipsPos_right ipsResponsive_noFloat'>\n\t\t\t\t\t\t\t<a href='#' class='ipsButton ipsButton_light ipsButton_verySmall' data-ipsMenu id='elEditorAttach_media\nCONTENT;\n\n$return .= htmlspecialchars( md5($editorName), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'editor_attach_other', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n <i class='fa fa-caret-down'><\/i><\/a>\n\t\t\t\t\t\t\t<ul class='ipsMenu ipsMenu_auto ipsHide' id='elEditorAttach_media\nCONTENT;\n\n$return .= htmlspecialchars( md5($editorName), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_menu'>\n\t\t\t\t\t\t\t\t<li class='ipsMenu_item'><a href='#' data-ipsDialog data-ipsDialog-fixed data-ipsDialog-forceReload data-ipsDialog-destructOnClose data-ipsDialog-remoteSubmit='false' data-ipsDialog-remoteVerify='false' data-ipsDialog-title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'editor_insert_existing_file', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' data-ipsDialog-url=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=editor&do=myMedia&postKey={$editor}&editorId={$editorName}\" . \"&csrfKey=\" . \\IPS\\Session::i()->csrfKey, null, \"\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'editor_insert_existing_file', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( \\IPS\\Settings::i()->allow_remote_images ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t<li class='ipsMenu_item'><a href='#' data-ipsDialog data-ipsDialog-forceReload data-ipsDialog-title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'editor_insert_from_url', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' data-ipsDialog-url=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=editor&do=link&image=1&postKey={$editor}&editorId={$editorName}\" . \"&csrfKey=\" . \\IPS\\Session::i()->csrfKey, null, \"\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'editor_insert_from_url', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<\/ul>\n\t\t\t\t\t\t<\/li>\n\t\t\t\t\t<\/ul>\n\t\t\t\t\t<div data-role='fileList' class='ipsComposeArea_attachmentsInner \nCONTENT;\n\nif ( \\count($value) == 0 ):\n$return .= <<<CONTENT\nipsHide\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t\t<div data-role='files' class='ipsAreaBackground_reset ipsHide'>\n\t\t\t\t\t\t\t<p class='ipsType_normal ipsPad_half ipsType_reset'><strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'editor_uploaded_files', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong><\/p>\n\t\t\t\t\t\t\t<ul class='ipsList_reset ipsDataList ipsPad_half' data-role='fileContainer'>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nforeach ( $value as $attachID => $file ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $file->mediaType() === 'file' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<li class='ipsDataItem ipsAttach ipsAttach_done ipsContained' id='elAttach_\nCONTENT;\n$return .= htmlspecialchars( $attachID, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-role='file' data-fileid='\nCONTENT;\n$return .= htmlspecialchars( $attachID, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t\t\t\t\t\t\t<div class='ipsDataItem_generic ipsDataItem_size1 ipsType_center'>\n\t\t\t\t\t\t\t\t\t\t\t\t<i class='fa fa-file ipsType_large'><\/i>\n\t\t\t\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t\t\t\t\t<div class='ipsDataItem_main'>\n\t\t\t\t\t\t\t\t\t\t\t\t<strong class='ipsDataItem_title ipsType_medium' data-role='title'>\nCONTENT;\n$return .= htmlspecialchars( $file->originalFilename, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/strong><br><span class='ipsType_light'>\nCONTENT;\n\n$return .= \\IPS\\Output\\Plugin\\Filesize::humanReadableFilesize( $file->filesize() );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t\t\t\t\t<div class='ipsDataItem_generic ipsDataItem_size8 ipsType_right'>\n\t\t\t\t\t\t\t\t\t\t\t\t<ul class='ipsList_inline'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a href='#' data-action='insertFile' class='ipsAttach_selection' data-ipsTooltip title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'insert_into_post', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'><i class='fa fa-plus'><\/i><\/a>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a href='#' class='ipsType_warning' data-role='deleteFile'><i class='fa fa-trash-o'><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'delete', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\t\t\t\t<\/ul>\n\t\t\t\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<\/ul>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<div data-role='images' class='ipsAreaBackground_reset ipsHide'>\n\t\t\t\t\t\t\t<p class='ipsType_normal ipsPad_half ipsType_reset'><strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'editor_uploaded_images', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong><\/p>\n\t\t\t\t\t\t\t<ul class='ipsPad_half ipsList_reset ipsGrid ipsGrid_collapsePhone' data-role='fileContainer' data-ipsGrid data-ipsGrid-minItemSize='150' data-ipsGrid-maxItemSize='250'>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nforeach ( $value as $attachID => $file ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $file->mediaType() === 'image' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<li class='ipsGrid_span3 ipsAttach ipsContained ipsImageAttach ipsPad_half ipsAreaBackground_light' id='elAttach_\nCONTENT;\n$return .= htmlspecialchars( $attachID, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-role='file' data-fileid='\nCONTENT;\n$return .= htmlspecialchars( $attachID, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-fullsizeurl='\nCONTENT;\n$return .= htmlspecialchars( $file->url, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-thumbnailurl='\nCONTENT;\n$return .= htmlspecialchars( $file->attachmentThumbnailUrl, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-fileType=\"image\">\n\t\t\t\t\t\t\t\t\t\t\t<ul class='ipsList_inline ipsImageAttach_controls'>\n\t\t\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<a href='#' data-action='insertFile' class='ipsAttach_selection' data-ipsTooltip title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'insert_into_post', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'><i class='fa fa-plus'><\/i><\/a>\n\t\t\t\t\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li class='ipsPos_right' data-role='deleteFileWrapper'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<a href='#' data-role='deleteFile' class='ipsButton ipsButton_verySmall ipsButton_light' data-ipsTooltip title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'delete', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'><i class='fa fa-trash-o'><\/i><\/a>\n\t\t\t\t\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\t\t\t<\/ul>\n\n\t\t\t\t\t\t\t\t\t\t\t<div class='ipsImageAttach_thumb ipsType_center' style='background-image: url( \"\nCONTENT;\n\n$return .= htmlspecialchars( str_replace( array( '(', ')' ), array( '\\(', '\\)' ), $file->attachmentThumbnailUrl ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" )' data-role='preview' data-grid-ratio='65' data-action='insertFile'>\n\t\t\t\t\t\t\t\t\t\t\t\t<img src='\nCONTENT;\n$return .= htmlspecialchars( $file->url, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' alt=''>\n\t\t\t\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t\t\t\t\t<h2 class='ipsType_reset ipsAttach_title ipsTruncate ipsTruncate_line ipsType_medium' data-role='title'>\nCONTENT;\n$return .= htmlspecialchars( $file->originalFilename, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/h2>\n\t\t\t\t\t\t\t\t\t\t\t<p class='ipsType_light'>\nCONTENT;\n\n$return .= \\IPS\\Output\\Plugin\\Filesize::humanReadableFilesize( $file->filesize() );\n$return .= <<<CONTENT\n<\/p>\n\t\t\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<\/ul>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<div data-role='videos' class='ipsAreaBackground_reset ipsHide'>\n\t\t\t\t\t\t\t<p class='ipsType_normal ipsPad_half ipsType_reset'><strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'editor_uploaded_videos', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong><\/p>\n\t\t\t\t\t\t\t<ul class='ipsPad_half ipsList_reset ipsGrid ipsGrid_collapsePhone' data-role='fileContainer' data-ipsGrid data-ipsGrid-minItemSize='150' data-ipsGrid-maxItemSize='250'>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nforeach ( $value as $attachID => $file ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $file->mediaType() === 'video' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<li class='ipsGrid_span3 ipsAttach ipsContained ipsImageAttach ipsPad_half ipsAreaBackground_light' id='elAttach_\nCONTENT;\n$return .= htmlspecialchars( $attachID, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-role='file' data-fileid='\nCONTENT;\n$return .= htmlspecialchars( $attachID, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-fullsizeurl='\nCONTENT;\n$return .= htmlspecialchars( $file->url, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-thumbnailurl='\nCONTENT;\n$return .= htmlspecialchars( $file->attachmentThumbnailUrl, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-fileType=\"video\" data-mimeType=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\File::getMimeType( $file->originalFilename ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\t\t\t\t\t\t\t\t\t\t<ul class='ipsList_inline ipsImageAttach_controls'>\n\t\t\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<a href='#' data-action='insertFile' class='ipsAttach_selection' data-ipsTooltip title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'insert_into_post', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'><i class='fa fa-plus'><\/i><\/a>\n\t\t\t\t\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li class='ipsPos_right' data-role='deleteFileWrapper'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<a href='#' data-role='deleteFile' class='ipsButton ipsButton_verySmall ipsButton_light' data-ipsTooltip title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'delete', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'><i class='fa fa-trash-o'><\/i><\/a>\n\t\t\t\t\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\t\t\t<\/ul>\n\n\t\t\t\t\t\t\t\t\t\t\t<div class='ipsImageAttach_thumb ipsType_center' data-role='preview' data-grid-ratio='65' data-action='insertFile'>\n\t\t\t\t\t\t\t\t\t\t\t\t<video>\n\t\t\t\t\t\t\t\t\t\t\t\t\t <source src=\"\nCONTENT;\n$return .= htmlspecialchars( $file->url, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" type=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\File::getMimeType( $file->originalFilename ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\t\t\t\t\t\t\t\t\t\t\t<\/video>\n\t\t\t\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t\t\t\t\t<h2 class='ipsType_reset ipsAttach_title ipsTruncate ipsTruncate_line ipsType_medium' data-role='title'>\nCONTENT;\n$return .= htmlspecialchars( $file->originalFilename, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/h2>\n\t\t\t\t\t\t\t\t\t\t\t<p class='ipsType_light'>\nCONTENT;\n\n$return .= \\IPS\\Output\\Plugin\\Filesize::humanReadableFilesize( $file->filesize() );\n$return .= <<<CONTENT\n<\/p>\n\t\t\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<\/ul>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t<\/div>\t\t\n\t\t<\/div>\n\t<\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction editorAttachmentsMinimized( $name ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div data-ipsEditor-toolList data-ipsEditor-toolListMinimized data-name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" class=\"ipsAreaBackground_light ipsClearfix ipsHide\">\n\t<div data-role='attachmentArea'>\n\t\t<div class=\"ipsComposeArea_dropZone ipsComposeArea_dropZoneSmall ipsClearfix\">\n\t\t\t<i class='fa fa-paperclip'><\/i>\n\t\t\t<div class='ipsType_light ipsType_normal'>\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'loading', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t<\/div>\n\t\t<\/div>\t\t\n\t<\/div>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction editorAttachmentsPlaceholder( $name, $editor, $noUploaderError=NULL, $allowMedia=TRUE ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\t<div data-ipsEditor-toolList class=\"ipsAreaBackground_light ipsClearfix\">\n\t\t<div data-role='attachmentArea'>\n\t\t\t<div class=\"ipsComposeArea_dropZone ipsComposeArea_dropZoneSmall ipsClearfix ipsClearfix\" id='elEditorDrop_\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t\t\t<div>\n\t\t\t\t\t<ul class='ipsList_inline ipsClearfix'>\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $noUploaderError ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\nCONTENT;\n\n$val = \"{$noUploaderError}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<a href=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=attachments\", null, \"attachments\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'manage_attachments', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $allowMedia ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<li class='ipsPos_right'>\n\t\t\t\t\t\t\t<a href='#' class='ipsButton ipsButton_light ipsButton_verySmall' data-ipsMenu id='elEditorAttach_media\nCONTENT;\n\n$return .= htmlspecialchars( md5($name), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'editor_attach_other', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n <i class='fa fa-caret-down'><\/i><\/a>\n\t\t\t\t\t\t\t<ul class='ipsMenu ipsMenu_auto ipsHide' id='elEditorAttach_media\nCONTENT;\n\n$return .= htmlspecialchars( md5($name), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_menu'>\n\t\t\t\t\t\t\t\t<li class='ipsMenu_item'><a href='#' data-ipsDialog data-ipsDialog-fixed data-ipsDialog-forceReload data-ipsDialog-title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'editor_insert_existing_file', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' data-ipsDialog-url=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=editor&do=myMedia&postKey={$editor}&editorId={$name}\" . \"&csrfKey=\" . \\IPS\\Session::i()->csrfKey, null, \"\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'editor_insert_existing_file', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( \\IPS\\Settings::i()->allow_remote_images ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<li class='ipsMenu_item'><a href='#' data-ipsDialog data-ipsDialog-forceReload data-ipsDialog-title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'editor_insert_from_url', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' data-ipsDialog-url=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=editor&do=link&image=1&postKey={$editor}&editorId={$name}\" . \"&csrfKey=\" . \\IPS\\Session::i()->csrfKey, null, \"\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'editor_insert_from_url', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<\/ul>\n\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\nCONTENT;\n\nelseif ( \\IPS\\Settings::i()->allow_remote_images  ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<ul class='ipsList_inline ipsClearfix'>\n\t\t\t\t\t\t\t\t<li class='ipsPos_right'>\n\t\t\t\t\t\t\t\t\t<a class=\"ipsButton ipsButton_light\" href='#' data-ipsDialog data-ipsDialog-forceReload data-ipsDialog-title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'editor_insert_from_url', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' data-ipsDialog-url=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=editor&do=link&image=1&postKey={$editor}&editorId={$name}\" . \"&csrfKey=\" . \\IPS\\Session::i()->csrfKey, null, \"\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'editor_insert_from_url', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t<\/ul>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/ul>\n\t\t\t\t<\/div>\n\t\t\t<\/div>\t\t\n\t\t<\/div>\n\t<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction editorRaw( $name, $value, $options, $toolbars, $postKey, $uploadControl, $emoticons ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div class='ipsType_normal ipsType_richText ipsType_break' data-ipsEditor data-ipsEditor-controller=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Http\\Url::internal( \"{$options['controller']}\", null, \"\", array(), 0 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n\" \nCONTENT;\n\nif ( $options['minimize'] !== NULL ):\n$return .= <<<CONTENT\ndata-ipsEditor-minimized\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( $options['allButtons'] ):\n$return .= <<<CONTENT\ndata-ipsEditor-allbuttons='true'\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\ndata-ipsEditor-toolbars='\nCONTENT;\n\n$return .= htmlspecialchars( json_encode( $toolbars ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n data-ipsEditor-extraPlugins='\nCONTENT;\n\n$return .= \\IPS\\Settings::i()->ckeditor_extraPlugins;\n$return .= <<<CONTENT\n' \nCONTENT;\n\nif ( $postKey ):\n$return .= <<<CONTENT\ndata-ipsEditor-postKey=\"\nCONTENT;\n$return .= htmlspecialchars( $postKey, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( $options['autoSaveKey'] ):\n$return .= <<<CONTENT\ndata-ipsEditor-autoSaveKey=\"\nCONTENT;\n$return .= htmlspecialchars( $options['autoSaveKey'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" \nCONTENT;\n\nif ( $options['defaultIfNoAutoSave'] ):\n$return .= <<<CONTENT\ndata-ipsEditor-defaultIfNoAutoSave\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n data-ipsEditor-skin=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\IN_DEV ? 'ips' : \\IPS\\Theme::i()->editor_skin, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-ipsEditor-name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nif ( !$options['autoGrow'] ):\n$return .= <<<CONTENT\n data-ipsEditor-autoGrow='false'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n data-ipsEditor-pasteBehaviour='\nCONTENT;\n\n$return .= \\IPS\\Settings::i()->editor_paste_behaviour;\n$return .= <<<CONTENT\n' \nCONTENT;\n\nif ( !\\IPS\\Settings::i()->editor_embeds ):\n$return .= <<<CONTENT\ndata-ipsEditor-autoEmbed='false'\nCONTENT;\n\nelseif ( $options['embedLocalOnly'] ):\n$return .= <<<CONTENT\ndata-ipsEditor-autoEmbed='local'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n data-ipsEditor-ipsPlugins=\"\nCONTENT;\n$return .= htmlspecialchars( $options['ipsPlugins'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t<div data-role='editorComposer' class='ipsContained'>\n\t\t<noscript>\n\t\t\t<textarea name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_noscript\" rows=\"15\">\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Helpers\\Form\\Editor::valueForNoJsFallback( $value ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/textarea>\n\t\t<\/noscript>\n\t\t<div \nCONTENT;\n\nif ( $options['minimize'] ):\n$return .= <<<CONTENT\nclass=\"ipsHide norewrite\"\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\nclass=\"norewrite\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n data-role=\"mainEditorArea\">\n\t\t\t<textarea name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-role='contentEditor' class=\"ipsHide\" tabindex='1'>\nCONTENT;\n$return .= htmlspecialchars( $value, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', TRUE );\n$return .= <<<CONTENT\n<\/textarea>\n\t\t<\/div>\n\t\t\nCONTENT;\n\nif ( $options['minimize'] ):\n$return .= <<<CONTENT\n\n\t\t\t<div class='ipsComposeArea_dummy ipsJS_show' tabindex='1'><i class='\nCONTENT;\n$return .= htmlspecialchars( $options['minimizeIcon'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'><\/i> \nCONTENT;\n\n$val = \"{$options['minimize']}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/div>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<div class=\"ipsHide ipsComposeArea_editorPaste\" data-role=\"pasteMessage\">\n\t\t\t<p class='ipsType_reset ipsPad_half'>\n\t\t\t\t\nCONTENT;\n\nif ( \\IPS\\Settings::i()->editor_paste_behaviour == 'force' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<a class=\"ipsPos_right ipsType_normal ipsCursor_pointer ipsComposeArea_editorPasteSwitch\" data-action=\"removePasteFormatting\" title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'editor_keep_no_formatting', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' data-ipsTooltip>&times;<\/a>\n\t\t\t\t\t<i class=\"fa fa-info-circle\"><\/i>&nbsp; \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'editor_pasted_with_formatting', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n. &nbsp;&nbsp;<a class='ipsCursor_pointer' data-action=\"keepPasteFormatting\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'editor_restore_formatting', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t<a class=\"ipsPos_right ipsType_normal ipsCursor_pointer ipsComposeArea_editorPasteSwitch\" data-action=\"keepPasteFormatting\" title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'editor_keep_formatting', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' data-ipsTooltip>&times;<\/a>\n\t\t\t\t\t<i class=\"fa fa-info-circle\"><\/i>&nbsp; \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'editor_pasted_with_formatting', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n. &nbsp;&nbsp;<a class='ipsCursor_pointer' data-action=\"removePasteFormatting\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'editor_remove_formatting', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<\/p>\n\t\t<\/div>\n\t\t<div class=\"ipsHide ipsComposeArea_editorPaste\" data-role=\"emoticonMessage\">\n\t\t\t<p class='ipsType_reset ipsPad_half'>\n\t\t\t\t<i class=\"fa fa-info-circle\"><\/i>&nbsp; \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'editor_too_many_emoticons', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n.\n\t\t\t<\/p>\n\t\t<\/div>\n\t\t<div class=\"ipsHide ipsComposeArea_editorPaste\" data-role=\"embedMessage\">\n\t\t\t<p class='ipsType_reset ipsPad_half'>\n\t\t\t\t<a class=\"ipsPos_right ipsType_normal ipsCursor_pointer ipsComposeArea_editorPasteSwitch\" data-action=\"keepEmbeddedMedia\" title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'editor_keep_embed', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' data-ipsTooltip>&times;<\/a>\n\t\t\t\t<i class=\"fa fa-info-circle\"><\/i>&nbsp; \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'editor_pasted_embed_link', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n. &nbsp;&nbsp;<a class='ipsCursor_pointer' data-action=\"removeEmbeddedMedia\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'editor_remove_embed', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t<\/p>\n\t\t<\/div>\n\t\t<div class=\"ipsHide ipsComposeArea_editorPaste\" data-role=\"embedFailMessage\">\n\t\t\t<p class='ipsType_reset ipsPad_half'>\n\t\t\t<\/p>\n\t\t<\/div>\n\t\t<div class=\"ipsHide ipsComposeArea_editorPaste\" data-role=\"autoSaveRestoreMessage\">\n\t\t\t<p class='ipsType_reset ipsPad_half'>\n\t\t\t\t<a class=\"ipsPos_right ipsType_normal ipsCursor_pointer ipsComposeArea_editorPasteSwitch\" data-action=\"keepRestoredContents\" title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'editor_keep_restored_contents', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' data-ipsTooltip>&times;<\/a>\n\t\t\t\t<i class=\"fa fa-info-circle\"><\/i>&nbsp; \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'editor_restored_autosave', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n. &nbsp;&nbsp;<a class='ipsCursor_pointer' data-action=\"clearEditorContents\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'clear_editor_contents', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t<\/p>\n\t\t<\/div>\n\t\t<div class=\"ipsHide ipsComposeArea_editorPaste\" data-role=\"imageMessage\">\n\t\t\t<p class='ipsType_reset ipsPad_half'>\n\t\t\t\t<a class=\"ipsPos_right ipsType_normal ipsCursor_pointer ipsComposeArea_editorPasteSwitch\" data-action=\"removeImageMessage\">&times;<\/a>\n\t\t\t\t<i class=\"fa fa-info-circle\"><\/i>&nbsp; \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'editor_cannot_paste_images', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t<\/p>\n\t\t<\/div>\n\t\t{$uploadControl}\n\t<\/div>\n\t<div data-role='editorPreview' class='ipsHide'>\n\t\t<div class='ipsAreaBackground_light ipsPad_half' data-role='previewToolbar'>\n\t\t\t<a href='#' class='ipsPos_right' data-action='closePreview' title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'editor_close_preview', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' data-ipsTooltip>&times;<\/a>\n\t\t\t<ul class='ipsButton_split'>\n\t\t\t\t<li data-action='resizePreview' data-size='desktop'><a href='#' title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'device_desktop_preview', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' data-ipsTooltip class='ipsButton ipsButton_verySmall ipsButton_primary'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'device_desktop', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t<li data-action='resizePreview' data-size='tablet'><a href='#' title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'device_tablet_preview', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' data-ipsTooltip class='ipsButton ipsButton_verySmall ipsButton_light'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'device_tablet', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t<li data-action='resizePreview' data-size='phone'><a href='#' title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'device_phone_preview', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' data-ipsTooltip class='ipsButton ipsButton_verySmall ipsButton_light'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'device_phone', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t<\/ul>\n\t\t<\/div>\n\t\t<div data-role='previewContainer' class='ipsAreaBackground ipsType_center'><\/div>\n\t<\/div>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction ftp( $name, $value, $showBypassValidationCheckbox=FALSE ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div data-controller=\"core.global.core.ftp\">\n\t<ul class='ipsList_reset'>\n\t\t<li class='ipsFieldRow_inlineCheckbox'>\n\t\t\t<input type=\"radio\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[protocol]\" value=\"ftp\" id=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_ftp\" data-role=\"portToggle\" data-port=\"21\" \nCONTENT;\n\nif ( !isset( $value['protocol'] ) or $value['protocol'] == 'ftp' ):\n$return .= <<<CONTENT\nchecked\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n> <label for='\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_ftp'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'FTP', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/label>\n\t\t<\/li>\n\t\t<li class='ipsFieldRow_inlineCheckbox'>\n\t\t\t<input type=\"radio\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[protocol]\" value=\"ssl_ftp\" id=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_ssl_ftp\" data-role=\"portToggle\" data-port=\"21\" \nCONTENT;\n\nif ( isset( $value['protocol'] ) and $value['protocol'] == 'ssl_ftp' ):\n$return .= <<<CONTENT\nchecked\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n> <label for='\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_ssl_ftp'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'ftp_with_ssl', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/label>\n\t\t<\/li>\n\t\t<li class='ipsFieldRow_inlineCheckbox'>\n\t\t\t<input type=\"radio\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[protocol]\" value=\"sftp\" id=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_sftp\" data-role=\"portToggle\" data-port=\"22\" \nCONTENT;\n\nif ( isset( $value['protocol'] ) and $value['protocol'] == 'sftp' ):\n$return .= <<<CONTENT\nchecked\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n> <label for='\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_sftp'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'SFTP', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/label>\n\t\t<\/li>\n\t<\/ul>\n\t<br>\n\t<ul class='ipsField_translatable ipsList_inline ipsList_reset'>\n\t\t<li class='ipsClearfix'>\n\t\t\t<span class=\"ipsFlag fa fa-globe\"><\/span>\n\t\t\t<input type='text' name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[server]\" placeholder=\"ftp.example.com\" data-role=\"serverInput\" \nCONTENT;\n\nif ( isset( $value['server'] ) ):\n$return .= <<<CONTENT\nvalue=\"\nCONTENT;\n$return .= htmlspecialchars( $value['server'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n class=\"ipsField_medium\">\n\t\t<\/li>\n\t\t<li class='ipsClearfix'>\n\t\t\t<span class=\"ipsFlag fa fa-bolt\"><\/span>\n\t\t\t<input type='text' name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[port]\" data-role=\"portInput\" placeholder=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'port', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" value=\"\nCONTENT;\n\nif ( isset( $value['port'] ) ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $value['port'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n21\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\" class=\"ipsField_tiny\">\n\t\t<\/li>\n\t<\/ul>\n\t<ul class='ipsField_translatable ipsList_reset'>\n\t\t<li class='ipsClearfix'>\n\t\t\t<span class=\"ipsFlag fa fa-user\"><\/span>\n\t\t\t<input type='text' name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[un]\" data-role=\"usernameInput\" placeholder=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'ftp_username', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" \nCONTENT;\n\nif ( isset( $value['un'] ) ):\n$return .= <<<CONTENT\nvalue=\"\nCONTENT;\n$return .= htmlspecialchars( $value['un'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\t<\/li>\n\t\t<li class='ipsClearfix'>\n\t\t\t<span class=\"ipsFlag fa fa-lock\"><\/span>\n\t\t\t<input type='password' name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[pw]\" data-role=\"passwordInput\" placeholder=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'password', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" \nCONTENT;\n\nif ( isset( $value['pw'] ) ):\n$return .= <<<CONTENT\nvalue=\"\nCONTENT;\n$return .= htmlspecialchars( $value['pw'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\t<\/li>\n\t\t<li class='ipsClearfix'>\n\t\t\t<span class=\"ipsFlag fa fa-folder-o\"><\/span>\n\t\t\t<input type='text' name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[path]\" data-role=\"pathInput\" placeholder=\"\/path\/\" \nCONTENT;\n\nif ( isset( $value['path'] ) ):\n$return .= <<<CONTENT\nvalue=\"\nCONTENT;\n$return .= htmlspecialchars( $value['path'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\t<\/li>\n\t<\/ul>\n\t\nCONTENT;\n\nif ( $showBypassValidationCheckbox ):\n$return .= <<<CONTENT\n\n\t\t<ul class='ipsList_reset'>\n\t\t\t<li>\n\t\t\t\t<label for='\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_bypassValidation'>\n\t\t\t\t\t<input type='checkbox' name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[bypassValidation]\" value=\"1\" id='\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_bypassValidation'>\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'ftp_bypass_validation', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t<\/label>\n\t\t\t<\/li>\n\t\t<\/ul>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction ftpDisplay( $value, $url ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( $value ):\n$return .= <<<CONTENT\n\n\t<div class=\"ipsClearFix\">\n\t\t<ul class=\"ipsList ipsList_inline\">\n\t\t\t<li>\n\t\t\t\t\nCONTENT;\n\nif ( $value['protocol'] === 'sftp' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<span class=\"ipsBadge ipsBadge_style1\">SFTP<\/span>\n\t\t\t\t\nCONTENT;\n\nelseif ( $value['protocol'] === 'ssl_ftp' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<span class=\"ipsBadge ipsBadge_style6\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'ftp_with_ssl', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<span class=\"ipsType_monospace\">\nCONTENT;\n$return .= htmlspecialchars( $value['server'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nif ( $value['port'] ):\n$return .= <<<CONTENT\n:\nCONTENT;\n$return .= htmlspecialchars( $value['port'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n<\/span>\n\t\t\t<\/li>\n\t\t\t<li>\n\t\t\t\t<i class=\"fa fa-user\"><\/i> <span class=\"ipsType_monospace\">\nCONTENT;\n$return .= htmlspecialchars( $value['un'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t<\/li>\n\t\t\t<li>\n\t\t\t\t<i class=\"fa fa-lock\"><\/i> <span class=\"ipsType_monospace\">\nCONTENT;\n$return .= htmlspecialchars( $value['pw'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t<\/li>\n\t\t\t\nCONTENT;\n\nif ( $value['path'] ):\n$return .= <<<CONTENT\n\n\t\t\t\t<li>\n\t\t\t\t\t<i class=\"fa fa-folder\"><\/i> <span class=\"ipsType_monospace\">\nCONTENT;\n$return .= htmlspecialchars( $value['path'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t<\/li>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( $url ):\n$return .= <<<CONTENT\n\n\t\t\t\t<li>\n\t\t\t\t\t<a href=\"\nCONTENT;\n$return .= htmlspecialchars( $url, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" class=\"ipsButton ipsButton_light ipsButton_veryVerySmall\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'connect', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t<\/li>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<\/ul>\n\t<\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction interval( $name, $valueNumber, $selectedUnit, $required, $unlimited, $unlimitedLang, $unlimitedToggles, $unlimitedToggleOn, $valueToggles, $minSeconds, $maxSeconds, $disabled=FALSE ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<input\n\ttype=\"number\"\n\tname=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[val]\"\n\tsize=\"5\"\n\t\nCONTENT;\n\nif ( $required === TRUE ):\n$return .= <<<CONTENT\naria-required='true'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( $unlimited !== NULL and $valueNumber == $unlimited ):\n$return .= <<<CONTENT\n\n\t\tvalue=\"\"\n\t\tdata-jsdisable=\"true\"\n\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\tvalue=\"\nCONTENT;\n$return .= htmlspecialchars( $valueNumber, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\tclass=\"ipsField_short\"\n\t\nCONTENT;\n\nif ( $minSeconds !== NULL ):\n$return .= <<<CONTENT\n\n\t\tmin=\"\nCONTENT;\n\n$return .= htmlspecialchars( floor($minSeconds\/86400), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( $maxSeconds !== NULL ):\n$return .= <<<CONTENT\n\n\t\tmax=\"\nCONTENT;\n$return .= htmlspecialchars( $maxSeconds, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\tstep=\"any\"\n\t\nCONTENT;\n\nif ( $disabled ):\n$return .= <<<CONTENT\n\n\t\tdisabled aria-disabled='true'\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( \\count( $valueToggles ) ):\n$return .= <<<CONTENT\n\n\t\tdata-control=\"toggle\" data-toggles=\"\nCONTENT;\n\n$return .= htmlspecialchars( implode( ',', $valueToggles ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n>\n<select name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[unit]\" \nCONTENT;\n\nif ( $required === TRUE ):\n$return .= <<<CONTENT\naria-required='true'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( $disabled ):\n$return .= <<<CONTENT\ndisabled aria-disabled='true'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\nCONTENT;\n\nif ( $maxSeconds === NULL or $maxSeconds >= 604800 ):\n$return .= <<<CONTENT\n\n\t\t<option value=\"w\" \nCONTENT;\n\nif ( $selectedUnit === 'w' ):\n$return .= <<<CONTENT\nselected\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'weeks', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( ( $maxSeconds === NULL or $maxSeconds >= 86400 ) and ( $minSeconds === NULL or $minSeconds < 604800 ) ):\n$return .= <<<CONTENT\n\n\t\t<option value=\"d\" \nCONTENT;\n\nif ( $selectedUnit === 'd' ):\n$return .= <<<CONTENT\nselected\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'days', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( ( $maxSeconds === NULL or $maxSeconds >= 3600 ) and ( $minSeconds === NULL or $minSeconds < 86400 ) ):\n$return .= <<<CONTENT\n\n\t\t<option value=\"h\" \nCONTENT;\n\nif ( $selectedUnit === 'h' ):\n$return .= <<<CONTENT\nselected\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'hours', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( ( $maxSeconds === NULL or $maxSeconds >= 60 ) and ( $minSeconds === NULL or $minSeconds < 3600 ) ):\n$return .= <<<CONTENT\n\n\t\t<option value=\"i\" \nCONTENT;\n\nif ( $selectedUnit === 'i' ):\n$return .= <<<CONTENT\nselected\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'minutes', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( $minSeconds === NULL or $minSeconds < 60 ):\n$return .= <<<CONTENT\n\n\t\t<option value=\"s\" \nCONTENT;\n\nif ( $selectedUnit === 's' ):\n$return .= <<<CONTENT\nselected\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'seconds', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<\/select>\n\nCONTENT;\n\nif ( $unlimited !== NULL ):\n$return .= <<<CONTENT\n\n\t&nbsp;\n\t<div class=\"ipsFieldRow_inlineCheckbox\">\n\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'or', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t&nbsp;\n\t\t<span class='ipsCustomInput'>\n\t\t\t<input\n\t\t\t\ttype=\"checkbox\"\n\t\t\t\tdata-control=\"unlimited\nCONTENT;\n\nif ( \\count($unlimitedToggles) ):\n$return .= <<<CONTENT\n toggle\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\"\n\t\t\t\tname=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[unlimited]\"\n\t\t\t\tid='\nCONTENT;\n\n$return .= htmlspecialchars( preg_replace( '\/\\[(.+?)\\]\/', '[$1_unlimited]', $name, 1 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n-unlimitedCheck'\n\t\t\t\tvalue=\"1\"\n\t\t\t\t\nCONTENT;\n\nif ( $unlimited == $valueNumber ):\n$return .= <<<CONTENT\n\n\t\t\t\t\tchecked aria-checked='true'\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nif ( $disabled ):\n$return .= <<<CONTENT\n\n\t\t\t\t\tdisabled aria-disabled='true'\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nif ( \\count( $unlimitedToggles ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nif ( $unlimitedToggleOn === FALSE ):\n$return .= <<<CONTENT\ndata-togglesOff\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\ndata-togglesOn\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n=\"\nCONTENT;\n\n$return .= htmlspecialchars( implode( ',', $unlimitedToggles ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\taria-labelledby='\nCONTENT;\n\n$return .= htmlspecialchars( preg_replace( '\/\\[(.+?)\\]\/', '[$1_unlimited]', $name, 1 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_label'\n\t\t\t>\n\t\t\t<span><\/span>\n\t\t<\/span>\n\t\t<label for='\nCONTENT;\n\n$return .= htmlspecialchars( preg_replace( '\/\\[(.+?)\\]\/', '[$1_unlimited]', $name, 1 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n-unlimitedCheck' id='\nCONTENT;\n\n$return .= htmlspecialchars( preg_replace( '\/\\[(.+?)\\]\/', '[$1_unlimited]', $name, 1 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_label' class='ipsField_unlimited'>\n\t\t\t\nCONTENT;\n\n$val = \"{$unlimitedLang}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t<\/label>\n\t<\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction item( $name, $value, $maxItems, $minAjaxLength, $datasource, $template ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<input type=\"hidden\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_values\" value=\"\nCONTENT;\n\n$return .= htmlspecialchars( implode( ',', array_keys($value) ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n<input\n\ttype=\"text\"\n\tname=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\n\tvalue=\"\"\n\tid=\"elInput_\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\n\tdata-ipsContentItem\n\t\nCONTENT;\n\nif ( $maxItems ):\n$return .= <<<CONTENT\ndata-ipsContentItem-maxItems=\"\nCONTENT;\n$return .= htmlspecialchars( $maxItems, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\tdata-ipsContentItem-dataSource=\"\nCONTENT;\n$return .= htmlspecialchars( $datasource, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\n\tdata-ipsContentItem-minAjaxLength=\"\nCONTENT;\n$return .= htmlspecialchars( $minAjaxLength, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\n>\n<ul data-contentItem-results=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" class=\"ipsList_reset ipsContentItemSelector\">\n\nCONTENT;\n\nif ( \\is_array($value) ):\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nforeach ( $value as $item ):\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\n$html = $template( $item );\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\n$idColumn = $item::$databaseColumnId;\n$return .= <<<CONTENT\n\n\t\t<li data-id='\nCONTENT;\n$return .= htmlspecialchars( $item->$idColumn, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t\t<span class='cContentItem_delete' data-action='delete'>&times;<\/span>\n\t\t\t{$html}\n\t\t<\/li>\n\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<\/ul>\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction itemResult( $item ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\n$idField = $item::$databaseColumnId;\n$return .= <<<CONTENT\n\n<div data-itemid=\"\nCONTENT;\n$return .= htmlspecialchars( $item->$idField, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-role='contentItemRow'>\n\t<strong>\nCONTENT;\n$return .= htmlspecialchars( $item->mapped('title'), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/strong>\n\t\nCONTENT;\n\nif ( $item->container() ):\n$return .= <<<CONTENT\n\n\t\t<em>\nCONTENT;\n\n$sprintf = array($item->container()->_title); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'item_selector_added_to_container', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n<\/em>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( isset( $item::$databaseColumnMap['date'] ) ):\n$return .= <<<CONTENT\n\n\t\t<span class='ipsType_light'>\nCONTENT;\n\n$htmlsprintf = array(\\IPS\\DateTime::ts($item->mapped('date'))->html()); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'item_selector_added_on', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'htmlsprintf' => $htmlsprintf ) );\n$return .= <<<CONTENT\n<\/span>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\t\n<\/div>\n\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction keyValue( $key, $value ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div class=\"ipsField_stackItem_keyValue\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'form_key_value_key', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n <span data-ipsStack-keyvalue-name=\"key\">{$key}<\/span> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'form_key_value_value', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n <span data-ipsStack-keyvalue-name=\"key\">{$value}<\/span><\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction matrix( $id, $headers, $rows, $action, $hiddenValues, $actionButtons, $langPrefix, $widths=array(), $manageable=TRUE, $checkAlls=array(), $checkAllRows=FALSE, $classes=array(), $showTooltips=FALSE, $squashFields=TRUE, $sortable=FALSE ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<form accept-charset='utf-8' class=\"ipsForm\" action=\"\nCONTENT;\n$return .= htmlspecialchars( $action, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" method=\"post\" data-ipsMatrix \nCONTENT;\n\nif ( $sortable ):\n$return .= <<<CONTENT\ndata-ipsMatrix-sortable='true'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n data-ipsMatrix-manageable='\nCONTENT;\n\nif ( $manageable ):\n$return .= <<<CONTENT\ntrue\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\nfalse\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n' \nCONTENT;\n\nif ( $squashFields ):\n$return .= <<<CONTENT\ndata-ipsMatrix-squashFields\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t<input type=\"hidden\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_submitted\" value=\"1\">\n\t\nCONTENT;\n\nforeach ( $hiddenValues as $k => $v ):\n$return .= <<<CONTENT\n\n\t\t<input type=\"hidden\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $k, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" value=\"\nCONTENT;\n$return .= htmlspecialchars( $v, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nforeach ( $rows as $rowId => $row ):\n$return .= <<<CONTENT\n\n\t\t<input type='hidden' name='\nCONTENT;\n$return .= htmlspecialchars( $id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_matrixRows[\nCONTENT;\n$return .= htmlspecialchars( $rowId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n]' data-matrixrowid='\nCONTENT;\n$return .= htmlspecialchars( $rowId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' value='1'>\n\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( $manageable ):\n$return .= <<<CONTENT\n\n\t\t<div class='ipsClearfix'>\n\t\t\t<div class=\"ipsJS_show\">\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->buttons( array( 'add' => array( 'link' => \\IPS\\Http\\Url::internal( '#' ), 'icon' => 'plus', 'title' => 'add_button', 'class' => 'matrixAdd', 'data' => array( 'matrixID' => $id ) ) ) );\n$return .= <<<CONTENT\n\n\t\t\t<\/div>\n\t\t<\/div>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<table class='ipsTable ipsMatrix ipsClear ipsTable_responsive \nCONTENT;\n\nif ( \\count( $classes ) ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= htmlspecialchars( implode( ' ', $classes ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n' role='grid' data-matrixID='\nCONTENT;\n$return .= htmlspecialchars( $id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"forms\", \"core\", 'global' )->matrixRows( $headers, $rows, $langPrefix, $manageable, $widths, $checkAlls, $checkAllRows, $showTooltips, $sortable ? $id : FALSE );\n$return .= <<<CONTENT\n\n\t<\/table>\t\n\t<div class=\"ipsAreaBackground_light ipsClearfix ipsPad ipsType_center\">\n\t\t\nCONTENT;\n\nforeach ( $actionButtons as $button ):\n$return .= <<<CONTENT\n{$button} \nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t<\/div>\n<\/form>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction matrixNested( $id, $headers, $rows, $action, $hiddenValues, $actionButtons, $langPrefix, $widths=array(), $manageable=TRUE, $checkAlls=array(), $checkAllRows=FALSE, $classes=array(), $showTooltips=FALSE, $squashFields=TRUE, $sortable=FALSE ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div data-ipsMatrix data-ipsMatrix-manageable='\nCONTENT;\n\nif ( $manageable ):\n$return .= <<<CONTENT\ntrue\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\nfalse\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n' \nCONTENT;\n\nif ( $sortable ):\n$return .= <<<CONTENT\ndata-ipsMatrix-sortable='true'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( $squashFields ):\n$return .= <<<CONTENT\ndata-ipsMatrix-squashFields\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\nCONTENT;\n\nforeach ( $rows as $rowId => $row ):\n$return .= <<<CONTENT\n\n\t\t<input type='hidden' name='\nCONTENT;\n$return .= htmlspecialchars( $id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_matrixRows[\nCONTENT;\n$return .= htmlspecialchars( $rowId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n]' data-matrixrowid='\nCONTENT;\n$return .= htmlspecialchars( $rowId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' value='1'>\n\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( $manageable ):\n$return .= <<<CONTENT\n\n\t\t<div class='ipsClearfix'>\n\t\t\t<div class=\"ipsJS_show\">\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\", 'admin' )->buttons( array( 'add' => array( 'link' => \\IPS\\Http\\Url::internal( '#' ), 'icon' => 'plus', 'title' => 'add_button', 'class' => 'matrixAdd', 'data' => array( 'matrixID' => $id ) ) ) );\n$return .= <<<CONTENT\n\n\t\t\t<\/div>\n\t\t<\/div>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<table class='ipsTable ipsMatrix ipsClear ipsTable_responsive \nCONTENT;\n\nif ( \\count( $classes ) ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= htmlspecialchars( implode( ' ', $classes ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n' role='grid' data-matrixID='\nCONTENT;\n$return .= htmlspecialchars( $id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"forms\", \"core\", 'global' )->matrixRows( $headers, $rows, $langPrefix, $manageable, $widths, $checkAlls, $checkAllRows, $showTooltips, $sortable ? $id : FALSE );\n$return .= <<<CONTENT\n\n\t<\/table>\t\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction matrixRows( $headers, $rows, $langPrefix, $manageable=TRUE, $widths=array(), $checkAlls=array(), $checkAllRows=FALSE, $showTooltips=FALSE, $sortable=FALSE ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<thead>\n\t<tr>\n\t\t\nCONTENT;\n\nif ( $sortable ):\n$return .= <<<CONTENT\n\n\t\t\t<th><\/th>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nforeach ( $headers as $header ):\n$return .= <<<CONTENT\n\n\t\t\t<th class=\"ipsMatrixHeader ipsType_center\" style=\"width: \nCONTENT;\n$return .= htmlspecialchars( $widths[ $header ], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n%\">\n\t\t\t\t\nCONTENT;\n\n$val = \"{$langPrefix}{$header}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nif ( array_key_exists( $header, $checkAlls ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<br>\n\t\t\t\t\t<span class='ipsCustomInput'>\n\t\t\t\t\t\t<input type=\"checkbox\" data-action=\"checkAll\" name=\"__all[\nCONTENT;\n$return .= htmlspecialchars( $header, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n]\" data-checkallheader=\"\nCONTENT;\n$return .= htmlspecialchars( $header, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" \nCONTENT;\n\nif ( $checkAlls[ $header ] ):\n$return .= <<<CONTENT\nchecked aria-checked='true'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\t\t\t\t\t<span><\/span>\n\t\t\t\t\t<\/span>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<\/th>\n\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( $manageable ):\n$return .= <<<CONTENT\n\n\t\t\t<th class='ipsTable_controls'>\n\t\t\t\t<noscript>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'delete', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/noscript>\n\t\t\t<\/th>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/tr>\n<\/thead>\n<tbody>\n\t<tr role='row' class='ipsMatrix_empty \nCONTENT;\n\nif ( \\count( $rows ) > 0 ):\n$return .= <<<CONTENT\nipsHide\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\n\t\t<td colspan=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\count( $headers ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" class='ipsPad ipsType_light'>\n\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'matrix_no_rows', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t<\/td>\n\t<\/tr>\n\t\nCONTENT;\n\nforeach ( $rows as $rowId => $row ):\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( \\is_string( $row ) ):\n$return .= <<<CONTENT\n\n\t\t\t<tr>\n\t\t\t\t<th class=\"ipsMatrix_subHeader\" colspan=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\count( $headers ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">{$row}<\/th>\n\t\t\t<\/tr>\n\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t<tr data-matrixrowid=\"\nCONTENT;\n$return .= htmlspecialchars( $rowId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" role='row' \nCONTENT;\n\nif ( \\IPS\\Request::i()->type && \\IPS\\Request::i()->type == $rowId ):\n$return .= <<<CONTENT\nclass='ipsMatrix_highlighted'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\t\t\t\nCONTENT;\n\nif ( $sortable ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input type=\"hidden\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $sortable, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_matrixOrder[]\" value=\"\nCONTENT;\n$return .= htmlspecialchars( $rowId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-role=\"noMatrixSquash\">\n\t\t\t\t\t\t<div class='ipsTree_drag ipsDrag'>\n\t\t\t\t\t\t\t<i class='ipsTree_dragHandle ipsDrag_dragHandle fa fa-bars ipsJS_show' data-ipsTooltip data-ipsTooltip-label='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'reorder', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'><\/i>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/td>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nforeach ( $headers as $header ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nif ( \\is_object( $row[ $header ] ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<td role='gridcell' \nCONTENT;\n\nif ( $showTooltips ):\n$return .= <<<CONTENT\ndata-ipsTooltip title=\"\nCONTENT;\n\n$val = \"{$langPrefix}{$header}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n data-col='\nCONTENT;\n$return .= htmlspecialchars( $header, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-title=\"\nCONTENT;\n\n$val = \"{$langPrefix}{$header}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" class=\"ipsType_center\nCONTENT;\n\nif ( $row[$header]->error ):\n$return .= <<<CONTENT\n ipsMatrix_error\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\">\n\t\t\t\t\t\t\t{$row[ $header ]->html()}\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $row[$header]->error ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<p class=\"ipsType_warning\">\nCONTENT;\n\n$val = \"{$row[$header]->error}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\nCONTENT;\n\nelseif ( \\is_string( $row[ $header ] ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<td role='gridcell' class=\"ipsMatrix_rowTitle\">\n\t\t\t\t\t\t\t<div \nCONTENT;\n\nif ( isset( $row['_level'] ) ):\n$return .= <<<CONTENT\nstyle=\"margin-left: \nCONTENT;\n\n$return .= htmlspecialchars( $row['_level']*15, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\npx\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\t\t\t\t\t\t\t<strong>\nCONTENT;\n\nif ( $langPrefix === FALSE ):\n$return .= <<<CONTENT\n{$row[ $header ]}\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n\n$val = \"{$row[ $header ]}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $checkAllRows ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t<br>\n\t\t\t\t\t\t\t\t\t<small class=\"ipsJS_show\">\n\t\t\t\t\t\t\t\t\t\t<a href='#' data-action=\"checkRow\" class='ipsButton ipsButton_light ipsButton_verySmall'><i class='fa fa-plus'><\/i><\/a> <a href='#' data-action=\"unCheckRow\" class='ipsButton ipsButton_light ipsButton_verySmall'><i class='fa fa-minus'><\/i><\/a>\n\t\t\t\t\t\t\t\t\t<\/small>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nif ( $manageable ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<td role='gridcell' class=\"ipsTable_controls\">\n\t\t\t\t\t\t\nCONTENT;\n\nif ( mb_substr( $rowId, 0, 5 ) !== '_new_' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<span class=\"ipsJS_show\">\n\t\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->controlStrip( array( 'add' => array( 'icon' => 'times-circle', 'title' => 'delete', 'class' => 'matrixDelete' ) ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<\/span>\n\t\t\t\t\t\t\t<noscript>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"forms\", \"core\", 'global' )->checkbox( $rowId . '_delete' );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<\/noscript>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/td>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<\/tr>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n<\/tbody>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction message( $lang, $id=NULL, $css='', $parse=FALSE ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<li \nCONTENT;\n\nif ( $id !== NULL ):\n$return .= <<<CONTENT\n id=\"\nCONTENT;\n$return .= htmlspecialchars( $id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t<div class=\"ipsPad\">\n\t\t<div class=\"\nCONTENT;\n$return .= htmlspecialchars( $css, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\t\t\nCONTENT;\n\nif ( $parse ):\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\n$val = \"{$lang}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t{$lang}\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<\/div>\n\t<\/div>\n<\/li>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction node( $name, $value, $multiple, $url, $title, $roots, $zeroVal, $noJs, $permCheck, $subnodes, $togglePerm=NULL, $toggleIds=array(), $disabledCallback=NULL, $zeroValTogglesOn=array(), $zeroValTogglesOff=array(), $autoPopulate=FALSE, $children=NULL, $nodeClass=NULL, $where=NULL, $disabledArray=array(), $noParentNodesTitle=NULL, $noParentNodes=array(), $clubs=FALSE, $togglePermPBR=TRUE, $toggleIdsOff=array() ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div class='ipsSelectTree ipsJS_show' data-name='\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-ipsSelectTree data-ipsSelectTree-url=\"\nCONTENT;\n$return .= htmlspecialchars( $url, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" \nCONTENT;\n\nif ( $multiple ):\n$return .= <<<CONTENT\ndata-ipsSelectTree-multiple\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n data-ipsSelectTree-selected='{$value}'>\n\t<input type=\"hidden\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" value=\"\" data-role=\"nodeValue\">\n\t<div class='ipsSelectTree_value ipsSelectTree_placeholder'><\/div>\n\t<span class='ipsSelectTree_expand'><i class='fa fa-chevron-down'><\/i><\/span>\n\t<div class='ipsSelectTree_nodes ipsHide'>\n\t\t<div data-role='nodeList' class='ipsScrollbar'>\n\t\t\t\nCONTENT;\n\nif ( $clubs ):\n$return .= <<<CONTENT\n\n\t\t\t\t<div class='ipsTabs ipsTabs_small ipsTabs_stretch ipsClearfix ipsJS_show' id='tabs_nodeSelect_\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-ipsTabBar data-ipsTabBar-contentArea='#ipsTabs_content_nodeSelect_\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t<a href='#tabs_nodeSelect_\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-action='expandTabs'><i class='fa fa-caret-down'><\/i><\/a>\n\t\t\t\t\t<ul role='tablist'>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<a href='#ipsTabs_tabs_nodeSelect_\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_nodeSelect_\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_tab_global_panel' id='nodeSelect_\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_tab_global' class=\"ipsTabs_item\" role=\"tab\">\n\t\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'club_node_selector_global', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<a href='#ipsTabs_tabs_nodeSelect_\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_nodeSelect_\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_tab_clubs_panel' id='nodeSelect_\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_tab_clubs' class=\"ipsTabs_item\" role=\"tab\">\n\t\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'club_node_selector_clubs', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t<\/li>\n\t\t\t\t\t<\/ul>\n\t\t\t\t<\/div>\n\t\t\t\t<div id='ipsTabs_content_nodeSelect_\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsTabs_panels'>\n\t\t\t\t\t<div id='ipsTabs_tabs_nodeSelect_\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_nodeSelect_\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_tab_global_panel' class=\"ipsTabs_panel\" aria-labelledby=\"nodeSelect_\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_tab_global\" aria-hidden=\"false\">\n\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"forms\", \"core\", 'global' )->nodeCascade( $roots, FALSE, $permCheck, $subnodes, $togglePerm, $toggleIds, $disabledCallback, $autoPopulate, $children, $nodeClass, $where, $disabledArray, $noParentNodesTitle, $noParentNodes, FALSE, $togglePermPBR, $toggleIdsOff );\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/div>\n\t\t\t\t\t<div id='ipsTabs_tabs_nodeSelect_\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_nodeSelect_\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_tab_clubs_panel' class=\"ipsTabs_panel\" aria-labelledby=\"nodeSelect_\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_tab_clubs\" aria-hidden=\"false\">\n\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"forms\", \"core\", 'global' )->nodeCascade( $roots, FALSE, $permCheck, $subnodes, $togglePerm, $toggleIds, $disabledCallback, $autoPopulate, $children, $nodeClass, $where, $disabledArray, $noParentNodesTitle, $noParentNodes, TRUE, $togglePermPBR, $toggleIdsOff );\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/div>\n\t\t\t\t<\/div>\t\t\n\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"forms\", \"core\", 'global' )->nodeCascade( $roots, FALSE, $permCheck, $subnodes, $togglePerm, $toggleIds, $disabledCallback, $autoPopulate, $children, $nodeClass, $where, $disabledArray, $noParentNodesTitle, $noParentNodes, NULL, $togglePermPBR, $toggleIdsOff );\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<\/div>\n\t<\/div>\n<\/div>\n\nCONTENT;\n\nif ( $zeroVal !== NULL ):\n$return .= <<<CONTENT\n\n\t&nbsp;\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'or', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n&nbsp;\n\t<span class='ipsCustomInput'>\n\t\t<input type=\"checkbox\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n-zeroVal\" id=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n-zeroVal\" data-role=\"zeroVal\" \nCONTENT;\n\nif ( $value === 0 ):\n$return .= <<<CONTENT\nchecked\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( !empty($zeroValTogglesOn) OR !empty($zeroValTogglesOff) ):\n$return .= <<<CONTENT\ndata-control=\"toggle\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( !empty($zeroValTogglesOn) ):\n$return .= <<<CONTENT\n data-togglesOn=\"\nCONTENT;\n\n$return .= htmlspecialchars( implode( ',', $zeroValTogglesOn ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" aria-controls=\"\nCONTENT;\n\n$return .= htmlspecialchars( implode( ',', $zeroValTogglesOn ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( !empty($zeroValTogglesOff) ):\n$return .= <<<CONTENT\n data-togglesOff=\"\nCONTENT;\n\n$return .= htmlspecialchars( implode( ',', $zeroValTogglesOff ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" aria-controls=\"\nCONTENT;\n\n$return .= htmlspecialchars( implode( ',', $zeroValTogglesOff ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n > \n\t\t<span><\/span>\n\t<\/span>\n\t<label for=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n-zeroVal\" class='ipsField_unlimited'>\nCONTENT;\n\n$val = \"{$zeroVal}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/label>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<noscript>\n\t\nCONTENT;\n\nif ( $noJs ):\n$return .= <<<CONTENT\n\n\t\t{$noJs}\n\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t<a href=\"\nCONTENT;\n$return .= htmlspecialchars( $url->setQueryString( '_noJs', '1' ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'click_here_to_refresh', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<\/noscript>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction nodeAutocomplete( $v ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<ol class=\"ipsNodeSelect_breadcrumb\">\n\t\nCONTENT;\n\nforeach ( $v->parents() as $parent ):\n$return .= <<<CONTENT\n\n\t\t<li><span class=\"ipsType_light\">\nCONTENT;\n$return .= htmlspecialchars( $parent->_title, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n <i class=\"fa fa-angle-right\"><\/i><\/span><\/li>\n\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t<li>\nCONTENT;\n$return .= htmlspecialchars( $v->_title, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/li>\n<\/ol>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction nodeCascade( $nodes, $results=FALSE, $permCheck=NULL, $subnodes=TRUE, $togglePerm=NULL, $toggleIds=array(), $disabledCallback=NULL, $autoPopulate=FALSE, $children=NULL, $nodeClass=NULL, $where=NULL, $disabledArray=array(), $noParentNodesTitle=NULL, $noParentNodes=array(), $clubs=NULL, $togglePermPBR=TRUE, $toggleIdsOff=array() ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( empty( $nodes ) ):\n$return .= <<<CONTENT\n\n\t<p class='ipsPad_half ipsType_reset ipsType_light'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'no_results', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t<ul class='ipsList_reset'>\n\t\t\nCONTENT;\n\nforeach ( $nodes as $node ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( $clubs === NULL or ( $clubs === TRUE and $node->club() ) or ( $clubs === FALSE and !$node->club() ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t<li>\n\t\t\t\t\t\nCONTENT;\n\nif ( ( $permCheck === NULL or $node->can( $permCheck ) ) and ( $disabledCallback === NULL or $disabledCallback( $node ) ) and !\\in_array( $node->_id, $disabledArray ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<div data-action=\"nodeSelect\" class='ipsSelectTree_item \nCONTENT;\n\nif ( $node->hasChildren( 'view', NULL, $subnodes, $where ) ):\n$return .= <<<CONTENT\nipsSelectTree_withChildren\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( $autoPopulate AND isset( $children[ $node->_id ] ) ):\n$return .= <<<CONTENT\nipsSelectTree_itemOpen\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n' data-id=\"\nCONTENT;\n$return .= htmlspecialchars( $node->_id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nif ( $nodeClass and !( $node instanceof $nodeClass ) ):\n$return .= <<<CONTENT\n.s\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\" data-breadcrumb='\nCONTENT;\n\n$return .= htmlspecialchars( json_encode( array_values( array_map( function( $val ){ return isset( $val::$titleLangPrefix ) ? \\IPS\\Member::loggedIn()->language()->addToStack( $val::$titleLangPrefix . $val->_id, FALSE, array( 'json' => TRUE, 'escape' => TRUE, 'striptags' => TRUE ) ) : ( $val->_title ? $val->_title : $val->_title ); }, iterator_to_array( $node->parents() ) ) ) ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' \nCONTENT;\n\nif ( $togglePerm ):\n$return .= <<<CONTENT\ndata-control=\"toggle\" \nCONTENT;\n\nif ( $node->can( $togglePerm, NULL, $togglePermPBR ) ):\n$return .= <<<CONTENT\ndata-toggles=\"\nCONTENT;\n\n$return .= htmlspecialchars( implode( ',', $toggleIds ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nelseif ( !$togglePerm and isset( $toggleIds[ $node->_id ] ) ):\n$return .= <<<CONTENT\ndata-control=\"toggle\" data-toggles=\"\nCONTENT;\n\n$return .= htmlspecialchars( implode( ',', $toggleIds[ $node->_id ] ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nelseif ( \\count( $toggleIdsOff ) ):\n$return .= <<<CONTENT\ndata-toggles=\"\nCONTENT;\n\n$return .= htmlspecialchars( implode( ',', $toggleIdsOff ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( $autoPopulate AND isset( $children[ $node->_id ] ) ):\n$return .= <<<CONTENT\ndata-childrenloaded=\"true\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $node->hasChildren( 'view', NULL, $subnodes, $where ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<a href='#' data-action=\"getChildren\" class='ipsSelectTree_toggle'><\/a>\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<span data-role=\"nodeTitle\">\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $clubs === TRUE ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$sprintf = array($node->club()->name, $node->_title); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'club_container_title', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $node->_title, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<\/span>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $autoPopulate AND isset( $children[ $node->_id ] ) and \\get_class( $node ) == ltrim( $nodeClass, '\\\\' ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<div data-role=\"childWrapper\">\n\t\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"forms\", \"core\", 'global' )->nodeCascade( $children[ $node->_id ], FALSE, $permCheck, $subnodes, $togglePerm, $toggleIds, $disabledCallback, FALSE, $children, $nodeClass, $where, $disabledArray, NULL, array(), NULL, $togglePermPBR, $toggleIdsOff );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $disabledCallback === NULL or $disabledCallback( $node ) !== NULL ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<div class='ipsSelectTree_item ipsSelectTree_itemDisabled \nCONTENT;\n\nif ( $node->hasChildren( 'view', NULL, $subnodes, $where ) ):\n$return .= <<<CONTENT\nipsSelectTree_withChildren\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( $autoPopulate AND isset( $children[ $node->_id ] ) ):\n$return .= <<<CONTENT\nipsSelectTree_itemOpen\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n' data-id=\"\nCONTENT;\n$return .= htmlspecialchars( $node->_id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-breadcrumb='\nCONTENT;\n\n$return .= htmlspecialchars( json_encode( array_values( array_map( function( $val ){ return isset( $val::$titleLangPrefix ) ? \\IPS\\Member::loggedIn()->language()->addToStack( $val::$titleLangPrefix . $val->_id, FALSE, array( 'json' => TRUE, 'escape' => TRUE, 'striptags' => TRUE ) ) : ( $val->_title ? $val->_title : $val->_title ); }, iterator_to_array( $node->parents() ) ) ) ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' \nCONTENT;\n\nif ( $autoPopulate AND isset( $children[ $node->_id ] ) ):\n$return .= <<<CONTENT\ndata-childrenloaded=\"true\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $node->hasChildren( 'view', NULL, $subnodes, $where ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t<a href='#' data-action=\"getChildren\" class='ipsSelectTree_toggle'><\/a>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<span data-role=\"nodeTitle\">\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $clubs === TRUE ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$sprintf = array($node->club()->name, $node->_title); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'club_container_title', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $node->_title, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<\/span>\n\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $autoPopulate AND isset( $children[ $node->_id ] ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<div data-role=\"childWrapper\">\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"forms\", \"core\", 'global' )->nodeCascade( $children[ $node->_id ], FALSE, $permCheck, $subnodes, $togglePerm, $toggleIds, $disabledCallback, FALSE, $children, $nodeClass, $where, $disabledArray, NULL, array(), NULL, $togglePermPBR, $toggleIdsOff );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/li>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( $noParentNodesTitle and \\count( $noParentNodes ) ):\n$return .= <<<CONTENT\n\n\t\t\t<li>\n\t\t\t\t<div class='ipsSelectTree_item ipsSelectTree_itemDisabled ipsSelectTree_withChildren \nCONTENT;\n\nif ( $autoPopulate ):\n$return .= <<<CONTENT\nipsSelectTree_itemOpen\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n' data-id=\"0\" data-breadcrumb='\nCONTENT;\n\n$return .= htmlspecialchars( json_encode( array() ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' \nCONTENT;\n\nif ( $autoPopulate ):\n$return .= <<<CONTENT\ndata-childrenloaded=\"true\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\t\t\t\t<a href='#' data-action=\"getChildren\" class='ipsSelectTree_toggle'><\/a>\n\t\t\t\t\t<span data-role=\"nodeTitle\">\nCONTENT;\n\n$val = \"{$noParentNodesTitle}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t<\/div>\n\t\t\t\t\nCONTENT;\n\nif ( $autoPopulate ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<div data-role=\"childWrapper\">\n\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"forms\", \"core\", 'global' )->nodeCascade( $noParentNodes, FALSE, $permCheck, $subnodes, $togglePerm, $toggleIds, $disabledCallback, $autoPopulate, $children, $nodeClass, $where, $disabledArray, NULL, array(), NULL, $togglePermPBR, $toggleIdsOff );\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/div>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<\/li>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/ul>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction number( $name, $value, $required, $unlimited=NULL, $range=FALSE, $min=NULL, $max=NULL, $step=NULL, $decimals=0, $unlimitedLang='unlimited', $disabled=FALSE, $suffix=NULL, $toggles=array(), $toggleOn=TRUE, $valueToggles=array(), $id=NULL ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( $range && $min !== NULL ):\n$return .= <<<CONTENT\n\n<strong class='ipsType_small' data-role='rangeBoundary'>\nCONTENT;\n$return .= htmlspecialchars( $min, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/strong>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<input\n\ttype=\"\nCONTENT;\n\nif ( $range ):\n$return .= <<<CONTENT\nrange\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\nnumber\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\"\n\tname=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\n\t\nCONTENT;\n\nif ( $id !== NULL ):\n$return .= <<<CONTENT\n\n\t\tid=\"elNumber_\nCONTENT;\n$return .= htmlspecialchars( $id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\tsize=\"5\"\n\t\nCONTENT;\n\nif ( $required === TRUE ):\n$return .= <<<CONTENT\naria-required='true'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( $unlimited !== NULL and $value === $unlimited ):\n$return .= <<<CONTENT\n\n\t\tvalue=\"\"\n\t\tdata-jsdisable=\"true\"\n\t\nCONTENT;\n\nelseif ( \\is_numeric( $value ) ):\n$return .= <<<CONTENT\n\n\t\tvalue=\"\nCONTENT;\n\n$return .= htmlspecialchars( number_format( $value, $decimals === true ? mb_strlen( mb_substr( $value, mb_strpos( $value, '.' ) + 1 ) ) : $decimals, '.', '' ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\n\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\tvalue=\"0\"\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\tclass=\"ipsField_short\"\n\t\nCONTENT;\n\nif ( $min !== NULL ):\n$return .= <<<CONTENT\n\n\t\tmin=\"\nCONTENT;\n$return .= htmlspecialchars( $min, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( $max !== NULL ):\n$return .= <<<CONTENT\n\n\t\tmax=\"\nCONTENT;\n$return .= htmlspecialchars( $max, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( $step !== NULL and $step != 'any' ):\n$return .= <<<CONTENT\n\n\t\tstep=\"\nCONTENT;\n\n$return .= htmlspecialchars( number_format( $step, $decimals, '.', '' ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\n\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\tstep=\"any\"\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( $disabled ):\n$return .= <<<CONTENT\ndisabled aria-disabled='true'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( \\count($valueToggles) ):\n$return .= <<<CONTENT\ndata-control=\"toggle\" data-toggles=\"\nCONTENT;\n\n$return .= htmlspecialchars( implode( ',', $valueToggles ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n>\n\nCONTENT;\n\nif ( $range && $max !== NULL ):\n$return .= <<<CONTENT\n\n<strong class='ipsType_small' data-role='rangeBoundary'><span id='\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_rangeValue' data-role='rangeValue'>\nCONTENT;\n$return .= htmlspecialchars( $value, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\/\nCONTENT;\n$return .= htmlspecialchars( $max, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/strong>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( \\is_string( $suffix ) ):\n$return .= <<<CONTENT\n\n\t{$suffix}\n\nCONTENT;\n\nelseif ( isset( $suffix['preUnlimited'] ) ):\n$return .= <<<CONTENT\n\n\t{$suffix['preUnlimited']}\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( $unlimited !== NULL ):\n$return .= <<<CONTENT\n\n\t&nbsp;\n\t<div class=\"ipsFieldRow_inlineCheckbox\">\n\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'or', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t&nbsp;\n\t\t<span class='ipsCustomInput'>\n\t\t\t<input type=\"checkbox\" data-control=\"unlimited\nCONTENT;\n\nif ( \\count($toggles) ):\n$return .= <<<CONTENT\n toggle\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\" name=\"\nCONTENT;\n\n$return .= htmlspecialchars( preg_replace( '\/\\[(.+?)\\]\/', '[$1_unlimited]', $name, 1 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" id='\nCONTENT;\n\n$return .= htmlspecialchars( preg_replace( '\/\\[(.+?)\\]\/', '[$1_unlimited]', $name, 1 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n-unlimitedCheck' value=\"\nCONTENT;\n$return .= htmlspecialchars( $unlimited, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" \nCONTENT;\n\nif ( $unlimited === $value ):\n$return .= <<<CONTENT\nchecked aria-checked='true'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( $disabled ):\n$return .= <<<CONTENT\ndisabled aria-disabled='true'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( \\count($toggles) ):\n$return .= <<<CONTENT\n\nCONTENT;\n\nif ( $toggleOn === FALSE ):\n$return .= <<<CONTENT\ndata-togglesOff\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\ndata-togglesOn\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n=\"\nCONTENT;\n\n$return .= htmlspecialchars( implode( ',', $toggles ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n aria-labelledby='\nCONTENT;\n\n$return .= htmlspecialchars( preg_replace( '\/\\[(.+?)\\]\/', '[$1_unlimited]', $name, 1 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_label'>\n\t\t\t<span><\/span>\n\t\t<\/span> <label for='\nCONTENT;\n\n$return .= htmlspecialchars( preg_replace( '\/\\[(.+?)\\]\/', '[$1_unlimited]', $name, 1 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n-unlimitedCheck' id='\nCONTENT;\n\n$return .= htmlspecialchars( preg_replace( '\/\\[(.+?)\\]\/', '[$1_unlimited]', $name, 1 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_label' class='ipsField_unlimited'>\nCONTENT;\n\n$val = \"{$unlimitedLang}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/label>\n\t<\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( \\is_array( $suffix ) and isset( $suffix['postUnlimited'] ) ):\n$return .= <<<CONTENT\n\n\t&nbsp;&nbsp;&nbsp;{$suffix['postUnlimited']}\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction numberRange( $start, $end ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'between', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n {$start} \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'and', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n {$end}\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction poll( $name, $value, $pollData, $allowPollOnly ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div data-controller='core.front.core.pollEditor' data-pollName='\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-showCounts='\nCONTENT;\n\nif ( \\IPS\\Member::loggedIn()->modPermission('can_edit_poll_votes') ):\n$return .= <<<CONTENT\ntrue\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\nfalse\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n' data-maxQuestions=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Settings::i()->max_poll_questions, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-maxChoices=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Settings::i()->max_poll_choices, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" class='cPoll'>\t\n\t<noscript>\n\t\t\nCONTENT;\n\nif ( $value ):\n$return .= <<<CONTENT\n\n\t\t<input type=\"hidden\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[fallback]\" value=\"\nCONTENT;\n$return .= htmlspecialchars( $value->pid, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'poll_no_js', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t<\/noscript>\n\t<div class='ipsForm_vertical ipsJS_show'>\n\t\t<ul class='ipsList_reset ipsAreaBackground_light ipsBox ipsBox_transparent ipsPad'>\n\t\t\t<li class='ipsFieldRow'>\n\t\t\t\t<input type='text' class='ipsField_primary ipsField_fullWidth' placeholder='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'poll_title', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[title]\" maxlength=\"255\" \nCONTENT;\n\nif ( $value ):\n$return .= <<<CONTENT\nvalue=\"\nCONTENT;\n$return .= htmlspecialchars( $value->poll_question, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\t\t<\/li>\n\t\t\t<li class='ipsFieldRow'>\n\t\t\t\t<ul class='ipsFieldRow_content ipsList_reset'>\n\t\t\t\t\t\nCONTENT;\n\nif ( \\IPS\\Settings::i()->poll_allow_public ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<li class='ipsFieldRow_inlineCheckbox'>\n\t\t\t\t\t\t\t<span class='ipsCustomInput'>\n\t\t\t\t\t\t\t\t<input type=\"checkbox\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[public]\" id='elPoll_\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_public' \nCONTENT;\n\nif ( $value and $value->poll_view_voters ):\n$return .= <<<CONTENT\nchecked\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\t\t\t\t\t\t\t<span><\/span>\n\t\t\t\t\t\t\t<\/span>\n\t\t\t\t\t\t\t<label for='elPoll_\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_public'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'make_votes_public', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/label>\n\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nif ( \\IPS\\Settings::i()->ipb_poll_only and $allowPollOnly ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<li class='ipsFieldRow_inlineCheckbox'>\n\t\t\t\t\t\t\t<span class='ipsCustomInput'>\n\t\t\t\t\t\t\t\t<input type=\"checkbox\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[poll_only]\" id='elPoll_\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_pollOnly' \nCONTENT;\n\nif ( $value and $value->poll_only ):\n$return .= <<<CONTENT\nchecked\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\t\t\t\t\t\t\t<span><\/span>\n\t\t\t\t\t\t\t<\/span>\n\t\t\t\t\t\t\t<label for='elPoll_\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_pollOnly'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'poll_only_content', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/label>\n\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<li class='ipsFieldRow_inlineCheckbox'>\n\t\t\t\t\t\t<span class='ipsCustomInput'>\n\t\t\t\t\t\t\t<input type=\"checkbox\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[has_close_date]\" id='elPoll_\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_hasCloseDate' value='1' data-control=\"toggle\" data-toggles='elPoll_closeDate' \nCONTENT;\n\nif ( ($value and $value->poll_close_date instanceof \\IPS\\DateTime) ):\n$return .= <<<CONTENT\nchecked\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\t\t\t\t\t\t<span><\/span>\n\t\t\t\t\t\t<\/span>\n\t\t\t\t\t\t<label for='elPoll_\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_hasCloseDate'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'poll_specify_close_time', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/label>\n\t\t\t\t\t<\/li>\n\t\t\t\t<\/ul>\n\t\t\t<\/li>\n\t\t\t<li class='ipsFieldRow' id='elPoll_closeDate'>\n\t\t\t\t<label class='ipsFieldRow_label' for='poll_close_date'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'poll_close_date', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/label>\n\t\t\t\t<div class='ipsFieldRow_content'>\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"forms\", \"core\", 'global' )->date( $name . '[poll_close_date]', ( $value and $value->poll_close_date instanceof \\IPS\\DateTime ) ? $value->poll_close_date : ( isset( \\IPS\\Request::i()->topic_poll['poll_close_date'] ) ? \\IPS\\Request::i()->topic_poll['poll_close_date'] : \\IPS\\DateTime::create()->add( new \\DateInterval( 'P1D' ) ) ), NULL, NULL, FALSE, FALSE, $name . '[poll_close_time]' );\n$return .= <<<CONTENT\n\n\t\t\t\t<\/div>\n\t\t\t<\/li>\n\t\t<\/ul>\n\t<\/div>\n\t<br> \n\n\t<section data-role='pollContainer'>\n\n\t<\/section>\n\n\t<a href='#' data-action='addQuestion' class='ipsButton ipsButton_medium ipsButton_alternate ipsJS_show' title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'add_poll_question_title', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'><i class='fa fa-plus-circle'><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'add_poll_question', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction radio( $name, $value, $required, $options, $disabled=FALSE, $toggles=array(), $descriptions=array(), $warnings=array(), $userSuppliedInput='', $unlimited=NULL, $unlimitedLang=NULL, $htmlId=NULL ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( $unlimited !== NULL ):\n$return .= <<<CONTENT\n\n\t<ul class=\"ipsField_fieldList\" role=\"radiogroup\">\n\t\t<li>\n\t\t\t<span class='ipsCustomInput'>\n\t\t\t\t<input type=\"checkbox\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" value=\"\nCONTENT;\n$return .= htmlspecialchars( $unlimited, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" id='elRadio_\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_{unlimited}_\nCONTENT;\n$return .= htmlspecialchars( $htmlId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-control=\"toggle\" data-togglesOff=\"elRadio_\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" \nCONTENT;\n\nif ( $value === $unlimited ):\n$return .= <<<CONTENT\nchecked\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\t\t\t<span><\/span>\n\t\t\t<\/span>\n\t\t\t<div class='ipsField_fieldList_content'>\n\t\t\t\t<label for='elRadio_\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_{unlimited}_\nCONTENT;\n$return .= htmlspecialchars( $htmlId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t\nCONTENT;\n\n$val = \"{$unlimitedLang}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t<\/label>\n\t\t\t<\/div>\n\t\t<\/li>\n\t<\/ul>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<input type=\"hidden\" name=\"radio_\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n__empty\" value='1'>\n<ul class=\"ipsField_fieldList\" role=\"radiogroup\" id=\"elRadio_\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_\nCONTENT;\n$return .= htmlspecialchars( $htmlId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\nCONTENT;\n\nforeach ( $options as $k => $v ):\n$return .= <<<CONTENT\n\n\t<li>\n\t\t<span class='ipsCustomInput'>\n\t\t\t<input type=\"radio\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" value=\"\nCONTENT;\n$return .= htmlspecialchars( $k, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" \nCONTENT;\n\nif ( (string) $value == (string) $k or ( isset( $userSuppliedInput ) and !\\in_array( $value, array_keys( $options ) ) and $k == $userSuppliedInput ) ):\n$return .= <<<CONTENT\nchecked\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( $disabled === TRUE or ( \\is_array( $disabled ) and \\in_array( $k, $disabled ) ) ):\n$return .= <<<CONTENT\ndisabled\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( isset( $toggles[ $k ] ) and !empty( $toggles[ $k ] ) ):\n$return .= <<<CONTENT\ndata-control=\"toggle\" data-toggles=\"\nCONTENT;\n\n$return .= htmlspecialchars( implode( ',', $toggles[ $k ] ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n id=\"elRadio_\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_\nCONTENT;\n$return .= htmlspecialchars( $k, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_\nCONTENT;\n$return .= htmlspecialchars( $htmlId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\t\t<span><\/span>\n\t\t<\/span>\n\t\t<div class='ipsField_fieldList_content ipsType_break'>\n\t\t\t<label for='elRadio_\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_\nCONTENT;\n$return .= htmlspecialchars( $k, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_\nCONTENT;\n$return .= htmlspecialchars( $htmlId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' id='elField_\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_label'>{$v}<\/label>\n\t\t\t\nCONTENT;\n\nif ( !empty( $userSuppliedInput ) AND $userSuppliedInput == $k ):\n$return .= <<<CONTENT\n\n\t\t\t\t<input type='text' name='\nCONTENT;\n$return .= htmlspecialchars( $userSuppliedInput, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' value=\"\nCONTENT;\n\nif ( !\\in_array( $value, array_keys( $options ) ) ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $value, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\" id='\nCONTENT;\n$return .= htmlspecialchars( $userSuppliedInput, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_\nCONTENT;\n\n$return .= htmlspecialchars( preg_replace('\/[^a-zA-Z0-9\\-_]\/', '_', $name), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_\nCONTENT;\n$return .= htmlspecialchars( $htmlId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( isset( $descriptions[ $k ] ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t<br>\n\t\t\t\t<span class='ipsFieldRow_desc'>\n\t\t\t\t\t{$descriptions[ $k ]}\n\t\t\t\t<\/span>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( isset( $warnings[ $k ] ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t<div id=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_\nCONTENT;\n$return .= htmlspecialchars( $k, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_warning\">\n\t\t\t\t\t<br>\n\t\t\t\t\t<p class='ipsMessage ipsMessage_warning'>{$warnings[ $k ]}<\/p>\n\t\t\t\t<\/div>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<\/div>\n\t<\/li>\n\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n<\/ul>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction radioImages( $name, $value, $required, $options, $disabled=FALSE, $toggles=array(), $descriptions=array(), $warnings=array(), $userSuppliedInput='', $unlimited=NULL, $unlimitedLang=NULL, $htmlId=NULL, $gridspan=3 ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n<div class=\"ipsGrid ipsGrid_collapsePhone ipsAttachment_fileList ipsContained\">\n\t\nCONTENT;\n\nforeach ( $options as $k => $v ):\n$return .= <<<CONTENT\n\n\t\t<div class='ipsGrid_span\nCONTENT;\n$return .= htmlspecialchars( $gridspan, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n ipsBox ipsAttach ipsImageAttach ipsPad_half'>\n\t\t\t<div class=' ipsType_center' data-role='preview'>\n\t\t\t\t<label for=\"elRadio_\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_\nCONTENT;\n$return .= htmlspecialchars( $k, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_\nCONTENT;\n$return .= htmlspecialchars( $htmlId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" class='ipsCursor_pointer'><img src=\"\nCONTENT;\n$return .= htmlspecialchars( $v, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" alt='' class='ipsImage'><\/label>\n\t\t\t<\/div>\n\t\t\t<div class=\"ipsType_center ipsPad_half\">\n\t\t\t\t<span class='ipsCustomInput'>\n\t\t\t\t\t<input type=\"radio\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" value=\"\nCONTENT;\n$return .= htmlspecialchars( $k, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" \nCONTENT;\n\nif ( (string) $value == (string) $k or ( isset( $userSuppliedInput ) and !\\in_array( $value, array_keys( $options ) ) and $k == $userSuppliedInput ) ):\n$return .= <<<CONTENT\nchecked\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( $disabled === TRUE or ( \\is_array( $disabled ) and \\in_array( $k, $disabled ) ) ):\n$return .= <<<CONTENT\ndisabled\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( isset( $toggles[ $k ] ) and !empty( $toggles[ $k ] ) ):\n$return .= <<<CONTENT\ndata-control=\"toggle\" data-toggles=\"\nCONTENT;\n\n$return .= htmlspecialchars( implode( ',', $toggles[ $k ] ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n id=\"elRadio_\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_\nCONTENT;\n$return .= htmlspecialchars( $k, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_\nCONTENT;\n$return .= htmlspecialchars( $htmlId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\t\t\t\t<span><\/span>\n\t\t\t\t<\/span>\n\t\t\t<\/div>\n\t\t\t\nCONTENT;\n\nif ( isset( $descriptions[ $k ] ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t<p class='ipsType_light ipsType_center'>{$descriptions[ $k ]}<\/p>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<\/div>\n\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction rating( $name, $value, $required, $max=5, $display=NULL, $userRated=NULL ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<input type='hidden' name='\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' value=\"0\">\n<div data-ipsRating data-ipsRating-changeRate='true' data-ipsRating-size='veryLarge' \nCONTENT;\n\nif ( $display ):\n$return .= <<<CONTENT\ndata-ipsRating-value=\"\nCONTENT;\n\n$return .= htmlspecialchars( number_format( $display, 1 ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( $userRated ):\n$return .= <<<CONTENT\ndata-ipsRating-userRated=\"\nCONTENT;\n\n$return .= htmlspecialchars( $userRated, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\nCONTENT;\n\nforeach ( range( 1, $max ) as $i ):\n$return .= <<<CONTENT\n\n\t\t<input type='radio' name='\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' id='\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_\nCONTENT;\n$return .= htmlspecialchars( $i, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' value='\nCONTENT;\n$return .= htmlspecialchars( $i, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' \nCONTENT;\n\nif ( $i == floor( $value ) ):\n$return .= <<<CONTENT\nchecked\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n> <label for='\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_\nCONTENT;\n$return .= htmlspecialchars( $i, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n$return .= htmlspecialchars( $i, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/label>\n\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction rowDesc( $label, $element, $required=FALSE, $error=NULL, $prefix=NULL, $suffix=NULL, $id=NULL, $object=NULL, $form=NULL ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( \\IPS\\Dispatcher::i()->controllerLocation == 'admin' AND !( $object instanceof \\IPS\\Helpers\\Form\\Address ) AND !( $object instanceof \\IPS\\Helpers\\Form\\Upload ) AND !( $object instanceof \\IPS\\Helpers\\Form\\Node ) ):\n$return .= <<<CONTENT\n<br>\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( \\IPS\\Dispatcher::i()->controllerLocation == 'front' AND ( !( $object instanceof \\IPS\\Helpers\\Form\\Checkbox ) OR $object instanceof \\IPS\\Helpers\\Form\\YesNo ) ):\n$return .= <<<CONTENT\n<br>\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<span class='ipsFieldRow_desc'>\n\t%s\n<\/span>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction rowWarning( $label, $element, $required=FALSE, $error=NULL, $prefix=NULL, $suffix=NULL, $id=NULL, $object=NULL, $form=NULL ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div \nCONTENT;\n\nif ( $id !== NULL ):\n$return .= <<<CONTENT\nid=\"\nCONTENT;\n$return .= htmlspecialchars( $id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_warning\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t<br>\nCONTENT;\n\nif ( \\IPS\\Dispatcher::i()->controllerLocation == 'front' ):\n$return .= <<<CONTENT\n<br>\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<p class='ipsMessage ipsMessage_warning'>%s<\/p>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction sort( $name, $value ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div class=\"ipsField_stack\" data-ipsStack data-ipsStack-sortable data-ipsStack-fieldName=\"$name\">\n\t<ul class=\"ipsList_reset\" data-role=\"stack\">\n\t\nCONTENT;\n\n$i = 0;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nforeach ( $value as $id => $val ):\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\n$i++;\n$return .= <<<CONTENT\n\n\t\t<li class='ipsField_stackItem' data-role=\"stackItem\">\n\t\t\t<input type=\"hidden\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[\nCONTENT;\n$return .= htmlspecialchars( $id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n]\" value=\"\nCONTENT;\n$return .= htmlspecialchars( $val, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\t\t<div class=\"ipsCursor_drag\" data-action='stackDrag'>\n\t\t\t\t<span class=\"ipsField_stackDrag ipsDrag ipsJS_show\">\n\t\t\t\t\t<i class='fa fa-bars ipsDrag_dragHandle'><\/i>\n\t\t\t\t<\/span>\n\t\t\t\t<div data-ipsStack-wrapper class=\"ipsPad ipsPad_half\">\n\t\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $val, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t<\/li>\n\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t<\/ul>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction stack( $name, $fields, $options=array() ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div class=\"ipsField_stack\" data-ipsStack data-ipsStack-sortable data-ipsStack-fieldName=\"$name\" \nCONTENT;\n\nif ( isset( $options['maxItems'] ) ):\n$return .= <<<CONTENT\ndata-ipsStack-maxItems=\"\nCONTENT;\n$return .= htmlspecialchars( $options['maxItems'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t<ul class=\"ipsList_reset\" data-role=\"stack\">\n\t\nCONTENT;\n\nforeach ( $fields as $field ):\n$return .= <<<CONTENT\n\n\t\t<li class='ipsField_stackItem' data-role=\"stackItem\">\n\t\t\t<span class=\"ipsField_stackDrag ipsDrag ipsJS_show\" data-action='stackDrag'>\n\t\t\t\t<i class='fa fa-bars ipsDrag_dragHandle'><\/i>\n\t\t\t<\/span>\n\t\t\t<a href='#' class=\"ipsField_stackDelete ipsCursor_pointer ipsJS_show\" data-action=\"stackDelete\">\n\t\t\t\t&times;\n\t\t\t<\/a>\n\t\t\t<input type=\"submit\" class=\"ipsField_stackDelete ipsJS_hide\" name=\"form_remove_stack[\nCONTENT;\n\n$return .= htmlspecialchars( md5($field), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n]\" value=\"&cross;\">\n\t\t\t<div data-ipsStack-wrapper>{$field}<\/div>\n\t\t<\/li>\n\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t<\/ul>\n\t<a class=\"ipsField_stackAdd ipsButton ipsButton_light ipsButton_small ipsJS_show\" href='#' data-action=\"stackAdd\" role=\"button\"><i class='fa fa-plus-circle'><\/i>&nbsp; \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'stack_add', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t<input type=\"submit\" class=\"ipsJS_hide\" name=\"form_add_stack\" value=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'stack_add', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\">\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction text( $name, $type, $value, $required, $maxlength=NULL, $size=NULL, $disabled=FALSE, $autoComplete=NULL, $placeholder=NULL, $regex=NULL, $nullLang=NULL, $htmlId=NULL, $showMeter=FALSE, $htmlAutocomplete=NULL ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\n$valueAsArray = \\is_array( $value ) ? $value : explode( ',', $value );\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( $showMeter ):\n$return .= <<<CONTENT\n\n\t<div data-ipsPasswordStrength \nCONTENT;\n\nif ( \\IPS\\Settings::i()->password_strength_meter_enforce ):\n$return .= <<<CONTENT\ndata-ipsPasswordStrength-enforced data-ipsPasswordStrength-enforcedStrength='\nCONTENT;\n\n$return .= \\IPS\\Settings::i()->password_strength_option;\n$return .= <<<CONTENT\n'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( $autoComplete ):\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"forms\", \"core\", 'global' )->autocomplete( $name, $value, $required, $maxlength, $disabled, '', $placeholder, $nullLang, $autoComplete );\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t<input\n\t\ttype=\"\nCONTENT;\n$return .= htmlspecialchars( $type, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\n\t\tname=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\n\t\tvalue=\"\nCONTENT;\n\nif ( \\is_array( $value ) ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= htmlspecialchars( implode( ',', $value ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $value, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\"\n\t\tid=\"elInput_\nCONTENT;\n\nif ( ! empty($htmlId) ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $htmlId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\"\n\t\t\nCONTENT;\n\nif ( $required === TRUE ):\n$return .= <<<CONTENT\naria-required='true'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( $maxlength !== NULL ):\n$return .= <<<CONTENT\nmaxlength=\"\nCONTENT;\n$return .= htmlspecialchars( $maxlength, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( $size !== NULL ):\n$return .= <<<CONTENT\nsize=\"\nCONTENT;\n$return .= htmlspecialchars( $size, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( $disabled ):\n$return .= <<<CONTENT\ndisabled aria-disabled='true'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( $placeholder !== NULL ):\n$return .= <<<CONTENT\nplaceholder='\nCONTENT;\n$return .= htmlspecialchars( $placeholder, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( $regex !== NULL and $regex ):\n$return .= <<<CONTENT\npattern=\"\nCONTENT;\n$return .= htmlspecialchars( $regex, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( $htmlAutocomplete !== NULL and $htmlAutocomplete ):\n$return .= <<<CONTENT\nautocomplete=\"\nCONTENT;\n$return .= htmlspecialchars( $htmlAutocomplete, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t>\n\t\nCONTENT;\n\nif ( $showMeter ):\n$return .= <<<CONTENT\n\n\t\t<div data-role='strengthInfo' class='ipsHide'>\n\t\t\t<meter max=\"100\" value=\"0\" class='ipsForm_meter' data-role='strengthMeter'><\/meter>\n\t\t\t<span data-role='strengthText' class='ipsForm_meterAdvice'><\/span>\n\t\t<\/div>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( $nullLang ):\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'or', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n \n\t\t<span class='ipsCustomInput'>\n\t\t\t<input type=\"checkbox\" data-control=\"unlimited\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_null\" id='\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_null' value=\"1\" \nCONTENT;\n\nif ( $value === NULL ):\n$return .= <<<CONTENT\nchecked aria-checked='true'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( $disabled ):\n$return .= <<<CONTENT\ndisabled aria-disabled='true'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n aria-labelledby='\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_null_label'>\n\t\t\t<span><\/span>\n\t\t<\/span> <label for='\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_null' id='\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_null_label' class='ipsField_unlimited'>\nCONTENT;\n\n$val = \"{$nullLang}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/label>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( $showMeter ):\n$return .= <<<CONTENT\n\n\t<\/div>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction textarea( $name, $value='', $required, $maxlength=NULL, $disabled=FALSE, $class='', $placeholder='', $nullLang=NULL, $tags=array(), $rows=NULL ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( !empty( $tags ) ):\n$return .= <<<CONTENT\n\n<div class='ipsColumns ipsColumns_collapseTablet' data-controller='core.global.editor.customtags' data-tagFieldType='text' data-tagFieldID='elTextarea_\nCONTENT;\n\n$return .= htmlspecialchars( preg_replace('\/[^a-zA-Z0-9\\-_]\/', '_', $name), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t<div class='ipsColumn_fluid ipsColumn'>\n\t\t<div data-role=\"editor\">\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<textarea\n\tname=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\n\tid='elTextarea_\nCONTENT;\n\n$return .= htmlspecialchars( preg_replace('\/[^a-zA-Z0-9\\-_]\/', '_', $name), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'\n\tvalue=\"\nCONTENT;\n$return .= htmlspecialchars( $value, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\n\tclass=\"ipsField_fullWidth \nCONTENT;\n$return .= htmlspecialchars( $class, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\n\t\nCONTENT;\n\nif ( $rows !== NULL ):\n$return .= <<<CONTENT\nrows=\"\nCONTENT;\n$return .= htmlspecialchars( $rows, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( $maxlength !== NULL ):\n$return .= <<<CONTENT\nmaxlength=\"\nCONTENT;\n$return .= htmlspecialchars( $maxlength, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( $required === TRUE ):\n$return .= <<<CONTENT\naria-required='true'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( $disabled ):\n$return .= <<<CONTENT\ndisabled aria-disabled='true'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( $placeholder ):\n$return .= <<<CONTENT\nplaceholder=\"\nCONTENT;\n$return .= htmlspecialchars( $placeholder, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n>\nCONTENT;\n$return .= htmlspecialchars( $value, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/textarea>\n\nCONTENT;\n\nif ( !empty( $tags ) ):\n$return .= <<<CONTENT\n\n\t<\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( $nullLang ):\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'or', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n \n\t<span class='ipsCustomInput'>\n\t\t<input type=\"checkbox\" data-control=\"unlimited\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_null\" id=\"\nCONTENT;\n\n$return .= htmlspecialchars( preg_replace('\/[^a-zA-Z0-9\\-_]\/', '_', $name), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_null\" value=\"1\" \nCONTENT;\n\nif ( $value === NULL ):\n$return .= <<<CONTENT\nchecked aria-checked='true'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( $disabled ):\n$return .= <<<CONTENT\ndisabled\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n aria-controls='\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' aria-labelledby='\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_null_label'>\n\t\t<span><\/span>\n\t<\/span> <label for='\nCONTENT;\n\n$return .= htmlspecialchars( preg_replace('\/[^a-zA-Z0-9\\-_]\/', '_', $name), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_null' id='\nCONTENT;\n\n$return .= htmlspecialchars( preg_replace('\/[^a-zA-Z0-9\\-_]\/', '_', $name), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_null_label' class='ipsField_unlimited'>\nCONTENT;\n\n$val = \"{$nullLang}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/label>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( !empty( $tags ) ):\n$return .= <<<CONTENT\n\n\t<\/div>\n\t<div class='ipsColumn_medium ipsColumn ipsAreaBackground_light ipsComposeArea_sidebar \nCONTENT;\n\nif ( !isset( \\IPS\\Request::i()->cookie['tagSidebar'] ) ):\n$return .= <<<CONTENT\nipsComposeArea_sidebarOpen\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\nipsComposeArea_sidebarClosed\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\n\t\t<a href='#' class=\"ipsJS_show\" data-action='tagsToggle' data-ipsTooltip data-ipsTooltip-label=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'toggle_sidebar', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'toggle_sidebar', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t<h3 class='ipsAreaBackground ipsPad_half ipsType_reset' data-role='tagsHeader'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'editor_tags', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h3>\n\t\t<ul class='ipsList_reset ipsScrollbar' data-role='tagsList'>\n\t\t\nCONTENT;\n\nforeach ( $tags as $tagKey => $tagValue  ):\n$return .= <<<CONTENT\n\n\t\t\t<li class='ipsPad_half'>\n\t\t\t\t<label class=\"ipsJS_show\" data-tagKey=\"\nCONTENT;\n$return .= htmlspecialchars( $tagKey, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\nCONTENT;\n$return .= htmlspecialchars( $tagKey, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/label>\n\t\t\t\t<div class='ipsJS_hide ipsType_light'><strong>\nCONTENT;\n$return .= htmlspecialchars( $tagKey, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/strong><\/div>\n\t\t\t\t<div class='ipsType_light ipsType_small'>\nCONTENT;\n$return .= htmlspecialchars( $tagValue, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/div>\n\t\t\t<\/li>\n\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t<\/ul>\n\t<\/div>\n<\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction translatable( $name, $languages, $values, $editors, $placeholder, $textarea=FALSE, $required=FALSE ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( \\count( $languages ) === 1 ):\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nforeach ( $languages as $lang ):\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( !isset( $editors[ $lang->id ] )  ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( $textarea ):\n$return .= <<<CONTENT\n\n\t\t\t\t<textarea name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[\nCONTENT;\n$return .= htmlspecialchars( $lang->id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n]\">\nCONTENT;\n\nif ( isset($values[ $lang->id ]) ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $values[ $lang->id ], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n<\/textarea>\n\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t<input type='text' name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[\nCONTENT;\n$return .= htmlspecialchars( $lang->id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n]\" value=\"\nCONTENT;\n\nif ( isset($values[ $lang->id ]) ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $values[ $lang->id ], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\" \nCONTENT;\n\nif ( $placeholder !== NULL ):\n$return .= <<<CONTENT\nplaceholder='\nCONTENT;\n$return .= htmlspecialchars( $placeholder, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t{$editors[ $lang->id ]->html()}\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( $textarea ):\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nforeach ( $languages as $lang ):\n$return .= <<<CONTENT\n\n\t\t\t<span class=\"\nCONTENT;\n$return .= htmlspecialchars( $lang->_icon, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"><\/span> \nCONTENT;\n$return .= htmlspecialchars( $lang->_title, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( $required and $lang->default ):\n$return .= <<<CONTENT\n<span class=\"ipsFieldRow_required\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'required', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n<br>\n\t\t\t<br>\n\t\t\t<textarea name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[\nCONTENT;\n$return .= htmlspecialchars( $lang->id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n]\" aria-label='\nCONTENT;\n$return .= htmlspecialchars( $lang->title, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' \nCONTENT;\n\nif ( !$required || !$lang->default ):\n$return .= <<<CONTENT\nclass='ipsFieldRow_errorExclude'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\nCONTENT;\n\nif ( isset( $values[ $lang->id ]) ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $values[ $lang->id ], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n<\/textarea><br>\n\t\t\t<br>\n\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t<ul class='ipsField_translatable ipsList_reset'>\n\t\t\t\nCONTENT;\n\nforeach ( $languages as $lang ):\n$return .= <<<CONTENT\n\n\t\t\t\t<li class='ipsClearfix'>\n\t\t\t\t\t\nCONTENT;\n\nif ( !isset( $editors[ $lang->id ] )  ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<span class=\"\nCONTENT;\n$return .= htmlspecialchars( $lang->_icon, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"><\/span>\n\t\t\t\t\t\t<input type='text' name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[\nCONTENT;\n$return .= htmlspecialchars( $lang->id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n]\" aria-label='\nCONTENT;\n$return .= htmlspecialchars( $lang->title, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' placeholder=\"\nCONTENT;\n$return .= htmlspecialchars( $lang->title, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" \nCONTENT;\n\nif ( isset( $values[ $lang->id ]) ):\n$return .= <<<CONTENT\nvalue=\"\nCONTENT;\n$return .= htmlspecialchars( $values[ $lang->id ], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( !$required || !$lang->default ):\n$return .= <<<CONTENT\nclass='ipsFieldRow_errorExclude'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $required and $lang->default ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<span class=\"ipsFieldRow_required\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'required', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<p class='ipsFlagEditor'>\n\t\t\t\t\t\t\t<span class=\"\nCONTENT;\n$return .= htmlspecialchars( $lang->_icon, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"><\/span> <span class='ipsFlagLabel'>\nCONTENT;\n$return .= htmlspecialchars( $lang->_title, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $required and $lang->default ):\n$return .= <<<CONTENT\n<span class=\"ipsFieldRow_required\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'required', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<\/p>\n\t\t\t\t\t\t{$editors[ $lang->id ]->html()}\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/li>\n\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t<\/ul>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction upload( $name, $value, $minimize, $maxFileSize, $maxFiles, $maxChunkSize, $totalMaxSize, $allowedFileTypes, $pluploadKey, $multiple=FALSE, $editor=FALSE, $forceNoscript=FALSE, $template='core.attachments.fileItem', $existing=array(), $default=NULL, $supportsDelete = TRUE ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<input name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" type=\"hidden\" value=\"\nCONTENT;\n$return .= htmlspecialchars( $pluploadKey, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\nCONTENT;\n\nif ( $forceNoscript ):\n$return .= <<<CONTENT\n\n\t<input name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_noscript[]\" type=\"file\" \nCONTENT;\n\nif ( $multiple ):\n$return .= <<<CONTENT\nmultiple\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t<span class=\"ipsType_light ipsType_small\">\n\t\t\nCONTENT;\n\nif ( $allowedFileTypes !== NULL ):\n$return .= <<<CONTENT\n\n\t\t\t<strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'form_upload_accepted', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\nCONTENT;\n\n$return .= htmlspecialchars( implode( ', ', $allowedFileTypes ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( $multiple and $totalMaxSize ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( $allowedFileTypes !== NULL ):\n$return .= <<<CONTENT\n\n\t\t\t\t&middot;\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'form_upload_total_max', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $totalMaxSize, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\nMB\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( !$multiple or !$totalMaxSize or $maxChunkSize < $totalMaxSize ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( $allowedFileTypes !== NULL or ( $multiple and $totalMaxSize ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t&middot;\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'form_upload_max', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $maxChunkSize, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\nMB\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( $maxFiles ):\n$return .= <<<CONTENT\n\n\t\t\t<br>\nCONTENT;\n\n$pluralize = array( $maxFiles ); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'form_upload_max_files', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'pluralize' => $pluralize ) );\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/span>\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t<noscript>\n\t\t<input name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_noscript[]\" type=\"file\" \nCONTENT;\n\nif ( $multiple ):\n$return .= <<<CONTENT\nmultiple\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\t<span class=\"ipsType_light ipsType_small\">\n\t\t\t\nCONTENT;\n\nif ( $allowedFileTypes !== NULL ):\n$return .= <<<CONTENT\n\n\t\t\t\t<strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'form_upload_accepted', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t\nCONTENT;\n\n$return .= htmlspecialchars( implode( ', ', $allowedFileTypes ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( $multiple and $totalMaxSize ):\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nif ( $allowedFileTypes !== NULL ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t&middot;\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'form_upload_total_max', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $totalMaxSize, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\nMB\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( !$multiple or !$totalMaxSize or $maxChunkSize < $totalMaxSize ):\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nif ( $allowedFileTypes !== NULL or ( $multiple and $totalMaxSize ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t&middot;\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'form_upload_max', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $maxChunkSize, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\nMB\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( $maxFiles ):\n$return .= <<<CONTENT\n\n\t\t\t\t<br>\nCONTENT;\n\n$pluralize = array( $maxFiles ); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'form_upload_max_files', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'pluralize' => $pluralize ) );\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<\/span>\n\t<\/noscript>\n\t\nCONTENT;\n\nif ( $value ):\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nforeach ( $value as $id => $file ):\n$return .= <<<CONTENT\n\n\t\t\t<input type=\"hidden\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_existing[\nCONTENT;\n$return .= htmlspecialchars( $id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n]\" value=\"\nCONTENT;\n$return .= htmlspecialchars( $file->tempId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<div id=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_drop_\nCONTENT;\n\n$return .= htmlspecialchars( md5( mt_rand() ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\n\t\t data-ipsUploader\n\t\t \nCONTENT;\n\nif ( $maxFileSize ):\n$return .= <<<CONTENT\ndata-ipsUploader-maxFileSize=\"\nCONTENT;\n\n$return .= htmlspecialchars( number_format( $maxFileSize, 3, '.', '' ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t \nCONTENT;\n\nif ( $maxFiles ):\n$return .= <<<CONTENT\ndata-ipsUploader-maxFiles=\"\nCONTENT;\n$return .= htmlspecialchars( $maxFiles, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t data-ipsUploader-maxChunkSize=\"\nCONTENT;\n\n$return .= htmlspecialchars( number_format( $maxChunkSize, 3, '.', '' ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\n\t\t \nCONTENT;\n\nif ( $allowedFileTypes ):\n$return .= <<<CONTENT\ndata-ipsUploader-allowedFileTypes='\nCONTENT;\n\n$return .= htmlspecialchars( json_encode( $allowedFileTypes ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t data-ipsUploader-name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\n\t\t data-ipsUploader-key=\"\nCONTENT;\n$return .= htmlspecialchars( $pluploadKey, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\n\t\t \nCONTENT;\n\nif ( $multiple ):\n$return .= <<<CONTENT\ndata-ipsUploader-multiple \nCONTENT;\n\nif ( $totalMaxSize ):\n$return .= <<<CONTENT\ndata-ipsUploader-maxTotalSize=\"\nCONTENT;\n\n$return .= htmlspecialchars( number_format( $totalMaxSize, 3, '.', '' ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t \nCONTENT;\n\nif ( $minimize ):\n$return .= <<<CONTENT\ndata-ipsUploader-minimized\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t \nCONTENT;\n\nif ( $editor ):\n$return .= <<<CONTENT\ndata-ipsUploader-insertable\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t data-ipsUploader-template='\nCONTENT;\n$return .= htmlspecialchars( $template, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'\n\t\t data-ipsUploader-existingFiles='\nCONTENT;\n\n$return .= htmlspecialchars( json_encode( $existing ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'\n\t\t \nCONTENT;\n\nif ( isset( $default ) ):\n$return .= <<<CONTENT\ndata-ipsUploader-default='\nCONTENT;\n$return .= htmlspecialchars( $default, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t \nCONTENT;\n\nif ( $supportsDelete ):\n$return .= <<<CONTENT\ndata-ipsUploader-supportsDelete\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\ndata-ipsUploader-supportsDelete='false'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t>\n\t\t<div class=\"ipsAttachment_dropZone \nCONTENT;\n\nif ( $minimize ):\n$return .= <<<CONTENT\nipsAttachment_dropZoneSmall\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n ipsClearfix\">\n\t\t\t\nCONTENT;\n\nif ( $minimize ):\n$return .= <<<CONTENT\n\n\t\t\t\t<a href=\"#\" data-action='uploadFile' class=\"ipsButton ipsButton_small ipsButton_primary ipsPos_left\" id=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_browse_\nCONTENT;\n\n$return .= htmlspecialchars( md5( mt_rand() ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\nCONTENT;\n\nif ( $multiple ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'form_upload_choose', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'form_upload_choose_one', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t<div class='ipsAttachment_dropZoneSmall_info'>\n\t\t\t\t\t<span class=\"ipsAttachment_supportDrag\">\nCONTENT;\n\nif ( $multiple ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'form_upload_dad_mini', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'form_upload_dad_mini_one', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n<br><\/span>\n\t\t\t\t\t<span class=\"ipsType_light ipsType_small\">\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $allowedFileTypes !== NULL ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'form_upload_accepted', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= htmlspecialchars( implode( ', ', $allowedFileTypes ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $multiple and $totalMaxSize ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $allowedFileTypes !== NULL ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t&middot;\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'form_upload_total_max', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $totalMaxSize, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\nMB\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $maxFileSize and ( !$multiple or !$totalMaxSize or $maxFileSize < $totalMaxSize ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $allowedFileTypes !== NULL or ( $multiple and $totalMaxSize ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t&middot;\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'form_upload_max', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= htmlspecialchars( round($maxFileSize,2), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\nMB\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $maxFiles ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<br>\nCONTENT;\n\n$pluralize = array( $maxFiles ); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'form_upload_max_files', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'pluralize' => $pluralize ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/span>\n\t\t\t\t<\/div>\n\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t<i class=\"fa fa-cloud-upload\"><\/i>\n\t\t\t\t<span class=\"ipsAttachment_supportDrag\">\nCONTENT;\n\nif ( $multiple ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'form_upload_dad', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'form_upload_dad_one', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n<br><\/span>\n\t\t\t\t<a href=\"#\" data-action='uploadFile' class=\"ipsButton ipsButton_verySmall ipsButton_primary\" id=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_browse_\nCONTENT;\n\n$return .= htmlspecialchars( md5( mt_rand() ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\nCONTENT;\n\nif ( $multiple ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'form_upload_choose', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'form_upload_choose_one', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t<br>\n\t\t\t\t<span class=\"ipsType_light ipsType_small\">\n\t\t\t\t\t\nCONTENT;\n\nif ( $allowedFileTypes !== NULL ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'form_upload_accepted', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t\t\t\nCONTENT;\n\n$return .= htmlspecialchars( implode( ', ', $allowedFileTypes ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nif ( $multiple and $totalMaxSize ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $allowedFileTypes !== NULL ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t&middot;\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'form_upload_total_max', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $totalMaxSize, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\nMB\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nif ( $maxFileSize and ( !$multiple or !$totalMaxSize or $maxFileSize < $totalMaxSize ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $allowedFileTypes !== NULL or ( $multiple and $totalMaxSize ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t&middot;\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'form_upload_max', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t\t\t\nCONTENT;\n\n$return .= htmlspecialchars( round($maxFileSize,2), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\nMB\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nif ( $maxFiles ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<br>\nCONTENT;\n\n$pluralize = array( $maxFiles ); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'form_upload_max_files', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'pluralize' => $pluralize ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/span>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<\/div>\n\t\n\t\t<div class=\"ipsAttachment_fileList ipsScrollbar\">\n\t\t\t<div data-role='fileList'><\/div>\n\t\t\t<noscript>\n\t\t\t\t\nCONTENT;\n\nif ( $value ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nforeach ( $value as $id => $file ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"forms\", \"core\", 'global' )->uploadFile( $id, $file, $name, $editor, ( $template === 'core.attachments.imageItem' ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<\/noscript>\n\t\t<\/div>\n\t<\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction uploadDisplay( $file, $downloadUrl ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( $file->isImage() ):\n$return .= <<<CONTENT\n\n\t<img src=\"$file->url\" class=\"ipsImage\" data-ipsLightbox>\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t<a href=\"\nCONTENT;\n$return .= htmlspecialchars( $downloadUrl, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\nCONTENT;\n$return .= htmlspecialchars( $file->originalFilename, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction uploadFile( $id, $file, $name=NULL, $editor=FALSE, $showAsImages=FALSE, $link=NULL ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( $showAsImages ):\n$return .= <<<CONTENT\n\n\t<div class='ipsGrid_span3 ipsAttach ipsImageAttach ipsPad_half ipsAreaBackground_light \nCONTENT;\n\nif ( $editor ):\n$return .= <<<CONTENT\nipsAttach_done\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n' data-role='file' data-fileid=\"\nCONTENT;\n$return .= htmlspecialchars( $id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" \nCONTENT;\n\nif ( $link ):\n$return .= <<<CONTENT\ndata-filelink=\"\nCONTENT;\n$return .= htmlspecialchars( $link, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n data-fileType=\"\nCONTENT;\n$return .= htmlspecialchars( $file->mediaType(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" \nCONTENT;\n\nif ( $file->attachmentThumbnailUrl ):\n$return .= <<<CONTENT\ndata-thumbnailurl=\"\nCONTENT;\n$return .= htmlspecialchars( $file->attachmentThumbnailUrl, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( $file->isImage() or $file->isVideo() ):\n$return .= <<<CONTENT\ndata-fullsizeurl=\"\nCONTENT;\n$return .= htmlspecialchars( $file->url, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( $file->isVideo() ):\n$return .= <<<CONTENT\ndata-mimeType=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\File::getMimeType( $file->originalFilename ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\t<ul class='ipsList_inline ipsImageAttach_controls'>\n\t\t\t\nCONTENT;\n\nif ( $editor ):\n$return .= <<<CONTENT\n\n\t\t\t\t<li><a href='#' data-action='selectFile' class='ipsAttach_selection' data-ipsTooltip title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'form_upload_insert_one', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'><i class='fa fa-check'><\/i><\/a><\/li>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( $name ):\n$return .= <<<CONTENT\n\n\t\t\t\t<li class='ipsPos_right'>\n\t\t\t\t\t<input type=\"hidden\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_keep[\nCONTENT;\n$return .= htmlspecialchars( $id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n]\" value=\"1\">\n\t\t\t\t\t<a href='#' data-role='deleteFile' class='ipsButton ipsButton_verySmall ipsButton_light' data-ipsTooltip title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'editor_media_remove', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'><i class='fa fa-trash-o'><\/i><\/a>\n\t\t\t\t<\/li>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<\/ul>\n\t\t\nCONTENT;\n\n$screenshot = isset( $file->screenshot ) ? $file->screenshot : $file;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\n$extension =  mb_strtolower( mb_substr( $screenshot->filename, mb_strrpos( $screenshot->filename, '.' ) + 1 ) );\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( \\in_array( $extension, \\IPS\\Image::$imageExtensions ) ):\n$return .= <<<CONTENT\n\n\t\t\t<div class='ipsImageAttach_thumb ipsType_center' data-role='preview' data-grid-ratio='65' data-action='selectFile' style='background-image: url( \"\nCONTENT;\n\n$return .= htmlspecialchars( str_replace( array( '(', ')' ), array( '\\(', '\\)' ), ( $screenshot->attachmentThumbnailUrl ) ? $screenshot->attachmentThumbnailUrl : $screenshot->url ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" );'>\n\t\t\t\t<img src=\"\nCONTENT;\n$return .= htmlspecialchars( $screenshot->url, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" alt='' class='ipsImage'>\n\t\t\t<\/div>\n\t\t\nCONTENT;\n\nelseif ( \\in_array( $extension, \\IPS\\File::$videoExtensions ) ):\n$return .= <<<CONTENT\n\n\t\t\t<div class='ipsImageAttach_thumb ipsType_center' data-role='preview' data-grid-ratio='65' data-action='selectFile'>\n\t\t\t\t<video>\n\t\t\t\t\t <source src=\"\nCONTENT;\n$return .= htmlspecialchars( $screenshot->url, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" type=\"\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\File::getMimeType( $screenshot->originalFilename ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\t\t\t<\/video>\n\t\t\t<\/div>\n\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t<div class='ipsImageAttach_thumb ipsType_center' data-role='preview' data-grid-ratio='65' data-action='selectFile'>\n\t\t\t\t<div class='ipsNoThumb'><\/div>\n\t\t\t<\/div>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\t\t\n\t\t<h2 class='ipsType_reset ipsAttach_title ipsType_medium ipsTruncate ipsTruncate_line ipsType_break' data-role='title'>\nCONTENT;\n\nif ( isset( $file->contextInfo ) ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $file->contextInfo, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $file->originalFilename, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n<\/h2>\n\t\t<p class='ipsType_light ipsType_small ipsTruncate ipsTruncate_line ipsType_break'><span data-role='status'>\nCONTENT;\n\n$return .= \\IPS\\Output\\Plugin\\Filesize::humanReadableFilesize( $file->filesize() );\n$return .= <<<CONTENT\n<\/span>\nCONTENT;\n\nif ( isset( $file->contextInfo ) ):\n$return .= <<<CONTENT\n &middot; \nCONTENT;\n$return .= htmlspecialchars( $file->originalFilename, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n<\/p>\n\t<\/div>\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t<div class='ipsDataItem ipsAttach \nCONTENT;\n\nif ( $editor ):\n$return .= <<<CONTENT\nipsAttach_done\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n' \nCONTENT;\n\nif ( $file->attachmentThumbnailUrl ):\n$return .= <<<CONTENT\ndata-thumbnailurl=\"\nCONTENT;\n$return .= htmlspecialchars( $file->attachmentThumbnailUrl, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n data-role='file' data-fileid=\"\nCONTENT;\n$return .= htmlspecialchars( $id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" \nCONTENT;\n\nif ( $link ):\n$return .= <<<CONTENT\ndata-filelink=\"\nCONTENT;\n$return .= htmlspecialchars( $link, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n data-fileType=\"\nCONTENT;\n$return .= htmlspecialchars( $file->mediaType(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\t<div class='ipsDataItem_generic ipsDataItem_size3 ipsResponsive_hidePhone ipsResponsive_block ipsType_center' data-action='selectFile'>\n\t\t\t\nCONTENT;\n\nif ( \\in_array( mb_strtolower( mb_substr( $file->filename, mb_strrpos( $file->filename, '.' ) + 1 ) ), \\IPS\\Image::$imageExtensions ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t<img src=\"\nCONTENT;\n\nif ( $file->attachmentThumbnailUrl ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $file->attachmentThumbnailUrl, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $file->url, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\" alt='' class='ipsImage ipsThumb_small'>\n\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t<i class='fa fa-file ipsType_large'><\/i>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<\/div>\n\t\t<div class='ipsDataItem_main' data-action='selectFile'>\n\t\t\t<h2 class='ipsDataItem_title ipsType_reset ipsType_medium ipsAttach_title ipsTruncate ipsTruncate_line ipsType_break' data-role='title'>\nCONTENT;\n$return .= htmlspecialchars( $file->originalFilename, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/h2>\n\t\t\t<p class='ipsDataItem_meta ipsType_light'>\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Output\\Plugin\\Filesize::humanReadableFilesize( $file->filesize() );\n$return .= <<<CONTENT\n\n\t\t\t<\/p>\n\t\t<\/div>\n\t\t<div class='ipsDataItem_generic ipsDataItem_size9 ipsType_light' data-role='status'>\n\t\t\t\n\t\t<\/div>\n\t\t<div class='ipsDataItem_generic ipsDataItem_size3 ipsType_right'>\n\t\t\t<ul class='ipsList_inline'>\n\t\t\t\t\nCONTENT;\n\nif ( $editor ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<li><a href='#' data-action='selectFile' class='ipsAttach_selection' data-ipsTooltip title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'form_upload_insert_one', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'><i class='fa fa-check'><\/i><\/a><\/li>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nif ( $name ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<input type=\"hidden\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_keep[\nCONTENT;\n$return .= htmlspecialchars( $id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n]\" value=\"1\">\n\t\t\t\t\t\t<a href='#' data-role='deleteFile' class='ipsButton ipsButton_verySmall ipsButton_light' data-ipsTooltip title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'editor_media_remove', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'><i class='fa fa-trash-o'><\/i><\/a>\n\t\t\t\t\t<\/li>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<\/ul>\n\t\t<\/div>\t\t\n\t<\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}}"
VALUE;
