<?php

return <<<'VALUE'
"namespace IPS\\Theme;\nclass class_calendar_front_global extends \\IPS\\Theme\\Template\n{\n\tpublic $cache_key = '0b2449a0f3ecc2efcbf0c0545e5a6ce8';\n\tfunction commentTableHeader( $comment, $event ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n<div class='ipsDataList ipsAreaBackground_light ipsClearfix'>\n\t<div class='ipsDataItem'>\n\t\t<div class='ipsDataItem_generic ipsDataItem_size2'>\n\t\t\t\nCONTENT;\n\n$date = ( $event->nextOccurrence( \\IPS\\calendar\\Date::getDate(), 'startDate' ) == NULL ) ? $event->lastOccurrence() : $event->nextOccurrence( \\IPS\\calendar\\Date::getDate(), 'startDate' );\n$return .= <<<CONTENT\n\n\t\t\t<time datetime='\nCONTENT;\n$return .= htmlspecialchars( $date->mysqlDatetime(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsCalendarDate ipsCalendarDate_large'>\n\t\t\t\t<span class='ipsCalendarDate_month'>\nCONTENT;\n$return .= htmlspecialchars( $date->monthNameShort, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t<span class='ipsCalendarDate_date'>\nCONTENT;\n$return .= htmlspecialchars( $date->mday, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t<\/time>\n\t\t<\/div>\n\t\t<div class='ipsDataItem_main'>\n\t\t\t<h3 class='ipsType_sectionHead'><a href='\nCONTENT;\n$return .= htmlspecialchars( $event->url(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'title='\nCONTENT;\n\n$sprintf = array($event->title); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'view_this_event', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n$return .= htmlspecialchars( $event->title, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a><\/h3>\n\t\t\t<p class='ipsType_normal ipsType_light ipsType_blendLinks ipsType_reset'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'in', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n <a href='\nCONTENT;\n$return .= htmlspecialchars( $event->container()->url(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n$return .= htmlspecialchars( $event->container()->_title, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a><\/p>\n\t\t\t\nCONTENT;\n\nif ( $event->container()->allow_reviews ):\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\", 'front' )->rating( 'large', $event->rating, \\IPS\\Settings::i()->reviews_rating_out_of );\n$return .= <<<CONTENT\n &nbsp;&nbsp;\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n\t\t\t<span class='ipsType_medium ipsType_reset'>\nCONTENT;\n\nif ( $event->container()->allow_comments ):\n$return .= <<<CONTENT\n&nbsp;&nbsp;\nCONTENT;\n\nif ( !$event->comments ):\n$return .= <<<CONTENT\n<span class='ipsType_light'>\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n<i class='fa fa-comment'><\/i> \nCONTENT;\n$return .= htmlspecialchars( $event->comments, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\nif ( !$event->comments ):\n$return .= <<<CONTENT\n<\/span>\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n<\/span>\n\t\t<\/div>\n\t<\/div>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction embedEvent( $item, $url, $image=NULL ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n<div data-embedInfo-maxSize='\nCONTENT;\n\nif ( \\IPS\\Settings::i()->max_internalembed_width ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Settings::i()->max_internalembed_width;\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n100%\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n' class='ipsRichEmbed'>\n\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"embed\", \"core\" )->embedHeader( $item, \\IPS\\Member::loggedIn()->language()->addToStack( 'x_created_event_in', FALSE, array( 'sprintf' => array( $item->author()->name, $item->container()->_title ) ) ), $item->mapped('date'), $url );\n$return .= <<<CONTENT\n\n\n\t\nCONTENT;\n\nif ( $item->map( 500, 100 ) ):\n$return .= <<<CONTENT\n\n\t\t<div class='ipsRichEmbed_masthead ipsType_center'>\n\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $url, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' title='\nCONTENT;\n$return .= htmlspecialchars( $item->mapped('title'), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t\t\t{$item->map( 500, 100 )}\n\t\t\t<\/a>\n\t\t<\/div>\n\t\nCONTENT;\n\nelseif ( $item->coverPhoto() && $item->coverPhoto()->file ):\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\n$photo = $item->coverPhoto()->file;\n$return .= <<<CONTENT\n\n\t\t<div class='ipsRichEmbed_masthead ipsRichEmbed_mastheadBg ipsType_center'>\n\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $url, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' title='\nCONTENT;\n$return .= htmlspecialchars( $item->mapped('title'), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' style='background-image: url( \"\nCONTENT;\n\n$return .= htmlspecialchars( str_replace( array( '(', ')' ), array( '\\(', '\\)' ), $photo->url ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\") '>\n\t\t\t\t<img src='\nCONTENT;\n$return .= htmlspecialchars( $photo->url, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' alt='\nCONTENT;\n$return .= htmlspecialchars( $item->mapped('title'), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsHide'>\n\t\t\t<\/a>\n\t\t<\/div>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<div class='ipsPad ipsClearfix'>\n\t\t<div class='ipsPhotoPanel ipsPhotoPanel_medium'>\n\t\t\t<span class='cCalendarEmbed_calendar ipsPos_left ipsType_blendLinks'>\n\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $url, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t\nCONTENT;\n\n$nextOccurrence = $item->nextOccurrence( \\IPS\\calendar\\Date::getDate(), 'startDate' ) ?: $item->lastOccurrence( 'startDate' );\n$return .= <<<CONTENT\n\n\t\t\t\t\t<time datetime='\nCONTENT;\n$return .= htmlspecialchars( $nextOccurrence->mysqlDatetime(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsCalendarDate'>\n\t\t\t\t\t\t<span class='ipsCalendarDate_month'>\nCONTENT;\n$return .= htmlspecialchars( $nextOccurrence->monthNameShort, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t\t<span class='ipsCalendarDate_date'>\nCONTENT;\n$return .= htmlspecialchars( $nextOccurrence->mday, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t<\/time>\n\t\t\t\t<\/a>\n\t\t\t<\/span>\n\t\t\t<div>\n\t\t\t\t<p class='ipsRichEmbed_itemTitle ipsType_reset ipsTruncate ipsTruncate_line ipsType_blendLinks'>\n\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $url, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n$return .= htmlspecialchars( $item->mapped('title'), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t<\/p>\n\t\t\t\t<div class='ipsType_reset ipsType_medium'>\n\t\t\t\t\t\nCONTENT;\n\nif ( $item->_end_date ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<dl class='cCalendarEmbed_dates ipsSpacer_top ipsSpacer_half'>\n\t\t\t\t\t\t\t<dt class='ipsType_light'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'from', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/dt>\n\t\t\t\t\t\t\t<dd>\n\t\t\t\t\t\t\t\t<time datetime='\nCONTENT;\n\n$return .= htmlspecialchars( $item->_start_date->format( 'Y-m-d' ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $item->_start_date->dayName, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlspecialchars( $item->_start_date->mday, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlspecialchars( $item->_start_date->monthName, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlspecialchars( $item->_start_date->year, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nif ( !$item->all_day ):\n$return .= <<<CONTENT\n, \nCONTENT;\n$return .= htmlspecialchars( $item->_start_date->localeTime( FALSE ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<\/time>\n\t\t\t\t\t\t\t<\/dd>\n\t\t\t\t\t\t\t<dt class='ipsType_light'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'until', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/dt>\n\t\t\t\t\t\t\t<dd>\n\t\t\t\t\t\t\t\t<time datetime='\nCONTENT;\n\n$return .= htmlspecialchars( $item->_end_date->format( 'Y-m-d' ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$sameDay = !( ($item->_start_date->mday != $item->_end_date->mday) or ($item->_start_date->mon != $item->_end_date->mon) or ($item->_start_date->year != $item->_end_date->year) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( !$sameDay ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $item->_end_date->dayName, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlspecialchars( $item->_end_date->mday, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlspecialchars( $item->_end_date->monthName, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlspecialchars( $item->_end_date->year, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\nif ( !$item->all_day ):\n$return .= <<<CONTENT\n\nCONTENT;\n\nif ( !$sameDay ):\n$return .= <<<CONTENT\n, \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $item->_end_date->localeTime( FALSE ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<\/time>\n\t\t\t\t\t\t\t<\/dd>\n\t\t\t\t\t\t<\/dl>\n\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<p class='ipsSpacer_top ipsSpacer_half'>\n\t\t\t\t\t\t\t<time datetime='\nCONTENT;\n\n$return .= htmlspecialchars( $item->_start_date->format( 'Y-m-d' ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $item->_start_date->dayName, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlspecialchars( $item->_start_date->mday, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlspecialchars( $item->_start_date->monthName, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlspecialchars( $item->_start_date->year, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nif ( !$item->all_day ):\n$return .= <<<CONTENT\n, \nCONTENT;\n$return .= htmlspecialchars( $item->_start_date->localeTime( FALSE ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<\/time>\n\t\t\t\t\t\t<\/p>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/div>\n\t\t\t\t\nCONTENT;\n\nif ( $desc = $item->truncated(TRUE) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<div class='ipsType_richText ipsType_medium ipsSpacer_top ipsSpacer_half' data-truncate='1'>\n\t\t\t\t\t\t{$desc}\n\t\t\t\t\t<\/div>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<\/div>\n\n\t\t\t\nCONTENT;\n\nif ( $item->rsvp ):\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\n$attendees = $item->attendees();\n$return .= <<<CONTENT\n\n\t\t\t\t<hr class='ipsHr'>\n\t\t\t\t<ul class='ipsList_inline ipsSpacer_bottom ipsSpacer_half ipsType_normal'>\n\t\t\t\t\t\nCONTENT;\n\nif ( isset( $attendees[1][ \\IPS\\Member::loggedIn()->member_id ] ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<li class='ipsType_success'>\n\t\t\t\t\t\t\t<i class='fa fa-check-circle'><\/i>\n\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'you_are_going', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\nCONTENT;\n\nelseif ( isset( $attendees[0][ \\IPS\\Member::loggedIn()->member_id ] ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<li class='ipsType_negative'>\n\t\t\t\t\t\t\t<i class='fa fa-times-circle'><\/i>\n\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'you_arent_going', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\nCONTENT;\n\nelseif ( $item->can('rsvp') && !( $item->rsvp_limit > 0 AND \\count($attendees[1]) >= $item->rsvp_limit ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<ul class='ipsList_inline ipsList_noSpacing'>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $item->url('rsvp')->setQueryString( 'action', 'yes' )->csrf(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_important ipsButton_fullWidth ipsButton_verySmall'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'rsvp_attend_event', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $item->rsvp_limit == -1 ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $item->url('rsvp')->setQueryString( 'action', 'maybe' )->csrf(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_link ipsButton_verySmall'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'rsvp_maybe_event', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $item->url('rsvp')->setQueryString( 'action', 'no' )->csrf(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_link ipsButton_verySmall'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'rsvp_notgoing_event', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t<\/ul>\n\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n\t\t\t\t\t<li class='\nCONTENT;\n\nif ( !\\count($attendees[1]) ):\n$return .= <<<CONTENT\nipsType_light\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t\t<i class='fa fa-user'><\/i> \nCONTENT;\n\n$pluralize = array( \\count($attendees[1]) ); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'x_users_going', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'pluralize' => $pluralize ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/li>\n\t\t\t\t<\/ul>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<\/div>\n\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"embed\", \"core\" )->embedItemStats( $item );\n$return .= <<<CONTENT\n\n\t<\/div>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction embedEventComment( $comment, $item, $url ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n<div data-embedInfo-maxSize='\nCONTENT;\n\nif ( \\IPS\\Settings::i()->max_internalembed_width ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Settings::i()->max_internalembed_width;\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n100%\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n' class='ipsRichEmbed'>\n\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"embed\", \"core\" )->embedHeader( $comment, \\IPS\\Member::loggedIn()->language()->addToStack( 'x_commented_event', FALSE, array( 'sprintf' => array( $comment->author()->name ) ) ), $comment->mapped('date'), $url );\n$return .= <<<CONTENT\n\n\t<div class='ipsPad'>\n\t\t<div class='ipsRichEmbed_originalItem ipsAreaBackground_reset ipsSpacer_bottom ipsType_blendLinks'>\n\t\t\t<div>\n\t\t\t\t\nCONTENT;\n\nif ( $item->map( 500, 100 ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<div class='ipsRichEmbed_masthead ipsRichEmbed_masthead_small ipsType_center'>\n\t\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $url, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' title='\nCONTENT;\n$return .= htmlspecialchars( $item->mapped('title'), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t\t\t{$item->map( 500, 100 )}\n\t\t\t\t\t\t<\/a>\n\t\t\t\t\t<\/div>\n\t\t\t\t\nCONTENT;\n\nelseif ( $item->coverPhoto() && $item->coverPhoto()->file ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\n$photo = $item->coverPhoto()->file;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<div class='ipsRichEmbed_masthead ipsRichEmbed_masthead_small ipsRichEmbed_mastheadBg ipsType_center'>\n\t\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $url, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' title='\nCONTENT;\n$return .= htmlspecialchars( $item->mapped('title'), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' style='background-image: url( \"\nCONTENT;\n\n$return .= htmlspecialchars( str_replace( array( '(', ')' ), array( '\\(', '\\)' ), $photo->url ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\") '>\n\t\t\t\t\t\t\t<img src='\nCONTENT;\n$return .= htmlspecialchars( $photo->url, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' alt='\nCONTENT;\n$return .= htmlspecialchars( $item->mapped('title'), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsHide'>\n\t\t\t\t\t\t<\/a>\n\t\t\t\t\t<\/div>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<div class='ipsPad'>\n\t\t\t\t\t<div class='ipsPhotoPanel ipsPhotoPanel_small'>\n\t\t\t\t\t\t<span class='cCalendarEmbed_calendar ipsPos_left ipsType_blendLinks'>\n\t\t\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $url, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\n$nextOccurrence = $item->nextOccurrence( \\IPS\\calendar\\Date::getDate(), 'startDate' ) ?: $event->lastOccurrence( 'startDate' );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<time datetime='\nCONTENT;\n$return .= htmlspecialchars( $nextOccurrence->mysqlDatetime(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsCalendarDate'>\n\t\t\t\t\t\t\t\t\t<span class='ipsCalendarDate_month'>\nCONTENT;\n$return .= htmlspecialchars( $nextOccurrence->monthNameShort, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t\t\t\t\t<span class='ipsCalendarDate_date'>\nCONTENT;\n$return .= htmlspecialchars( $nextOccurrence->mday, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t\t\t\t<\/time>\n\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t<\/span>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"embed\", \"core\" )->embedOriginalItem( $item, FALSE, \\IPS\\Theme::i()->getTemplate( 'global', 'calendar' )->embedEventItemSnippet( $item ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t<\/div>\n\n\t\t<div class='ipsType_richText ipsType_medium' data-truncate='3'>\n\t\t\t{$comment->truncated(TRUE)}\n\t\t<\/div>\n\n\t\t\nCONTENT;\n\nif ( \\IPS\\Settings::i()->reputation_enabled AND \\IPS\\IPS::classUsesTrait( $comment, 'IPS\\Content\\Reactable' ) AND \\count( $comment->reactions() ) ):\n$return .= <<<CONTENT\n\n\t\t\t<ul class='ipsList_inline ipsSpacer_top ipsSpacer_half'>\n\t\t\t\t<li>\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->reactionOverview( $comment, TRUE, 'small' );\n$return .= <<<CONTENT\n\n\t\t\t\t<\/li>\n\t\t\t<\/ul>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/div>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction embedEventItemSnippet( $item ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n\nCONTENT;\n\nif ( $item->_end_date ):\n$return .= <<<CONTENT\n\n\t<dl class='cCalendarEmbed_dates ipsSpacer_top ipsSpacer_half'>\n\t\t<dt class='ipsType_light'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'from', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/dt>\n\t\t<dd>\n\t\t\t<time datetime='\nCONTENT;\n\n$return .= htmlspecialchars( $item->_start_date->format( 'Y-m-d' ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $item->_start_date->dayName, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlspecialchars( $item->_start_date->mday, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlspecialchars( $item->_start_date->monthName, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlspecialchars( $item->_start_date->year, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nif ( !$item->all_day ):\n$return .= <<<CONTENT\n, \nCONTENT;\n$return .= htmlspecialchars( $item->_start_date->localeTime( FALSE ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<\/time>\n\t\t<\/dd>\n\t\t<dt class='ipsType_light'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'until', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/dt>\n\t\t<dd>\n\t\t\t<time datetime='\nCONTENT;\n\n$return .= htmlspecialchars( $item->_end_date->format( 'Y-m-d' ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t\t\t\nCONTENT;\n\n$sameDay = !( ($item->_start_date->mday != $item->_end_date->mday) or ($item->_start_date->mon != $item->_end_date->mon) or ($item->_start_date->year != $item->_end_date->year) );\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nif ( !$sameDay ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $item->_end_date->dayName, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlspecialchars( $item->_end_date->mday, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlspecialchars( $item->_end_date->monthName, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlspecialchars( $item->_end_date->year, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\nif ( !$item->all_day ):\n$return .= <<<CONTENT\n\nCONTENT;\n\nif ( !$sameDay ):\n$return .= <<<CONTENT\n, \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $item->_end_date->localeTime( FALSE ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<\/time>\n\t\t<\/dd>\n\t<\/dl>\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t<p class='ipsSpacer_top ipsSpacer_half'>\n\t\t<time datetime='\nCONTENT;\n\n$return .= htmlspecialchars( $item->_start_date->format( 'Y-m-d' ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $item->_start_date->dayName, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlspecialchars( $item->_start_date->mday, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlspecialchars( $item->_start_date->monthName, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlspecialchars( $item->_start_date->year, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nif ( !$item->all_day ):\n$return .= <<<CONTENT\n, \nCONTENT;\n$return .= htmlspecialchars( $item->_start_date->localeTime( FALSE ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<\/time>\n\t<\/p>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction embedEventReview( $comment, $item, $url ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n<div data-embedInfo-maxSize='\nCONTENT;\n\nif ( \\IPS\\Settings::i()->max_internalembed_width ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Settings::i()->max_internalembed_width;\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n100%\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n' class='ipsRichEmbed'>\n\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"embed\", \"core\" )->embedHeader( $comment, \\IPS\\Member::loggedIn()->language()->addToStack( 'x_reviewed_event', FALSE, array( 'sprintf' => array( $comment->author()->name ) ) ), $comment->mapped('date'), $url );\n$return .= <<<CONTENT\n\n\t<div class='ipsPad'>\n\t\t<div class='ipsRichEmbed_originalItem ipsAreaBackground_reset ipsSpacer_bottom ipsType_blendLinks'>\n\t\t\t<div>\n\t\t\t\t\nCONTENT;\n\nif ( $item->map( 500, 100 ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<div class='ipsRichEmbed_masthead ipsRichEmbed_masthead_small ipsType_center'>\n\t\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $url, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' title='\nCONTENT;\n$return .= htmlspecialchars( $item->mapped('title'), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t\t\t{$item->map( 500, 100 )}\n\t\t\t\t\t\t<\/a>\n\t\t\t\t\t<\/div>\n\t\t\t\t\nCONTENT;\n\nelseif ( $item->coverPhoto() && $item->coverPhoto()->file ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\n$photo = $item->coverPhoto()->file;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<div class='ipsRichEmbed_masthead ipsRichEmbed_masthead_small ipsRichEmbed_mastheadBg ipsType_center'>\n\t\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $url, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' title='\nCONTENT;\n$return .= htmlspecialchars( $item->mapped('title'), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' style='background-image: url( \"\nCONTENT;\n\n$return .= htmlspecialchars( str_replace( array( '(', ')' ), array( '\\(', '\\)' ), $photo->url ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\") '>\n\t\t\t\t\t\t\t<img src='\nCONTENT;\n$return .= htmlspecialchars( $photo->url, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' alt='\nCONTENT;\n$return .= htmlspecialchars( $item->mapped('title'), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsHide'>\n\t\t\t\t\t\t<\/a>\n\t\t\t\t\t<\/div>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<div class='ipsPad'>\n\t\t\t\t\t<div class='ipsPhotoPanel ipsPhotoPanel_small'>\n\t\t\t\t\t\t<span class='cCalendarEmbed_calendar ipsPos_left ipsType_blendLinks'>\n\t\t\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $url, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\n$nextOccurrence = $item->nextOccurrence( \\IPS\\calendar\\Date::getDate(), 'startDate' ) ?: $event->lastOccurrence( 'startDate' );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<time datetime='\nCONTENT;\n$return .= htmlspecialchars( $nextOccurrence->mysqlDatetime(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsCalendarDate'>\n\t\t\t\t\t\t\t\t\t<span class='ipsCalendarDate_month'>\nCONTENT;\n$return .= htmlspecialchars( $nextOccurrence->monthNameShort, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t\t\t\t\t<span class='ipsCalendarDate_date'>\nCONTENT;\n$return .= htmlspecialchars( $nextOccurrence->mday, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t\t\t\t<\/time>\n\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t<\/span>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"embed\", \"core\" )->embedOriginalItem( $item, FALSE, \\IPS\\Theme::i()->getTemplate( 'global', 'calendar' )->embedEventItemSnippet( $item ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t<\/div>\n\n\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->rating( 'veryLarge', $comment->mapped('rating') );\n$return .= <<<CONTENT\n \n\t\t\nCONTENT;\n\nif ( $comment->mapped('votes_total') ):\n$return .= <<<CONTENT\n\n\t\t\t<p class='ipsType_reset ipsType_medium'>{$comment->helpfulLine()}<\/p>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<hr class='ipsHr'>\n\t\t<div class='ipsType_richText ipsType_medium ipsSpacer_top ipsSpacer_half' data-truncate='3'>\n\t\t\t{$comment->truncated(TRUE)}\n\t\t<\/div>\n\n\t\t\nCONTENT;\n\nif ( \\IPS\\Settings::i()->reputation_enabled AND \\IPS\\IPS::classUsesTrait( $comment, 'IPS\\Content\\Reactable' ) AND \\count( $comment->reactions() ) ):\n$return .= <<<CONTENT\n\n\t\t\t<ul class='ipsList_inline ipsSpacer_top ipsSpacer_half'>\n\t\t\t\t<li>\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->reactionOverview( $comment, TRUE, 'small' );\n$return .= <<<CONTENT\n\n\t\t\t\t<\/li>\n\t\t\t<\/ul>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/div>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction manageFollowRow( $table, $headers, $rows, $includeFirstCommentInCommentCount=TRUE ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( \\count( $rows ) ):\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nforeach ( $rows as $row ):\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\n$idField = $row::$databaseColumnId;\n$return .= <<<CONTENT\n\n\t\t<li class=\"ipsDataItem ipsDataItem_responsivePhoto \nCONTENT;\n\nif ( $row->unread() ):\n$return .= <<<CONTENT\nipsDataItem_unread\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( method_exists( $row, 'tableClass' ) && $row->tableClass() ):\n$return .= <<<CONTENT\nipsDataItem_\nCONTENT;\n$return .= htmlspecialchars( $row->tableClass(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( $row->hidden() ):\n$return .= <<<CONTENT\nipsModerated\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\" data-controller='core.front.system.manageFollowed' data-followID='\nCONTENT;\n$return .= htmlspecialchars( $row->_followData['follow_area'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n-\nCONTENT;\n$return .= htmlspecialchars( $row->_followData['follow_rel_id'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t\t<div class='ipsDataItem_generic ipsDataItem_size2 ipsDataItem_imageColumn'>\n\t\t\t\t\nCONTENT;\n\nif ( $row->nextOccurrence( \\IPS\\calendar\\Date::getDate(), 'startDate' ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<time datetime='\nCONTENT;\n$return .= htmlspecialchars( $row->nextOccurrence( \\IPS\\calendar\\Date::getDate(), 'startDate' )->mysqlDatetime(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsCalendarDate ipsCalendarDate_large'>\n\t\t\t\t\t\t<span class='ipsCalendarDate_month'>\nCONTENT;\n$return .= htmlspecialchars( $row->nextOccurrence( \\IPS\\calendar\\Date::getDate(), 'startDate' )->monthNameShort, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t\t<span class='ipsCalendarDate_date'>\nCONTENT;\n$return .= htmlspecialchars( $row->nextOccurrence( \\IPS\\calendar\\Date::getDate(), 'startDate' )->mday, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t<\/time>\n\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t<time datetime='\nCONTENT;\n$return .= htmlspecialchars( $row->lastOccurrence( 'startDate' )->mysqlDatetime(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsCalendarDate ipsCalendarDate_large'>\n\t\t\t\t\t\t<span class='ipsCalendarDate_month'>\nCONTENT;\n$return .= htmlspecialchars( $row->lastOccurrence( 'startDate' )->monthNameShort, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t\t<span class='ipsCalendarDate_date'>\nCONTENT;\n$return .= htmlspecialchars( $row->lastOccurrence( 'startDate' )->mday, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t<\/time>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<\/div>\n\t\t\t<div class='ipsDataItem_main ipsPos_middle'>\n\t\t\t\t<h4 class='ipsDataItem_title ipsContained_container'>\n\t\t\t\t\t\nCONTENT;\n\nif ( $row->mapped('locked') ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<i class=\"fa fa-lock\"><\/i>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n\t\t\t\t\t\nCONTENT;\n\nif ( $row->mapped('pinned') || $row->mapped('featured') || $row->hidden() === -1 || $row->hidden() === 1 ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $row->hidden() === -1 ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<span class=\"ipsBadge ipsBadge_icon ipsBadge_small ipsBadge_warning\" data-ipsTooltip title='\nCONTENT;\n$return .= htmlspecialchars( $row->hiddenBlurb(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'><i class='fa fa-eye-slash'><\/i><\/span>\n\t\t\t\t\t\t\t\nCONTENT;\n\nelseif ( $row->hidden() === 1 ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<span class=\"ipsBadge ipsBadge_icon ipsBadge_small ipsBadge_warning\" data-ipsTooltip title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'pending_approval', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'><i class='fa fa-warning'><\/i><\/span>\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $row->mapped('pinned') ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<span class=\"ipsBadge ipsBadge_icon ipsBadge_small ipsBadge_positive\" data-ipsTooltip title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'pinned', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'><i class='fa fa-thumb-tack'><\/i><\/span>\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $row->mapped('featured') ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<span class=\"ipsBadge ipsBadge_icon ipsBadge_small ipsBadge_positive\" data-ipsTooltip title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'featured', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'><i class='fa fa-star'><\/i><\/span>\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<\/span>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n\t\t\t\t\t\nCONTENT;\n\nif ( $row->prefix() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<span>\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->prefix( $row->prefix( TRUE ), $row->prefix() );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\n\t\t\t\t\t<span class='ipsType_break ipsContained'>\n\t\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $row->url(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $row->mapped('title') ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $row->mapped('title'), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n<em class=\"ipsType_light\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'content_deleted', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/em>\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<\/a>\n\t\t\t\t\t<\/span>\n\t\t\t\t<\/h4>\n\t\t\t\t<div class='ipsDataItem_meta ipsType_light ipsType_blendLinks' data-ipsTruncate data-ipsTruncate-size='2 lines' data-ipsTruncate-type='remove'>\n\t\t\t\t\t\nCONTENT;\n\nif ( method_exists( $row, 'tableDescription' ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t{$row->tableDescription()}\n\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n                        \nCONTENT;\n\n$htmlsprintf = array($row->author()->link( $row->warningRef() )); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'byline', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'htmlsprintf' => $htmlsprintf ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\n$val = ( $row->__get( $row::$databaseColumnMap['date'] ) instanceof \\IPS\\DateTime ) ? $row->__get( $row::$databaseColumnMap['date'] ) : \\IPS\\DateTime::ts( $row->__get( $row::$databaseColumnMap['date'] ) );$return .= $val->html();\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'in', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n <a href=\"\nCONTENT;\n$return .= htmlspecialchars( $row->container()->url(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\nCONTENT;\n$return .= htmlspecialchars( $row->container()->_title, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/div>\t\t\t\t\n\t\t\t<\/div>\n\n\t\t\t<div class='ipsDataItem_generic ipsDataItem_size1 ipsType_center ipsType_large cFollowedContent_anon'>\n\t\t\t\t<span class='ipsBadge ipsBadge_icon ipsBadge_new \nCONTENT;\n\nif ( !$row->_followData['follow_is_anon'] ):\n$return .= <<<CONTENT\nipsHide\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n' data-role='followAnonymous' data-ipsTooltip title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'follow_is_anon', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'><i class='fa fa-eye-slash'><\/i><\/span>\n\t\t\t<\/div>\n\n\t\t\t<div class='ipsDataItem_generic ipsDataItem_size6 cFollowedContent_info'>\n\t\t\t\t<ul class='ipsList_reset'>\n\t\t\t\t\t<li title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'follow_when', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' data-role='followDate'><i class='fa fa-clock-o'><\/i> \nCONTENT;\n\n$val = ( $row->_followData['follow_added'] instanceof \\IPS\\DateTime ) ? $row->_followData['follow_added'] : \\IPS\\DateTime::ts( $row->_followData['follow_added'] );$return .= $val->html();\n$return .= <<<CONTENT\n<\/li>\n\t\t\t\t\t<li title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'follow_how', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' data-role='followFrequency'>\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $row->_followData['follow_notify_freq'] == 'none' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<i class='fa fa-bell-slash-o'><\/i>\n\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<i class='fa fa-bell'><\/i>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\n$val = \"follow_freq_{$row->_followData['follow_notify_freq']}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/li>\n\t\t\t\t<\/ul>\n\t\t\t<\/div>\n\n\t\t\t<div class='ipsDataItem_generic ipsDataItem_size6 ipsType_center cFollowedContent_manage'>\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"system\", \"core\" )->manageFollow( $row->_followData['follow_app'], $row->_followData['follow_area'], $row->_followData['follow_rel_id'] );\n$return .= <<<CONTENT\n\n\t\t\t<\/div>\n\n\t\t\t\nCONTENT;\n\nif ( $table->canModerate() ):\n$return .= <<<CONTENT\n\n\t\t\t\t<div class='ipsDataItem_modCheck'>\n\t\t\t\t\t<span class='ipsCustomInput'>\n\t\t\t\t\t\t<input type='checkbox' data-role='moderation' name=\"moderate[\nCONTENT;\n$return .= htmlspecialchars( $row->$idField, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n]\" data-actions=\"\nCONTENT;\n\n$return .= htmlspecialchars( implode( ' ', $table->multimodActions( $row ) ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-state='\nCONTENT;\n\nif ( $row->tableStates() ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $row->tableStates(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t\t<span><\/span>\n\t\t\t\t\t<\/span>\n\t\t\t\t<\/div>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n\t\t<\/li>\n\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction rows( $table, $headers, $rows ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( \\count( $rows ) ):\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nforeach ( $rows as $row ):\n$return .= <<<CONTENT\n\n\t\t<li class=\"ipsDataItem \nCONTENT;\n\nif ( method_exists( $row, 'tableClass' ) && $row->tableClass() ):\n$return .= <<<CONTENT\nipsDataItem_\nCONTENT;\n$return .= htmlspecialchars( $row->tableClass(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( $row->hidden() ):\n$return .= <<<CONTENT\nipsModerated\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\">\n\t\t\t<div class='ipsDataItem_generic ipsDataItem_size3 ipsPos_top'>\n\t\t\t\t\nCONTENT;\n\nif ( $row->nextOccurrence( \\IPS\\calendar\\Date::getDate(), 'startDate' ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<time datetime='\nCONTENT;\n$return .= htmlspecialchars( $row->nextOccurrence( \\IPS\\calendar\\Date::getDate(), 'startDate' )->mysqlDatetime(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsCalendarDate ipsCalendarDate_large'>\n\t\t\t\t\t\t<span class='ipsCalendarDate_month'>\nCONTENT;\n$return .= htmlspecialchars( $row->nextOccurrence( \\IPS\\calendar\\Date::getDate(), 'startDate' )->monthNameShort, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t\t<span class='ipsCalendarDate_date'>\nCONTENT;\n$return .= htmlspecialchars( $row->nextOccurrence( \\IPS\\calendar\\Date::getDate(), 'startDate' )->mday, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t<\/time>\n\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t<time datetime='\nCONTENT;\n$return .= htmlspecialchars( $row->lastOccurrence( 'startDate' )->mysqlDatetime(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsCalendarDate ipsCalendarDate_large'>\n\t\t\t\t\t\t<span class='ipsCalendarDate_month'>\nCONTENT;\n$return .= htmlspecialchars( $row->lastOccurrence( 'startDate' )->monthNameShort, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t\t<span class='ipsCalendarDate_date'>\nCONTENT;\n$return .= htmlspecialchars( $row->lastOccurrence( 'startDate' )->mday, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t<\/time>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<\/div>\n\t\t\t<div class='ipsDataItem_main'>\n\t\t\t\t<h4 class='ipsDataItem_title ipsType_sectionHead ipsContained_container'>\n\t\t\t\t\t\nCONTENT;\n\nif ( $row->mapped('locked') ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<i class=\"fa fa-lock\"><\/i>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\n\t\t\t\t\t\nCONTENT;\n\nif ( $row->mapped('pinned') || $row->mapped('featured') || $row->hidden() === -1 || $row->hidden() === 1 ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $row->hidden() === -1 ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<span class=\"ipsBadge ipsBadge_small ipsBadge_icon ipsBadge_warning\" data-ipsTooltip title='\nCONTENT;\n$return .= htmlspecialchars( $row->hiddenBlurb(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'><i class='fa fa-eye-slash'><\/i><\/span>\n\t\t\t\t\t\t\nCONTENT;\n\nelseif ( $row->hidden() === 1 ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<span class=\"ipsBadge ipsBadge_small ipsBadge_icon ipsBadge_warning\" data-ipsTooltip title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'pending_approval', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'><i class='fa fa-warning'><\/i><\/span>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $row->mapped('pinned') ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<span class=\"ipsBadge ipsBadge_small ipsBadge_icon ipsBadge_positive\" data-ipsTooltip title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'pinned', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'><i class='fa fa-thumb-tack'><\/i><\/span>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $row->mapped('featured') ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<span class=\"ipsBadge ipsBadge_small ipsBadge_icon ipsBadge_positive\" data-ipsTooltip title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'featured', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'><i class='fa fa-star'><\/i><\/span>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\n\t\t\t\t\t\nCONTENT;\n\nif ( $row->prefix() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<span>\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->prefix( $row->prefix( TRUE ), $row->prefix() );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\n\t\t\t\t\t<span class='ipsType_break ipsContained'>\n\t\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $row->url(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsTruncate ipsTruncate_line' \nCONTENT;\n\nif ( $row->tableHoverUrl ):\n$return .= <<<CONTENT\ndata-ipsHover\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $row->mapped('title') ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $row->mapped('title'), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n<em class=\"ipsType_light\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'content_deleted', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/em>\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<\/a>\n\t\t\t\t\t<\/span>\n\t\t\t\t<\/h4>\n\t\t\t\t<div class='ipsDataItem_meta ipsType_light ipsType_blendLinks'>\n\t\t\t\t\t{$row->eventBlurb()}\n\t\t\t\t<\/div>\n\n\t\t\t\t\nCONTENT;\n\nif ( $row->rsvp ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nif ( $attendees = $row->attendees() and isset( $attendees[1][ \\IPS\\Member::loggedIn()->member_id ] )  ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<p class='ipsType_large ipsType_success'><strong><i class='fa fa-check-circle'><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'you_are_going_to_this', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong><\/p>\n\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<p class='ipsType_large ipsType_light ipsFaded'><strong><i class='fa fa-times-circle'><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'you_are_not_going_to_this', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong><\/p>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n\t\t\t\t\t\nCONTENT;\n\nif ( \\count( $attendees[1] ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<ul class='ipsList_inline'>\n\t\t\t\t\t\t\t<li class='ipsType_light'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'rsvp_attend_event', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n:<\/li>\n\t\t\t\t\t\t\t\nCONTENT;\n\nforeach ( $attendees[1] as $idx => $attendee ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $idx < 6 ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t<li>\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->userPhoto( $attendee, 'tiny', NULL, NULL, TRUE );\n$return .= <<<CONTENT\n<\/li>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( \\count( $attendees[1] ) > 5 ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<li class='ipsType_light'>\nCONTENT;\n\n$pluralize = array( \\count( $attendees[1] ) - 5 ); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'and_x_more', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'pluralize' => $pluralize ) );\n$return .= <<<CONTENT\n<\/li>\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<\/ul>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nif ( \\count( $row->tags() ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t&nbsp;&nbsp;\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->tags( $row->tags(), true, true );\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<\/div>\n\t\t\t<div class='ipsDataItem_generic ipsDataItem_size8'>\n\t\t\t\t\nCONTENT;\n\nif ( $row->container()->allow_reviews ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\", 'front' )->rating( 'large', $row->averageReviewRating(), \\IPS\\Settings::i()->reviews_rating_out_of, $row->memberReviewRating() );\n$return .= <<<CONTENT\n&nbsp;&nbsp; <span class='ipsType_normal ipsType_light'>(\nCONTENT;\n\n$pluralize = array( $row->reviews ); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'num_reviews', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'pluralize' => $pluralize ) );\n$return .= <<<CONTENT\n)<\/span>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nif ( $row->container()->allow_comments ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<p class='ipsType_normal'>\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $row->comments ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $row->url()->setQueryString( 'tab', 'comments' )->setFragment('replies'), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<i class='fa fa-comment'><\/i> \nCONTENT;\n\n$pluralize = array( $row->comments ); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'num_comments', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'pluralize' => $pluralize ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $row->comments ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/p>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<\/div>\n\t\t\t\nCONTENT;\n\nif ( $table->canModerate() ):\n$return .= <<<CONTENT\n\n\t\t\t\t<div class='ipsDataItem_modCheck'>\n\t\t\t\t\t\nCONTENT;\n\n$idField = $row::$databaseColumnId;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<span class='ipsCustomInput'>\n\t\t\t\t\t\t<input type='checkbox' data-role='moderation' name=\"moderate[\nCONTENT;\n$return .= htmlspecialchars( $row->$idField, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n]\" data-actions=\"\nCONTENT;\n\n$return .= htmlspecialchars( implode( ' ', $table->multimodActions( $row ) ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-state='\nCONTENT;\n\nif ( $row->tableStates() ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $row->tableStates(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t\t<span><\/span>\n\t\t\t\t\t<\/span>\n\t\t\t\t<\/div>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<\/li>\n\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction searchResultCommentSnippet( $indexData, $nextOccurance, $startDate, $endDate, $allDay, $reviewRating, $condensed ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( $condensed ):\n$return .= <<<CONTENT\n\n\t<time datetime='\nCONTENT;\n$return .= htmlspecialchars( $nextOccurance->mysqlDatetime(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsCalendarDate ipsCalendarDate_small ipsPos_left'>\n\t\t<span class='ipsCalendarDate_month'>\nCONTENT;\n$return .= htmlspecialchars( $nextOccurance->monthNameShort, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t\t<span class='ipsCalendarDate_date'>\nCONTENT;\n$return .= htmlspecialchars( $nextOccurance->mday, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t<\/time>\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t<div class='ipsColumns ipsColumns_collapsePhone ipsColumns_noSpacing'>\n\t\t<div class='ipsColumn ipsColumn_narrow'>\n\t\t\t<time datetime='\nCONTENT;\n$return .= htmlspecialchars( $nextOccurance->mysqlDatetime(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsCalendarDate ipsCalendarDate_large ipsPos_center'>\n\t\t\t\t<span class='ipsCalendarDate_month'>\nCONTENT;\n$return .= htmlspecialchars( $nextOccurance->monthNameShort, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t<span class='ipsCalendarDate_date'>\nCONTENT;\n$return .= htmlspecialchars( $nextOccurance->mday, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t<\/time>\n\t\t<\/div>\n\t\t<div class='ipsColumn ipsColumn_fluid'>\n\t\t\t<div class='ipsStream_comment ipsPad'>\n\t\t\t\t<p class='ipsType_reset ipsType_normal'>\n\t\t\t\t\t<strong class='ipsType_normal'>\n\t\t\t\t\t\t<time datetime='\nCONTENT;\n\n$return .= htmlspecialchars( $startDate->format( 'Y-m-d' ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $startDate->dayName, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlspecialchars( $startDate->mday, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlspecialchars( $startDate->monthName, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlspecialchars( $startDate->year, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nif ( !$allDay ):\n$return .= <<<CONTENT\n, \nCONTENT;\n$return .= htmlspecialchars( $startDate->localeTime( FALSE ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<\/time>\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $endDate ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'until_lc', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\n$sameDay = !( ($startDate->mday != $endDate->mday) or ($startDate->mon != $endDate->mon) or ($startDate->year != $endDate->year) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<time datetime='\nCONTENT;\n\n$return .= htmlspecialchars( $endDate->format( 'Y-m-d' ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( !$sameDay ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $endDate->dayName, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlspecialchars( $endDate->mday, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlspecialchars( $endDate->monthName, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlspecialchars( $endDate->year, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\nif ( !$allDay ):\n$return .= <<<CONTENT\n\nCONTENT;\n\nif ( !$sameDay ):\n$return .= <<<CONTENT\n, \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $endDate->localeTime( FALSE ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<\/time>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/strong>\n\t\t\t\t<\/p>\n\t\t\t\t\nCONTENT;\n\nif ( $reviewRating !== NULL ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->rating( 'medium', $reviewRating );\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nif ( trim( $indexData['index_content'] ) !== '' ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<div class='ipsType_richText ipsType_break ipsType_medium ipsSpacer_top ipsSpacer_half' \nCONTENT;\n\nif ( !( \\IPS\\Dispatcher::i()->application->directory == 'core' and \\IPS\\Dispatcher::i()->module and \\IPS\\Dispatcher::i()->module->key == 'search' ) ):\n$return .= <<<CONTENT\ndata-ipsTruncate data-ipsTruncate-type='remove' data-ipsTruncate-size='3 lines' data-ipsTruncate-watch='false'\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\ndata-searchable data-findTerm\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Content\\Search\\Result::preDisplay( $indexData['index_content'] );\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/div>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<\/div>\n\t\t<\/div>\n\t<\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction searchResultEventSnippet( $indexData, $itemData, $nextOccurance, $startDate, $endDate, $allDay, $condensed ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( $condensed ):\n$return .= <<<CONTENT\n\n\t<time datetime='\nCONTENT;\n$return .= htmlspecialchars( $nextOccurance->mysqlDatetime(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsCalendarDate ipsCalendarDate_small ipsPos_left'>\n\t\t<span class='ipsCalendarDate_month'>\nCONTENT;\n$return .= htmlspecialchars( $nextOccurance->monthNameShort, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t\t<span class='ipsCalendarDate_date'>\nCONTENT;\n$return .= htmlspecialchars( $nextOccurance->mday, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t<\/time>\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t<div class='ipsColumns ipsColumns_collapsePhone'>\n\t\t<div class='ipsColumn ipsColumn_narrow'>\n\t\t\t<time datetime='\nCONTENT;\n$return .= htmlspecialchars( $nextOccurance->mysqlDatetime(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsCalendarDate ipsCalendarDate_large ipsPos_center'>\n\t\t\t\t<span class='ipsCalendarDate_month'>\nCONTENT;\n$return .= htmlspecialchars( $nextOccurance->monthNameShort, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t<span class='ipsCalendarDate_date'>\nCONTENT;\n$return .= htmlspecialchars( $nextOccurance->mday, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t<\/time>\n\t\t<\/div>\n\t\t<div class='ipsColumn ipsColumn_fluid ipsStream_snippetInfo'>\n\t\t\t<strong class='ipsType_normal'>\n\t\t\t\t<time datetime='\nCONTENT;\n\n$return .= htmlspecialchars( $startDate->format( 'Y-m-d' ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $startDate->dayName, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlspecialchars( $startDate->mday, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlspecialchars( $startDate->monthName, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlspecialchars( $startDate->year, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nif ( !$allDay ):\n$return .= <<<CONTENT\n, \nCONTENT;\n$return .= htmlspecialchars( $startDate->localeTime( FALSE ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/time>\n\t\t\t\t\nCONTENT;\n\nif ( $endDate ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'until_lc', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\n$sameDay = !( ($startDate->mday != $endDate->mday) or ($startDate->mon != $endDate->mon) or ($startDate->year != $endDate->year) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t<time datetime='\nCONTENT;\n\n$return .= htmlspecialchars( $endDate->format( 'Y-m-d' ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t\t\nCONTENT;\n\nif ( !$sameDay ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $endDate->dayName, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlspecialchars( $endDate->mday, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlspecialchars( $endDate->monthName, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlspecialchars( $endDate->year, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\nif ( !$allDay ):\n$return .= <<<CONTENT\n\nCONTENT;\n\nif ( !$sameDay ):\n$return .= <<<CONTENT\n, \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $endDate->localeTime( FALSE ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/time>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<\/strong>\n\n\t\t\t\nCONTENT;\n\nif ( trim( $indexData['index_content'] ) !== '' ):\n$return .= <<<CONTENT\n\n\t\t\t\t<div class='ipsSpacer_top ipsSpacer_half ipsType_richText ipsType_break ipsType_medium' \nCONTENT;\n\nif ( !( \\IPS\\Dispatcher::i()->application->directory == 'core' and \\IPS\\Dispatcher::i()->module and \\IPS\\Dispatcher::i()->module->key == 'search' ) ):\n$return .= <<<CONTENT\ndata-ipsTruncate data-ipsTruncate-type='remove' data-ipsTruncate-size='2 lines' data-ipsTruncate-watch='false'\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\ndata-searchable data-findTerm\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Content\\Search\\Result::preDisplay( $indexData['index_content'] );\n$return .= <<<CONTENT\n\n\t\t\t\t<\/div>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<\/div>\n\t<\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}}"
VALUE;
